                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module webserver
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _makeTcpAck2
                                     12 	.globl _makeTcpAck3
                                     13 	.globl _makeTcpFinPshAck
                                     14 	.globl _calculateTcpChecksum
                                     15 	.globl _calculateIPChecksum
                                     16 	.globl ___memcpy
                                     17 	.globl _strlen
                                     18 	.globl _memset
                                     19 	.globl _memmove
                                     20 	.globl _printf
                                     21 	.globl _transmit_tcp_packet
                                     22 	.globl _enc_eth_read
                                     23 	.globl _enc_buffer_read
                                     24 	.globl _enc_control_write
                                     25 	.globl _P5_7
                                     26 	.globl _P5_6
                                     27 	.globl _P5_5
                                     28 	.globl _P5_4
                                     29 	.globl _P5_3
                                     30 	.globl _P5_2
                                     31 	.globl _P5_1
                                     32 	.globl _P5_0
                                     33 	.globl _P4_7
                                     34 	.globl _P4_6
                                     35 	.globl _P4_5
                                     36 	.globl _P4_4
                                     37 	.globl _P4_3
                                     38 	.globl _P4_2
                                     39 	.globl _P4_1
                                     40 	.globl _P4_0
                                     41 	.globl _PX0L
                                     42 	.globl _PT0L
                                     43 	.globl _PX1L
                                     44 	.globl _PT1L
                                     45 	.globl _PSL
                                     46 	.globl _PT2L
                                     47 	.globl _PPCL
                                     48 	.globl _EC
                                     49 	.globl _CCF0
                                     50 	.globl _CCF1
                                     51 	.globl _CCF2
                                     52 	.globl _CCF3
                                     53 	.globl _CCF4
                                     54 	.globl _CR
                                     55 	.globl _CF
                                     56 	.globl _TF2
                                     57 	.globl _EXF2
                                     58 	.globl _RCLK
                                     59 	.globl _TCLK
                                     60 	.globl _EXEN2
                                     61 	.globl _TR2
                                     62 	.globl _C_T2
                                     63 	.globl _CP_RL2
                                     64 	.globl _T2CON_7
                                     65 	.globl _T2CON_6
                                     66 	.globl _T2CON_5
                                     67 	.globl _T2CON_4
                                     68 	.globl _T2CON_3
                                     69 	.globl _T2CON_2
                                     70 	.globl _T2CON_1
                                     71 	.globl _T2CON_0
                                     72 	.globl _PT2
                                     73 	.globl _ET2
                                     74 	.globl _CY
                                     75 	.globl _AC
                                     76 	.globl _F0
                                     77 	.globl _RS1
                                     78 	.globl _RS0
                                     79 	.globl _OV
                                     80 	.globl _F1
                                     81 	.globl _P
                                     82 	.globl _PS
                                     83 	.globl _PT1
                                     84 	.globl _PX1
                                     85 	.globl _PT0
                                     86 	.globl _PX0
                                     87 	.globl _RD
                                     88 	.globl _WR
                                     89 	.globl _T1
                                     90 	.globl _T0
                                     91 	.globl _INT1
                                     92 	.globl _INT0
                                     93 	.globl _TXD
                                     94 	.globl _RXD
                                     95 	.globl _P3_7
                                     96 	.globl _P3_6
                                     97 	.globl _P3_5
                                     98 	.globl _P3_4
                                     99 	.globl _P3_3
                                    100 	.globl _P3_2
                                    101 	.globl _P3_1
                                    102 	.globl _P3_0
                                    103 	.globl _EA
                                    104 	.globl _ES
                                    105 	.globl _ET1
                                    106 	.globl _EX1
                                    107 	.globl _ET0
                                    108 	.globl _EX0
                                    109 	.globl _P2_7
                                    110 	.globl _P2_6
                                    111 	.globl _P2_5
                                    112 	.globl _P2_4
                                    113 	.globl _P2_3
                                    114 	.globl _P2_2
                                    115 	.globl _P2_1
                                    116 	.globl _P2_0
                                    117 	.globl _SM0
                                    118 	.globl _SM1
                                    119 	.globl _SM2
                                    120 	.globl _REN
                                    121 	.globl _TB8
                                    122 	.globl _RB8
                                    123 	.globl _TI
                                    124 	.globl _RI
                                    125 	.globl _P1_7
                                    126 	.globl _P1_6
                                    127 	.globl _P1_5
                                    128 	.globl _P1_4
                                    129 	.globl _P1_3
                                    130 	.globl _P1_2
                                    131 	.globl _P1_1
                                    132 	.globl _P1_0
                                    133 	.globl _TF1
                                    134 	.globl _TR1
                                    135 	.globl _TF0
                                    136 	.globl _TR0
                                    137 	.globl _IE1
                                    138 	.globl _IT1
                                    139 	.globl _IE0
                                    140 	.globl _IT0
                                    141 	.globl _P0_7
                                    142 	.globl _P0_6
                                    143 	.globl _P0_5
                                    144 	.globl _P0_4
                                    145 	.globl _P0_3
                                    146 	.globl _P0_2
                                    147 	.globl _P0_1
                                    148 	.globl _P0_0
                                    149 	.globl _EECON
                                    150 	.globl _KBF
                                    151 	.globl _KBE
                                    152 	.globl _KBLS
                                    153 	.globl _BRL
                                    154 	.globl _BDRCON
                                    155 	.globl _T2MOD
                                    156 	.globl _SPDAT
                                    157 	.globl _SPSTA
                                    158 	.globl _SPCON
                                    159 	.globl _SADEN
                                    160 	.globl _SADDR
                                    161 	.globl _WDTPRG
                                    162 	.globl _WDTRST
                                    163 	.globl _P5
                                    164 	.globl _P4
                                    165 	.globl _IPH1
                                    166 	.globl _IPL1
                                    167 	.globl _IPH0
                                    168 	.globl _IPL0
                                    169 	.globl _IEN1
                                    170 	.globl _IEN0
                                    171 	.globl _CMOD
                                    172 	.globl _CL
                                    173 	.globl _CH
                                    174 	.globl _CCON
                                    175 	.globl _CCAPM4
                                    176 	.globl _CCAPM3
                                    177 	.globl _CCAPM2
                                    178 	.globl _CCAPM1
                                    179 	.globl _CCAPM0
                                    180 	.globl _CCAP4L
                                    181 	.globl _CCAP3L
                                    182 	.globl _CCAP2L
                                    183 	.globl _CCAP1L
                                    184 	.globl _CCAP0L
                                    185 	.globl _CCAP4H
                                    186 	.globl _CCAP3H
                                    187 	.globl _CCAP2H
                                    188 	.globl _CCAP1H
                                    189 	.globl _CCAP0H
                                    190 	.globl _CKCON1
                                    191 	.globl _CKCON0
                                    192 	.globl _CKRL
                                    193 	.globl _AUXR1
                                    194 	.globl _AUXR
                                    195 	.globl _TH2
                                    196 	.globl _TL2
                                    197 	.globl _RCAP2H
                                    198 	.globl _RCAP2L
                                    199 	.globl _T2CON
                                    200 	.globl _B
                                    201 	.globl _ACC
                                    202 	.globl _PSW
                                    203 	.globl _IP
                                    204 	.globl _P3
                                    205 	.globl _IE
                                    206 	.globl _P2
                                    207 	.globl _SBUF
                                    208 	.globl _SCON
                                    209 	.globl _P1
                                    210 	.globl _TH1
                                    211 	.globl _TH0
                                    212 	.globl _TL1
                                    213 	.globl _TL0
                                    214 	.globl _TMOD
                                    215 	.globl _TCON
                                    216 	.globl _PCON
                                    217 	.globl _DPH
                                    218 	.globl _DPL
                                    219 	.globl _SP
                                    220 	.globl _P0
                                    221 	.globl _connectionState
                                    222 	.globl _prevAck
                                    223 	.globl _prevSeq
                                    224 	.globl _buffer
                                    225 	.globl _packetReceive
                                    226 	.globl _makeArpReply
                                    227 	.globl _makeTcpSynAck
                                    228 	.globl _makeHttpResponse
                                    229 	.globl _makeTcpAck
                                    230 	.globl _trial_arp_request
                                    231 	.globl _packetLoop
                                    232 ;--------------------------------------------------------
                                    233 ; special function registers
                                    234 ;--------------------------------------------------------
                                    235 	.area RSEG    (ABS,DATA)
      000000                        236 	.org 0x0000
                           000080   237 _P0	=	0x0080
                           000081   238 _SP	=	0x0081
                           000082   239 _DPL	=	0x0082
                           000083   240 _DPH	=	0x0083
                           000087   241 _PCON	=	0x0087
                           000088   242 _TCON	=	0x0088
                           000089   243 _TMOD	=	0x0089
                           00008A   244 _TL0	=	0x008a
                           00008B   245 _TL1	=	0x008b
                           00008C   246 _TH0	=	0x008c
                           00008D   247 _TH1	=	0x008d
                           000090   248 _P1	=	0x0090
                           000098   249 _SCON	=	0x0098
                           000099   250 _SBUF	=	0x0099
                           0000A0   251 _P2	=	0x00a0
                           0000A8   252 _IE	=	0x00a8
                           0000B0   253 _P3	=	0x00b0
                           0000B8   254 _IP	=	0x00b8
                           0000D0   255 _PSW	=	0x00d0
                           0000E0   256 _ACC	=	0x00e0
                           0000F0   257 _B	=	0x00f0
                           0000C8   258 _T2CON	=	0x00c8
                           0000CA   259 _RCAP2L	=	0x00ca
                           0000CB   260 _RCAP2H	=	0x00cb
                           0000CC   261 _TL2	=	0x00cc
                           0000CD   262 _TH2	=	0x00cd
                           00008E   263 _AUXR	=	0x008e
                           0000A2   264 _AUXR1	=	0x00a2
                           000097   265 _CKRL	=	0x0097
                           00008F   266 _CKCON0	=	0x008f
                           0000AF   267 _CKCON1	=	0x00af
                           0000FA   268 _CCAP0H	=	0x00fa
                           0000FB   269 _CCAP1H	=	0x00fb
                           0000FC   270 _CCAP2H	=	0x00fc
                           0000FD   271 _CCAP3H	=	0x00fd
                           0000FE   272 _CCAP4H	=	0x00fe
                           0000EA   273 _CCAP0L	=	0x00ea
                           0000EB   274 _CCAP1L	=	0x00eb
                           0000EC   275 _CCAP2L	=	0x00ec
                           0000ED   276 _CCAP3L	=	0x00ed
                           0000EE   277 _CCAP4L	=	0x00ee
                           0000DA   278 _CCAPM0	=	0x00da
                           0000DB   279 _CCAPM1	=	0x00db
                           0000DC   280 _CCAPM2	=	0x00dc
                           0000DD   281 _CCAPM3	=	0x00dd
                           0000DE   282 _CCAPM4	=	0x00de
                           0000D8   283 _CCON	=	0x00d8
                           0000F9   284 _CH	=	0x00f9
                           0000E9   285 _CL	=	0x00e9
                           0000D9   286 _CMOD	=	0x00d9
                           0000A8   287 _IEN0	=	0x00a8
                           0000B1   288 _IEN1	=	0x00b1
                           0000B8   289 _IPL0	=	0x00b8
                           0000B7   290 _IPH0	=	0x00b7
                           0000B2   291 _IPL1	=	0x00b2
                           0000B3   292 _IPH1	=	0x00b3
                           0000C0   293 _P4	=	0x00c0
                           0000E8   294 _P5	=	0x00e8
                           0000A6   295 _WDTRST	=	0x00a6
                           0000A7   296 _WDTPRG	=	0x00a7
                           0000A9   297 _SADDR	=	0x00a9
                           0000B9   298 _SADEN	=	0x00b9
                           0000C3   299 _SPCON	=	0x00c3
                           0000C4   300 _SPSTA	=	0x00c4
                           0000C5   301 _SPDAT	=	0x00c5
                           0000C9   302 _T2MOD	=	0x00c9
                           00009B   303 _BDRCON	=	0x009b
                           00009A   304 _BRL	=	0x009a
                           00009C   305 _KBLS	=	0x009c
                           00009D   306 _KBE	=	0x009d
                           00009E   307 _KBF	=	0x009e
                           0000D2   308 _EECON	=	0x00d2
                                    309 ;--------------------------------------------------------
                                    310 ; special function bits
                                    311 ;--------------------------------------------------------
                                    312 	.area RSEG    (ABS,DATA)
      000000                        313 	.org 0x0000
                           000080   314 _P0_0	=	0x0080
                           000081   315 _P0_1	=	0x0081
                           000082   316 _P0_2	=	0x0082
                           000083   317 _P0_3	=	0x0083
                           000084   318 _P0_4	=	0x0084
                           000085   319 _P0_5	=	0x0085
                           000086   320 _P0_6	=	0x0086
                           000087   321 _P0_7	=	0x0087
                           000088   322 _IT0	=	0x0088
                           000089   323 _IE0	=	0x0089
                           00008A   324 _IT1	=	0x008a
                           00008B   325 _IE1	=	0x008b
                           00008C   326 _TR0	=	0x008c
                           00008D   327 _TF0	=	0x008d
                           00008E   328 _TR1	=	0x008e
                           00008F   329 _TF1	=	0x008f
                           000090   330 _P1_0	=	0x0090
                           000091   331 _P1_1	=	0x0091
                           000092   332 _P1_2	=	0x0092
                           000093   333 _P1_3	=	0x0093
                           000094   334 _P1_4	=	0x0094
                           000095   335 _P1_5	=	0x0095
                           000096   336 _P1_6	=	0x0096
                           000097   337 _P1_7	=	0x0097
                           000098   338 _RI	=	0x0098
                           000099   339 _TI	=	0x0099
                           00009A   340 _RB8	=	0x009a
                           00009B   341 _TB8	=	0x009b
                           00009C   342 _REN	=	0x009c
                           00009D   343 _SM2	=	0x009d
                           00009E   344 _SM1	=	0x009e
                           00009F   345 _SM0	=	0x009f
                           0000A0   346 _P2_0	=	0x00a0
                           0000A1   347 _P2_1	=	0x00a1
                           0000A2   348 _P2_2	=	0x00a2
                           0000A3   349 _P2_3	=	0x00a3
                           0000A4   350 _P2_4	=	0x00a4
                           0000A5   351 _P2_5	=	0x00a5
                           0000A6   352 _P2_6	=	0x00a6
                           0000A7   353 _P2_7	=	0x00a7
                           0000A8   354 _EX0	=	0x00a8
                           0000A9   355 _ET0	=	0x00a9
                           0000AA   356 _EX1	=	0x00aa
                           0000AB   357 _ET1	=	0x00ab
                           0000AC   358 _ES	=	0x00ac
                           0000AF   359 _EA	=	0x00af
                           0000B0   360 _P3_0	=	0x00b0
                           0000B1   361 _P3_1	=	0x00b1
                           0000B2   362 _P3_2	=	0x00b2
                           0000B3   363 _P3_3	=	0x00b3
                           0000B4   364 _P3_4	=	0x00b4
                           0000B5   365 _P3_5	=	0x00b5
                           0000B6   366 _P3_6	=	0x00b6
                           0000B7   367 _P3_7	=	0x00b7
                           0000B0   368 _RXD	=	0x00b0
                           0000B1   369 _TXD	=	0x00b1
                           0000B2   370 _INT0	=	0x00b2
                           0000B3   371 _INT1	=	0x00b3
                           0000B4   372 _T0	=	0x00b4
                           0000B5   373 _T1	=	0x00b5
                           0000B6   374 _WR	=	0x00b6
                           0000B7   375 _RD	=	0x00b7
                           0000B8   376 _PX0	=	0x00b8
                           0000B9   377 _PT0	=	0x00b9
                           0000BA   378 _PX1	=	0x00ba
                           0000BB   379 _PT1	=	0x00bb
                           0000BC   380 _PS	=	0x00bc
                           0000D0   381 _P	=	0x00d0
                           0000D1   382 _F1	=	0x00d1
                           0000D2   383 _OV	=	0x00d2
                           0000D3   384 _RS0	=	0x00d3
                           0000D4   385 _RS1	=	0x00d4
                           0000D5   386 _F0	=	0x00d5
                           0000D6   387 _AC	=	0x00d6
                           0000D7   388 _CY	=	0x00d7
                           0000AD   389 _ET2	=	0x00ad
                           0000BD   390 _PT2	=	0x00bd
                           0000C8   391 _T2CON_0	=	0x00c8
                           0000C9   392 _T2CON_1	=	0x00c9
                           0000CA   393 _T2CON_2	=	0x00ca
                           0000CB   394 _T2CON_3	=	0x00cb
                           0000CC   395 _T2CON_4	=	0x00cc
                           0000CD   396 _T2CON_5	=	0x00cd
                           0000CE   397 _T2CON_6	=	0x00ce
                           0000CF   398 _T2CON_7	=	0x00cf
                           0000C8   399 _CP_RL2	=	0x00c8
                           0000C9   400 _C_T2	=	0x00c9
                           0000CA   401 _TR2	=	0x00ca
                           0000CB   402 _EXEN2	=	0x00cb
                           0000CC   403 _TCLK	=	0x00cc
                           0000CD   404 _RCLK	=	0x00cd
                           0000CE   405 _EXF2	=	0x00ce
                           0000CF   406 _TF2	=	0x00cf
                           0000DF   407 _CF	=	0x00df
                           0000DE   408 _CR	=	0x00de
                           0000DC   409 _CCF4	=	0x00dc
                           0000DB   410 _CCF3	=	0x00db
                           0000DA   411 _CCF2	=	0x00da
                           0000D9   412 _CCF1	=	0x00d9
                           0000D8   413 _CCF0	=	0x00d8
                           0000AE   414 _EC	=	0x00ae
                           0000BE   415 _PPCL	=	0x00be
                           0000BD   416 _PT2L	=	0x00bd
                           0000BC   417 _PSL	=	0x00bc
                           0000BB   418 _PT1L	=	0x00bb
                           0000BA   419 _PX1L	=	0x00ba
                           0000B9   420 _PT0L	=	0x00b9
                           0000B8   421 _PX0L	=	0x00b8
                           0000C0   422 _P4_0	=	0x00c0
                           0000C1   423 _P4_1	=	0x00c1
                           0000C2   424 _P4_2	=	0x00c2
                           0000C3   425 _P4_3	=	0x00c3
                           0000C4   426 _P4_4	=	0x00c4
                           0000C5   427 _P4_5	=	0x00c5
                           0000C6   428 _P4_6	=	0x00c6
                           0000C7   429 _P4_7	=	0x00c7
                           0000E8   430 _P5_0	=	0x00e8
                           0000E9   431 _P5_1	=	0x00e9
                           0000EA   432 _P5_2	=	0x00ea
                           0000EB   433 _P5_3	=	0x00eb
                           0000EC   434 _P5_4	=	0x00ec
                           0000ED   435 _P5_5	=	0x00ed
                           0000EE   436 _P5_6	=	0x00ee
                           0000EF   437 _P5_7	=	0x00ef
                                    438 ;--------------------------------------------------------
                                    439 ; overlayable register banks
                                    440 ;--------------------------------------------------------
                                    441 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        442 	.ds 8
                                    443 ;--------------------------------------------------------
                                    444 ; internal ram data
                                    445 ;--------------------------------------------------------
                                    446 	.area DSEG    (DATA)
      000000                        447 _makeTcpAck3_sloc0_1_0:
      000000                        448 	.ds 4
      000004                        449 _makeTcpAck2_sloc0_1_0:
      000004                        450 	.ds 2
      000006                        451 _makeTcpAck2_sloc1_1_0:
      000006                        452 	.ds 4
      00000A                        453 _makeTcpAck2_sloc2_1_0:
      00000A                        454 	.ds 4
      00000E                        455 _makeTcpSynAck_sloc0_1_0:
      00000E                        456 	.ds 4
      000012                        457 _makeHttpResponse_sloc0_1_0:
      000012                        458 	.ds 2
      000014                        459 _makeHttpResponse_sloc1_1_0:
      000014                        460 	.ds 4
      000018                        461 _makeHttpResponse_sloc2_1_0:
      000018                        462 	.ds 4
      00001C                        463 _makeHttpResponse_sloc3_1_0:
      00001C                        464 	.ds 4
      000020                        465 _makeHttpResponse_sloc4_1_0:
      000020                        466 	.ds 4
      000024                        467 _makeHttpResponse_sloc5_1_0:
      000024                        468 	.ds 2
                                    469 ;--------------------------------------------------------
                                    470 ; overlayable items in internal ram
                                    471 ;--------------------------------------------------------
                                    472 	.area	OSEG    (OVR,DATA)
      000000                        473 _calculateIPChecksum_sloc0_1_0:
      000000                        474 	.ds 2
      000002                        475 _calculateIPChecksum_sloc1_1_0:
      000002                        476 	.ds 4
                                    477 	.area	OSEG    (OVR,DATA)
      000000                        478 _calculateTcpChecksum_sloc0_1_0:
      000000                        479 	.ds 1
      000001                        480 _calculateTcpChecksum_sloc1_1_0:
      000001                        481 	.ds 3
      000004                        482 _calculateTcpChecksum_sloc2_1_0:
      000004                        483 	.ds 4
      000008                        484 _calculateTcpChecksum_sloc3_1_0:
      000008                        485 	.ds 4
      00000C                        486 _calculateTcpChecksum_sloc4_1_0:
      00000C                        487 	.ds 4
                                    488 ;--------------------------------------------------------
                                    489 ; indirectly addressable internal ram data
                                    490 ;--------------------------------------------------------
                                    491 	.area ISEG    (DATA)
                                    492 ;--------------------------------------------------------
                                    493 ; absolute internal ram data
                                    494 ;--------------------------------------------------------
                                    495 	.area IABS    (ABS,DATA)
                                    496 	.area IABS    (ABS,DATA)
                                    497 ;--------------------------------------------------------
                                    498 ; bit data
                                    499 ;--------------------------------------------------------
                                    500 	.area BSEG    (BIT)
                                    501 ;--------------------------------------------------------
                                    502 ; paged external ram data
                                    503 ;--------------------------------------------------------
                                    504 	.area PSEG    (PAG,XDATA)
                                    505 ;--------------------------------------------------------
                                    506 ; uninitialized external ram data
                                    507 ;--------------------------------------------------------
                                    508 	.area XSEG    (XDATA)
      000000                        509 _buffer::
      000000                        510 	.ds 1500
      0005DC                        511 _prevSeq::
      0005DC                        512 	.ds 4
      0005E0                        513 _prevAck::
      0005E0                        514 	.ds 4
      0005E4                        515 _packetReceive_device_mac_10000_90:
      0005E4                        516 	.ds 6
      0005EA                        517 _packetReceive_target_mac_10000_90:
      0005EA                        518 	.ds 6
      0005F0                        519 _packetReceive_device_ip_10000_90:
      0005F0                        520 	.ds 4
      0005F4                        521 _packetReceive_target_ip_10000_90:
      0005F4                        522 	.ds 4
      0005F8                        523 _packetReceive_gNextPacketPtr_10000_90:
      0005F8                        524 	.ds 2
      0005FA                        525 _packetReceive_unreleasedPacket_10000_90:
      0005FA                        526 	.ds 1
      0005FB                        527 _packetReceive_len_10000_90:
      0005FB                        528 	.ds 2
      0005FD                        529 _packetReceive_header_20002_96:
      0005FD                        530 	.ds 6
      000603                        531 _packetReceive_start_20003_97:
      000603                        532 	.ds 2
      000605                        533 _makeArpReply_device_mac_10000_100:
      000605                        534 	.ds 6
      00060B                        535 _makeArpReply_target_mac_10000_100:
      00060B                        536 	.ds 6
      000611                        537 _makeArpReply_device_ip_10000_100:
      000611                        538 	.ds 4
      000615                        539 _makeArpReply_target_ip_10000_100:
      000615                        540 	.ds 4
      000619                        541 _calculateIPChecksum_buffer_10000_101:
      000619                        542 	.ds 3
      00061C                        543 _calculateIPChecksum_sum_10001_103:
      00061C                        544 	.ds 4
      000620                        545 _calculateIPChecksum_i_20001_104:
      000620                        546 	.ds 2
      000622                        547 _calculateTcpChecksum_buffer_10000_108:
      000622                        548 	.ds 3
      000625                        549 _calculateTcpChecksum_sum_10001_110:
      000625                        550 	.ds 4
      000629                        551 _calculateTcpChecksum_i_20001_115:
      000629                        552 	.ds 2
      00062B                        553 _makeTcpFinPshAck_device_mac_10000_120:
      00062B                        554 	.ds 6
      000631                        555 _makeTcpFinPshAck_target_mac_10000_120:
      000631                        556 	.ds 6
      000637                        557 _makeTcpFinPshAck_device_ip_10000_120:
      000637                        558 	.ds 4
      00063B                        559 _makeTcpFinPshAck_target_ip_10000_120:
      00063B                        560 	.ds 4
      00063F                        561 _makeTcpFinPshAck_serverSeqNum_10002_122:
      00063F                        562 	.ds 4
      000643                        563 _makeTcpFinPshAck_ackNum_10002_122:
      000643                        564 	.ds 4
      000647                        565 _makeTcpAck3_device_mac_10000_125:
      000647                        566 	.ds 6
      00064D                        567 _makeTcpAck3_target_mac_10000_125:
      00064D                        568 	.ds 6
      000653                        569 _makeTcpAck3_device_ip_10000_125:
      000653                        570 	.ds 4
      000657                        571 _makeTcpAck3_target_ip_10000_125:
      000657                        572 	.ds 4
      00065B                        573 _makeTcpAck2_device_mac_10000_130:
      00065B                        574 	.ds 6
      000661                        575 _makeTcpAck2_target_mac_10000_130:
      000661                        576 	.ds 6
      000667                        577 _makeTcpAck2_device_ip_10000_130:
      000667                        578 	.ds 4
      00066B                        579 _makeTcpAck2_target_ip_10000_130:
      00066B                        580 	.ds 4
      00066F                        581 _makeTcpSynAck_device_mac_10000_135:
      00066F                        582 	.ds 6
      000675                        583 _makeTcpSynAck_target_mac_10000_135:
      000675                        584 	.ds 6
      00067B                        585 _makeTcpSynAck_device_ip_10000_135:
      00067B                        586 	.ds 4
      00067F                        587 _makeTcpSynAck_target_ip_10000_135:
      00067F                        588 	.ds 4
      000683                        589 _makeHttpResponse_device_mac_10000_140:
      000683                        590 	.ds 6
      000689                        591 _makeHttpResponse_target_mac_10000_140:
      000689                        592 	.ds 6
      00068F                        593 _makeHttpResponse_device_ip_10000_140:
      00068F                        594 	.ds 4
      000693                        595 _makeHttpResponse_target_ip_10000_140:
      000693                        596 	.ds 4
      000697                        597 _makeTcpAck_device_mac_10000_146:
      000697                        598 	.ds 6
      00069D                        599 _makeTcpAck_target_mac_10000_146:
      00069D                        600 	.ds 6
      0006A3                        601 _makeTcpAck_device_ip_10000_146:
      0006A3                        602 	.ds 4
      0006A7                        603 _makeTcpAck_target_ip_10000_146:
      0006A7                        604 	.ds 4
      0006AB                        605 _trial_arp_request_device_mac_10000_148:
      0006AB                        606 	.ds 6
      0006B1                        607 _trial_arp_request_target_mac_10000_148:
      0006B1                        608 	.ds 6
      0006B7                        609 _trial_arp_request_device_ip_10000_148:
      0006B7                        610 	.ds 4
      0006BB                        611 _trial_arp_request_target_ip_10000_148:
      0006BB                        612 	.ds 4
      0006BF                        613 _trial_arp_request_arp_packet_10001_149:
      0006BF                        614 	.ds 43
                                    615 ;--------------------------------------------------------
                                    616 ; absolute external ram data
                                    617 ;--------------------------------------------------------
                                    618 	.area XABS    (ABS,XDATA)
                                    619 ;--------------------------------------------------------
                                    620 ; initialized external ram data
                                    621 ;--------------------------------------------------------
                                    622 	.area XISEG   (XDATA)
      000000                        623 _connectionState::
      000000                        624 	.ds 1
                                    625 	.area HOME    (CODE)
                                    626 	.area GSINIT0 (CODE)
                                    627 	.area GSINIT1 (CODE)
                                    628 	.area GSINIT2 (CODE)
                                    629 	.area GSINIT3 (CODE)
                                    630 	.area GSINIT4 (CODE)
                                    631 	.area GSINIT5 (CODE)
                                    632 	.area GSINIT  (CODE)
                                    633 	.area GSFINAL (CODE)
                                    634 	.area CSEG    (CODE)
                                    635 ;--------------------------------------------------------
                                    636 ; global & static initialisations
                                    637 ;--------------------------------------------------------
                                    638 	.area HOME    (CODE)
                                    639 	.area GSINIT  (CODE)
                                    640 	.area GSFINAL (CODE)
                                    641 	.area GSINIT  (CODE)
                                    642 ;------------------------------------------------------------
                                    643 ;Allocation info for local variables in function 'packetReceive'
                                    644 ;------------------------------------------------------------
                                    645 ;device_mac                Allocated with name '_packetReceive_device_mac_10000_90'
                                    646 ;target_mac                Allocated with name '_packetReceive_target_mac_10000_90'
                                    647 ;device_ip                 Allocated with name '_packetReceive_device_ip_10000_90'
                                    648 ;target_ip                 Allocated with name '_packetReceive_target_ip_10000_90'
                                    649 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_90'
                                    650 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_90'
                                    651 ;len                       Allocated with name '_packetReceive_len_10000_90'
                                    652 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_92'
                                    653 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_94'
                                    654 ;header                    Allocated with name '_packetReceive_header_20002_96'
                                    655 ;start                     Allocated with name '_packetReceive_start_20003_97'
                                    656 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_98'
                                    657 ;------------------------------------------------------------
                                    658 ;	webserver.c:66: static uint16_t gNextPacketPtr = RX_BUFFER_START;
      000000 90r05rF8         [24]  659 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      000003 E4               [12]  660 	clr	a
      000004 F0               [24]  661 	movx	@dptr,a
      000005 A3               [24]  662 	inc	dptr
      000006 F0               [24]  663 	movx	@dptr,a
                                    664 ;	webserver.c:67: static bool unreleasedPacket = false;
      000007 90r05rFA         [24]  665 	mov	dptr,#_packetReceive_unreleasedPacket_10000_90
      00000A F0               [24]  666 	movx	@dptr,a
                                    667 ;--------------------------------------------------------
                                    668 ; Home
                                    669 ;--------------------------------------------------------
                                    670 	.area HOME    (CODE)
                                    671 	.area HOME    (CODE)
                                    672 ;--------------------------------------------------------
                                    673 ; code
                                    674 ;--------------------------------------------------------
                                    675 	.area CSEG    (CODE)
                                    676 ;------------------------------------------------------------
                                    677 ;Allocation info for local variables in function 'packetReceive'
                                    678 ;------------------------------------------------------------
                                    679 ;device_mac                Allocated with name '_packetReceive_device_mac_10000_90'
                                    680 ;target_mac                Allocated with name '_packetReceive_target_mac_10000_90'
                                    681 ;device_ip                 Allocated with name '_packetReceive_device_ip_10000_90'
                                    682 ;target_ip                 Allocated with name '_packetReceive_target_ip_10000_90'
                                    683 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_90'
                                    684 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_90'
                                    685 ;len                       Allocated with name '_packetReceive_len_10000_90'
                                    686 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_92'
                                    687 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_94'
                                    688 ;header                    Allocated with name '_packetReceive_header_20002_96'
                                    689 ;start                     Allocated with name '_packetReceive_start_20003_97'
                                    690 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_98'
                                    691 ;------------------------------------------------------------
                                    692 ;	webserver.c:60: uint16_t packetReceive(void) 
                                    693 ;	-----------------------------------------
                                    694 ;	 function packetReceive
                                    695 ;	-----------------------------------------
      000000                        696 _packetReceive:
                           000007   697 	ar7 = 0x07
                           000006   698 	ar6 = 0x06
                           000005   699 	ar5 = 0x05
                           000004   700 	ar4 = 0x04
                           000003   701 	ar3 = 0x03
                           000002   702 	ar2 = 0x02
                           000001   703 	ar1 = 0x01
                           000000   704 	ar0 = 0x00
                                    705 ;	webserver.c:62: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      000000 90r05rE4         [24]  706 	mov	dptr,#_packetReceive_device_mac_10000_90
      000003 74 02            [12]  707 	mov	a,#0x02
      000005 F0               [24]  708 	movx	@dptr,a
      000006 90r05rE5         [24]  709 	mov	dptr,#(_packetReceive_device_mac_10000_90 + 0x0001)
      000009 23               [12]  710 	rl	a
      00000A F0               [24]  711 	movx	@dptr,a
      00000B 90r05rE6         [24]  712 	mov	dptr,#(_packetReceive_device_mac_10000_90 + 0x0002)
      00000E 74 A3            [12]  713 	mov	a,#0xa3
      000010 F0               [24]  714 	movx	@dptr,a
      000011 90r05rE7         [24]  715 	mov	dptr,#(_packetReceive_device_mac_10000_90 + 0x0003)
      000014 74 3C            [12]  716 	mov	a,#0x3c
      000016 F0               [24]  717 	movx	@dptr,a
      000017 90r05rE8         [24]  718 	mov	dptr,#(_packetReceive_device_mac_10000_90 + 0x0004)
      00001A 74 4D            [12]  719 	mov	a,#0x4d
      00001C F0               [24]  720 	movx	@dptr,a
      00001D 90r05rE9         [24]  721 	mov	dptr,#(_packetReceive_device_mac_10000_90 + 0x0005)
      000020 74 50            [12]  722 	mov	a,#0x50
      000022 F0               [24]  723 	movx	@dptr,a
                                    724 ;	webserver.c:63: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      000023 90r05rEA         [24]  725 	mov	dptr,#_packetReceive_target_mac_10000_90
      000026 74 FF            [12]  726 	mov	a,#0xff
      000028 F0               [24]  727 	movx	@dptr,a
      000029 90r05rEB         [24]  728 	mov	dptr,#(_packetReceive_target_mac_10000_90 + 0x0001)
      00002C F0               [24]  729 	movx	@dptr,a
      00002D 90r05rEC         [24]  730 	mov	dptr,#(_packetReceive_target_mac_10000_90 + 0x0002)
      000030 F0               [24]  731 	movx	@dptr,a
      000031 90r05rED         [24]  732 	mov	dptr,#(_packetReceive_target_mac_10000_90 + 0x0003)
      000034 F0               [24]  733 	movx	@dptr,a
      000035 90r05rEE         [24]  734 	mov	dptr,#(_packetReceive_target_mac_10000_90 + 0x0004)
      000038 F0               [24]  735 	movx	@dptr,a
      000039 90r05rEF         [24]  736 	mov	dptr,#(_packetReceive_target_mac_10000_90 + 0x0005)
      00003C F0               [24]  737 	movx	@dptr,a
                                    738 ;	webserver.c:64: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      00003D 90r05rF0         [24]  739 	mov	dptr,#_packetReceive_device_ip_10000_90
      000040 74 C0            [12]  740 	mov	a,#0xc0
      000042 F0               [24]  741 	movx	@dptr,a
      000043 90r05rF1         [24]  742 	mov	dptr,#(_packetReceive_device_ip_10000_90 + 0x0001)
      000046 74 A8            [12]  743 	mov	a,#0xa8
      000048 F0               [24]  744 	movx	@dptr,a
      000049 90r05rF2         [24]  745 	mov	dptr,#(_packetReceive_device_ip_10000_90 + 0x0002)
      00004C 74 01            [12]  746 	mov	a,#0x01
      00004E F0               [24]  747 	movx	@dptr,a
      00004F 90r05rF3         [24]  748 	mov	dptr,#(_packetReceive_device_ip_10000_90 + 0x0003)
      000052 74 64            [12]  749 	mov	a,#0x64
      000054 F0               [24]  750 	movx	@dptr,a
                                    751 ;	webserver.c:65: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      000055 90r05rF4         [24]  752 	mov	dptr,#_packetReceive_target_ip_10000_90
      000058 74 C0            [12]  753 	mov	a,#0xc0
      00005A F0               [24]  754 	movx	@dptr,a
      00005B 90r05rF5         [24]  755 	mov	dptr,#(_packetReceive_target_ip_10000_90 + 0x0001)
      00005E 74 A8            [12]  756 	mov	a,#0xa8
      000060 F0               [24]  757 	movx	@dptr,a
      000061 90r05rF6         [24]  758 	mov	dptr,#(_packetReceive_target_ip_10000_90 + 0x0002)
      000064 74 01            [12]  759 	mov	a,#0x01
      000066 F0               [24]  760 	movx	@dptr,a
      000067 90r05rF7         [24]  761 	mov	dptr,#(_packetReceive_target_ip_10000_90 + 0x0003)
      00006A F0               [24]  762 	movx	@dptr,a
                                    763 ;	webserver.c:68: uint16_t len = 0;
      00006B 90r05rFB         [24]  764 	mov	dptr,#_packetReceive_len_10000_90
      00006E E4               [12]  765 	clr	a
      00006F F0               [24]  766 	movx	@dptr,a
      000070 A3               [24]  767 	inc	dptr
      000071 F0               [24]  768 	movx	@dptr,a
                                    769 ;	webserver.c:71: if (unreleasedPacket) {
      000072 90r05rFA         [24]  770 	mov	dptr,#_packetReceive_unreleasedPacket_10000_90
      000075 E0               [24]  771 	movx	a,@dptr
      000076 70 03            [24]  772 	jnz	00145$
      000078 02r00rEB         [24]  773 	ljmp	00105$
      00007B                        774 00145$:
                                    775 ;	webserver.c:72: if (gNextPacketPtr == 0) {
      00007B 90r05rF8         [24]  776 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      00007E E0               [24]  777 	movx	a,@dptr
      00007F FE               [12]  778 	mov	r6,a
      000080 A3               [24]  779 	inc	dptr
      000081 E0               [24]  780 	movx	a,@dptr
      000082 90r05rF8         [24]  781 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      000085 E0               [24]  782 	movx	a,@dptr
      000086 F5 F0            [12]  783 	mov	b,a
      000088 A3               [24]  784 	inc	dptr
      000089 E0               [24]  785 	movx	a,@dptr
      00008A 45 F0            [12]  786 	orl	a,b
      00008C 70 26            [24]  787 	jnz	00102$
                                    788 ;	webserver.c:74: enc_control_write(0, 0x0C, (uint8_t) (RX_END & 0xFF)); // Low byte
      00008E 90r00r00         [24]  789 	mov	dptr,#_enc_control_write_PARM_2
      000091 74 0C            [12]  790 	mov	a,#0x0c
      000093 F0               [24]  791 	movx	@dptr,a
      000094 90r00r00         [24]  792 	mov	dptr,#_enc_control_write_PARM_3
      000097 74 FF            [12]  793 	mov	a,#0xff
      000099 F0               [24]  794 	movx	@dptr,a
      00009A 90 00 00         [24]  795 	mov	dptr,#0x0000
      00009D 12r00r00         [24]  796 	lcall	_enc_control_write
                                    797 ;	webserver.c:75: enc_control_write(0, 0x0D, (uint8_t) ((RX_END >> 8) & 0xFF)); // High byte
      0000A0 90r00r00         [24]  798 	mov	dptr,#_enc_control_write_PARM_2
      0000A3 74 0D            [12]  799 	mov	a,#0x0d
      0000A5 F0               [24]  800 	movx	@dptr,a
      0000A6 90r00r00         [24]  801 	mov	dptr,#_enc_control_write_PARM_3
      0000A9 74 1B            [12]  802 	mov	a,#0x1b
      0000AB F0               [24]  803 	movx	@dptr,a
      0000AC 90 00 00         [24]  804 	mov	dptr,#0x0000
      0000AF 12r00r00         [24]  805 	lcall	_enc_control_write
      0000B2 80 32            [24]  806 	sjmp	00103$
      0000B4                        807 00102$:
                                    808 ;	webserver.c:77: enc_control_write(0, 0x0C, (uint8_t) ((gNextPacketPtr - 1) & 0xFF)); // Low byte
      0000B4 1E               [12]  809 	dec	r6
      0000B5 90r00r00         [24]  810 	mov	dptr,#_enc_control_write_PARM_2
      0000B8 74 0C            [12]  811 	mov	a,#0x0c
      0000BA F0               [24]  812 	movx	@dptr,a
      0000BB 90r00r00         [24]  813 	mov	dptr,#_enc_control_write_PARM_3
      0000BE EE               [12]  814 	mov	a,r6
      0000BF F0               [24]  815 	movx	@dptr,a
      0000C0 90 00 00         [24]  816 	mov	dptr,#0x0000
      0000C3 12r00r00         [24]  817 	lcall	_enc_control_write
                                    818 ;	webserver.c:79: (uint8_t) (((gNextPacketPtr - 1) >> 8) & 0xFF)); // High byte
      0000C6 90r05rF8         [24]  819 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      0000C9 E0               [24]  820 	movx	a,@dptr
      0000CA FE               [12]  821 	mov	r6,a
      0000CB A3               [24]  822 	inc	dptr
      0000CC E0               [24]  823 	movx	a,@dptr
      0000CD FF               [12]  824 	mov	r7,a
      0000CE 1E               [12]  825 	dec	r6
      0000CF BE FF 01         [24]  826 	cjne	r6,#0xff,00147$
      0000D2 1F               [12]  827 	dec	r7
      0000D3                        828 00147$:
      0000D3 8F 06            [24]  829 	mov	ar6,r7
      0000D5 90r00r00         [24]  830 	mov	dptr,#_enc_control_write_PARM_2
      0000D8 74 0D            [12]  831 	mov	a,#0x0d
      0000DA F0               [24]  832 	movx	@dptr,a
      0000DB 90r00r00         [24]  833 	mov	dptr,#_enc_control_write_PARM_3
      0000DE EE               [12]  834 	mov	a,r6
      0000DF F0               [24]  835 	movx	@dptr,a
      0000E0 90 00 00         [24]  836 	mov	dptr,#0x0000
      0000E3 12r00r00         [24]  837 	lcall	_enc_control_write
      0000E6                        838 00103$:
                                    839 ;	webserver.c:81: unreleasedPacket = false;
      0000E6 90r05rFA         [24]  840 	mov	dptr,#_packetReceive_unreleasedPacket_10000_90
      0000E9 E4               [12]  841 	clr	a
      0000EA F0               [24]  842 	movx	@dptr,a
      0000EB                        843 00105$:
                                    844 ;	webserver.c:84: uint8_t EPKTCNT = enc_eth_read(0x19, 1);
      0000EB 90r00r00         [24]  845 	mov	dptr,#_enc_eth_read_PARM_2
      0000EE 74 01            [12]  846 	mov	a,#0x01
      0000F0 F0               [24]  847 	movx	@dptr,a
      0000F1 75 82 19         [24]  848 	mov	dpl, #0x19
      0000F4 12r00r00         [24]  849 	lcall	_enc_eth_read
      0000F7 E5 82            [12]  850 	mov	a, dpl
                                    851 ;	webserver.c:85: if (EPKTCNT > 0) {
      0000F9 70 03            [24]  852 	jnz	00148$
      0000FB 02r02r1C         [24]  853 	ljmp	00112$
      0000FE                        854 00148$:
                                    855 ;	webserver.c:86: enc_control_write(0, 0x00, (uint8_t) (gNextPacketPtr & 0xFF)); // Low byte
      0000FE 90r05rF8         [24]  856 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      000101 E0               [24]  857 	movx	a,@dptr
      000102 FE               [12]  858 	mov	r6,a
      000103 A3               [24]  859 	inc	dptr
      000104 E0               [24]  860 	movx	a,@dptr
      000105 90r00r00         [24]  861 	mov	dptr,#_enc_control_write_PARM_2
      000108 E4               [12]  862 	clr	a
      000109 F0               [24]  863 	movx	@dptr,a
      00010A 90r00r00         [24]  864 	mov	dptr,#_enc_control_write_PARM_3
      00010D EE               [12]  865 	mov	a,r6
      00010E F0               [24]  866 	movx	@dptr,a
      00010F 90 00 00         [24]  867 	mov	dptr,#0x0000
      000112 12r00r00         [24]  868 	lcall	_enc_control_write
                                    869 ;	webserver.c:87: enc_control_write(0, 0x01, (uint8_t) ((gNextPacketPtr >> 8) & 0xFF)); // High byte
      000115 90r05rF8         [24]  870 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      000118 E0               [24]  871 	movx	a,@dptr
      000119 A3               [24]  872 	inc	dptr
      00011A E0               [24]  873 	movx	a,@dptr
      00011B FE               [12]  874 	mov	r6,a
      00011C 90r00r00         [24]  875 	mov	dptr,#_enc_control_write_PARM_2
      00011F 74 01            [12]  876 	mov	a,#0x01
      000121 F0               [24]  877 	movx	@dptr,a
      000122 90r00r00         [24]  878 	mov	dptr,#_enc_control_write_PARM_3
      000125 EE               [12]  879 	mov	a,r6
      000126 F0               [24]  880 	movx	@dptr,a
      000127 90 00 00         [24]  881 	mov	dptr,#0x0000
      00012A 12r00r00         [24]  882 	lcall	_enc_control_write
                                    883 ;	webserver.c:96: enc_buffer_read(sizeof(PacketHeader), gNextPacketPtr,
      00012D 90r05rF8         [24]  884 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      000130 E0               [24]  885 	movx	a,@dptr
      000131 FE               [12]  886 	mov	r6,a
      000132 A3               [24]  887 	inc	dptr
      000133 E0               [24]  888 	movx	a,@dptr
      000134 FF               [12]  889 	mov	r7,a
                                    890 ;	webserver.c:97: (uint8_t*) &header);
      000135 90r00r00         [24]  891 	mov	dptr,#_enc_buffer_read_PARM_2
      000138 EE               [12]  892 	mov	a,r6
      000139 F0               [24]  893 	movx	@dptr,a
      00013A EF               [12]  894 	mov	a,r7
      00013B A3               [24]  895 	inc	dptr
      00013C F0               [24]  896 	movx	@dptr,a
      00013D 90r00r00         [24]  897 	mov	dptr,#_enc_buffer_read_PARM_3
      000140 74rFD            [12]  898 	mov	a,#_packetReceive_header_20002_96
      000142 F0               [24]  899 	movx	@dptr,a
      000143 74s05            [12]  900 	mov	a,#(_packetReceive_header_20002_96 >> 8)
      000145 A3               [24]  901 	inc	dptr
      000146 F0               [24]  902 	movx	@dptr,a
      000147 E4               [12]  903 	clr	a
      000148 A3               [24]  904 	inc	dptr
      000149 F0               [24]  905 	movx	@dptr,a
      00014A 90 00 06         [24]  906 	mov	dptr,#0x0006
      00014D 12r00r00         [24]  907 	lcall	_enc_buffer_read
                                    908 ;	webserver.c:99: uint16_t start = gNextPacketPtr + sizeof(PacketHeader);
      000150 90r05rF8         [24]  909 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      000153 E0               [24]  910 	movx	a,@dptr
      000154 FE               [12]  911 	mov	r6,a
      000155 A3               [24]  912 	inc	dptr
      000156 E0               [24]  913 	movx	a,@dptr
      000157 FF               [12]  914 	mov	r7,a
      000158 74 06            [12]  915 	mov	a,#0x06
      00015A 2E               [12]  916 	add	a, r6
      00015B FE               [12]  917 	mov	r6,a
      00015C E4               [12]  918 	clr	a
      00015D 3F               [12]  919 	addc	a, r7
      00015E FF               [12]  920 	mov	r7,a
      00015F 90r06r03         [24]  921 	mov	dptr,#_packetReceive_start_20003_97
      000162 EE               [12]  922 	mov	a,r6
      000163 F0               [24]  923 	movx	@dptr,a
      000164 EF               [12]  924 	mov	a,r7
      000165 A3               [24]  925 	inc	dptr
      000166 F0               [24]  926 	movx	@dptr,a
                                    927 ;	webserver.c:100: gNextPacketPtr = header.nextPacket;
      000167 90r05rFD         [24]  928 	mov	dptr,#_packetReceive_header_20002_96
      00016A E0               [24]  929 	movx	a,@dptr
      00016B FE               [12]  930 	mov	r6,a
      00016C A3               [24]  931 	inc	dptr
      00016D E0               [24]  932 	movx	a,@dptr
      00016E FF               [12]  933 	mov	r7,a
      00016F 90r05rF8         [24]  934 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_90
      000172 EE               [12]  935 	mov	a,r6
      000173 F0               [24]  936 	movx	@dptr,a
      000174 EF               [12]  937 	mov	a,r7
      000175 A3               [24]  938 	inc	dptr
      000176 F0               [24]  939 	movx	@dptr,a
                                    940 ;	webserver.c:102: len = header.byteCount - 4; // Exclude CRC
      000177 90r05rFF         [24]  941 	mov	dptr,#(_packetReceive_header_20002_96 + 0x0002)
      00017A E0               [24]  942 	movx	a,@dptr
      00017B FE               [12]  943 	mov	r6,a
      00017C A3               [24]  944 	inc	dptr
      00017D E0               [24]  945 	movx	a,@dptr
      00017E FF               [12]  946 	mov	r7,a
      00017F EE               [12]  947 	mov	a,r6
      000180 24 FC            [12]  948 	add	a,#0xfc
      000182 FE               [12]  949 	mov	r6,a
      000183 EF               [12]  950 	mov	a,r7
      000184 34 FF            [12]  951 	addc	a,#0xff
      000186 FF               [12]  952 	mov	r7,a
      000187 90r05rFB         [24]  953 	mov	dptr,#_packetReceive_len_10000_90
      00018A EE               [12]  954 	mov	a,r6
      00018B F0               [24]  955 	movx	@dptr,a
      00018C EF               [12]  956 	mov	a,r7
      00018D A3               [24]  957 	inc	dptr
      00018E F0               [24]  958 	movx	@dptr,a
                                    959 ;	webserver.c:103: if (len > BUFFER_SIZE - 1)
      00018F C3               [12]  960 	clr	c
      000190 74 DB            [12]  961 	mov	a,#0xdb
      000192 9E               [12]  962 	subb	a,r6
      000193 74 05            [12]  963 	mov	a,#0x05
      000195 9F               [12]  964 	subb	a,r7
      000196 50 0A            [24]  965 	jnc	00107$
                                    966 ;	webserver.c:104: len = BUFFER_SIZE - 1;
      000198 90r05rFB         [24]  967 	mov	dptr,#_packetReceive_len_10000_90
      00019B 74 DB            [12]  968 	mov	a,#0xdb
      00019D F0               [24]  969 	movx	@dptr,a
      00019E 74 05            [12]  970 	mov	a,#0x05
      0001A0 A3               [24]  971 	inc	dptr
      0001A1 F0               [24]  972 	movx	@dptr,a
      0001A2                        973 00107$:
                                    974 ;	webserver.c:106: if ((header.status & 0x80) == 0)
      0001A2 90r06r01         [24]  975 	mov	dptr,#(_packetReceive_header_20002_96 + 0x0004)
      0001A5 E0               [24]  976 	movx	a,@dptr
      0001A6 FE               [12]  977 	mov	r6,a
      0001A7 A3               [24]  978 	inc	dptr
      0001A8 E0               [24]  979 	movx	a,@dptr
      0001A9 EE               [12]  980 	mov	a,r6
      0001AA 20 E7 09         [24]  981 	jb	acc.7,00109$
                                    982 ;	webserver.c:107: len = 0; // Invalid packet
      0001AD 90r05rFB         [24]  983 	mov	dptr,#_packetReceive_len_10000_90
      0001B0 E4               [12]  984 	clr	a
      0001B1 F0               [24]  985 	movx	@dptr,a
      0001B2 A3               [24]  986 	inc	dptr
      0001B3 F0               [24]  987 	movx	@dptr,a
      0001B4 80 2C            [24]  988 	sjmp	00110$
      0001B6                        989 00109$:
                                    990 ;	webserver.c:109: enc_buffer_read(len, start, buffer);
      0001B6 90r05rFB         [24]  991 	mov	dptr,#_packetReceive_len_10000_90
      0001B9 E0               [24]  992 	movx	a,@dptr
      0001BA FE               [12]  993 	mov	r6,a
      0001BB A3               [24]  994 	inc	dptr
      0001BC E0               [24]  995 	movx	a,@dptr
      0001BD FF               [12]  996 	mov	r7,a
      0001BE 90r06r03         [24]  997 	mov	dptr,#_packetReceive_start_20003_97
      0001C1 E0               [24]  998 	movx	a,@dptr
      0001C2 FC               [12]  999 	mov	r4,a
      0001C3 A3               [24] 1000 	inc	dptr
      0001C4 E0               [24] 1001 	movx	a,@dptr
      0001C5 FD               [12] 1002 	mov	r5,a
      0001C6 90r00r00         [24] 1003 	mov	dptr,#_enc_buffer_read_PARM_2
      0001C9 EC               [12] 1004 	mov	a,r4
      0001CA F0               [24] 1005 	movx	@dptr,a
      0001CB ED               [12] 1006 	mov	a,r5
      0001CC A3               [24] 1007 	inc	dptr
      0001CD F0               [24] 1008 	movx	@dptr,a
      0001CE 90r00r00         [24] 1009 	mov	dptr,#_enc_buffer_read_PARM_3
      0001D1 74r00            [12] 1010 	mov	a,#_buffer
      0001D3 F0               [24] 1011 	movx	@dptr,a
      0001D4 74s00            [12] 1012 	mov	a,#(_buffer >> 8)
      0001D6 A3               [24] 1013 	inc	dptr
      0001D7 F0               [24] 1014 	movx	@dptr,a
      0001D8 E4               [12] 1015 	clr	a
      0001D9 A3               [24] 1016 	inc	dptr
      0001DA F0               [24] 1017 	movx	@dptr,a
      0001DB 8E 82            [24] 1018 	mov	dpl, r6
      0001DD 8F 83            [24] 1019 	mov	dph, r7
      0001DF 12r00r00         [24] 1020 	lcall	_enc_buffer_read
      0001E2                       1021 00110$:
                                   1022 ;	webserver.c:111: buffer[len] = 0; // Null-terminate
      0001E2 90r05rFB         [24] 1023 	mov	dptr,#_packetReceive_len_10000_90
      0001E5 E0               [24] 1024 	movx	a,@dptr
      0001E6 FE               [12] 1025 	mov	r6,a
      0001E7 A3               [24] 1026 	inc	dptr
      0001E8 E0               [24] 1027 	movx	a,@dptr
      0001E9 FF               [12] 1028 	mov	r7,a
      0001EA EE               [12] 1029 	mov	a,r6
      0001EB 24r00            [12] 1030 	add	a, #_buffer
      0001ED F5 82            [12] 1031 	mov	dpl,a
      0001EF EF               [12] 1032 	mov	a,r7
      0001F0 34s00            [12] 1033 	addc	a, #(_buffer >> 8)
      0001F2 F5 83            [12] 1034 	mov	dph,a
      0001F4 E4               [12] 1035 	clr	a
      0001F5 F0               [24] 1036 	movx	@dptr,a
                                   1037 ;	webserver.c:112: unreleasedPacket = true;
      0001F6 90r05rFA         [24] 1038 	mov	dptr,#_packetReceive_unreleasedPacket_10000_90
      0001F9 04               [12] 1039 	inc	a
      0001FA F0               [24] 1040 	movx	@dptr,a
                                   1041 ;	webserver.c:114: uint8_t ECON2 = enc_eth_read(0x1E, 0);
      0001FB 90r00r00         [24] 1042 	mov	dptr,#_enc_eth_read_PARM_2
      0001FE E4               [12] 1043 	clr	a
      0001FF F0               [24] 1044 	movx	@dptr,a
      000200 75 82 1E         [24] 1045 	mov	dpl, #0x1e
      000203 12r00r00         [24] 1046 	lcall	_enc_eth_read
      000206 E5 82            [12] 1047 	mov	a, dpl
                                   1048 ;	webserver.c:115: enc_control_write(0, 0x1E, (ECON2 | (1 << 6))); // Enable MAC reception
      000208 44 40            [12] 1049 	orl	a,#0x40
      00020A FF               [12] 1050 	mov	r7,a
      00020B 90r00r00         [24] 1051 	mov	dptr,#_enc_control_write_PARM_2
      00020E 74 1E            [12] 1052 	mov	a,#0x1e
      000210 F0               [24] 1053 	movx	@dptr,a
      000211 90r00r00         [24] 1054 	mov	dptr,#_enc_control_write_PARM_3
      000214 EF               [12] 1055 	mov	a,r7
      000215 F0               [24] 1056 	movx	@dptr,a
      000216 90 00 00         [24] 1057 	mov	dptr,#0x0000
      000219 12r00r00         [24] 1058 	lcall	_enc_control_write
      00021C                       1059 00112$:
                                   1060 ;	webserver.c:118: return len;
      00021C 90r05rFB         [24] 1061 	mov	dptr,#_packetReceive_len_10000_90
      00021F E0               [24] 1062 	movx	a,@dptr
      000220 FE               [12] 1063 	mov	r6,a
      000221 A3               [24] 1064 	inc	dptr
      000222 E0               [24] 1065 	movx	a,@dptr
                                   1066 ;	webserver.c:119: }
      000223 8E 82            [24] 1067 	mov	dpl,r6
      000225 F5 83            [12] 1068 	mov	dph,a
      000227 22               [24] 1069 	ret
                                   1070 ;------------------------------------------------------------
                                   1071 ;Allocation info for local variables in function 'makeArpReply'
                                   1072 ;------------------------------------------------------------
                                   1073 ;device_mac                Allocated with name '_makeArpReply_device_mac_10000_100'
                                   1074 ;target_mac                Allocated with name '_makeArpReply_target_mac_10000_100'
                                   1075 ;device_ip                 Allocated with name '_makeArpReply_device_ip_10000_100'
                                   1076 ;target_ip                 Allocated with name '_makeArpReply_target_ip_10000_100'
                                   1077 ;------------------------------------------------------------
                                   1078 ;	webserver.c:130: void makeArpReply(void) 
                                   1079 ;	-----------------------------------------
                                   1080 ;	 function makeArpReply
                                   1081 ;	-----------------------------------------
      000228                       1082 _makeArpReply:
                                   1083 ;	webserver.c:132: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      000228 90r06r05         [24] 1084 	mov	dptr,#_makeArpReply_device_mac_10000_100
      00022B 74 02            [12] 1085 	mov	a,#0x02
      00022D F0               [24] 1086 	movx	@dptr,a
      00022E 90r06r06         [24] 1087 	mov	dptr,#(_makeArpReply_device_mac_10000_100 + 0x0001)
      000231 23               [12] 1088 	rl	a
      000232 F0               [24] 1089 	movx	@dptr,a
      000233 90r06r07         [24] 1090 	mov	dptr,#(_makeArpReply_device_mac_10000_100 + 0x0002)
      000236 74 A3            [12] 1091 	mov	a,#0xa3
      000238 F0               [24] 1092 	movx	@dptr,a
      000239 90r06r08         [24] 1093 	mov	dptr,#(_makeArpReply_device_mac_10000_100 + 0x0003)
      00023C 74 3C            [12] 1094 	mov	a,#0x3c
      00023E F0               [24] 1095 	movx	@dptr,a
      00023F 90r06r09         [24] 1096 	mov	dptr,#(_makeArpReply_device_mac_10000_100 + 0x0004)
      000242 74 4D            [12] 1097 	mov	a,#0x4d
      000244 F0               [24] 1098 	movx	@dptr,a
      000245 90r06r0A         [24] 1099 	mov	dptr,#(_makeArpReply_device_mac_10000_100 + 0x0005)
      000248 74 50            [12] 1100 	mov	a,#0x50
      00024A F0               [24] 1101 	movx	@dptr,a
                                   1102 ;	webserver.c:133: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      00024B 90r06r0B         [24] 1103 	mov	dptr,#_makeArpReply_target_mac_10000_100
      00024E 74 FF            [12] 1104 	mov	a,#0xff
      000250 F0               [24] 1105 	movx	@dptr,a
      000251 90r06r0C         [24] 1106 	mov	dptr,#(_makeArpReply_target_mac_10000_100 + 0x0001)
      000254 F0               [24] 1107 	movx	@dptr,a
      000255 90r06r0D         [24] 1108 	mov	dptr,#(_makeArpReply_target_mac_10000_100 + 0x0002)
      000258 F0               [24] 1109 	movx	@dptr,a
      000259 90r06r0E         [24] 1110 	mov	dptr,#(_makeArpReply_target_mac_10000_100 + 0x0003)
      00025C F0               [24] 1111 	movx	@dptr,a
      00025D 90r06r0F         [24] 1112 	mov	dptr,#(_makeArpReply_target_mac_10000_100 + 0x0004)
      000260 F0               [24] 1113 	movx	@dptr,a
      000261 90r06r10         [24] 1114 	mov	dptr,#(_makeArpReply_target_mac_10000_100 + 0x0005)
      000264 F0               [24] 1115 	movx	@dptr,a
                                   1116 ;	webserver.c:134: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000265 90r06r11         [24] 1117 	mov	dptr,#_makeArpReply_device_ip_10000_100
      000268 74 C0            [12] 1118 	mov	a,#0xc0
      00026A F0               [24] 1119 	movx	@dptr,a
      00026B 90r06r12         [24] 1120 	mov	dptr,#(_makeArpReply_device_ip_10000_100 + 0x0001)
      00026E 74 A8            [12] 1121 	mov	a,#0xa8
      000270 F0               [24] 1122 	movx	@dptr,a
      000271 90r06r13         [24] 1123 	mov	dptr,#(_makeArpReply_device_ip_10000_100 + 0x0002)
      000274 74 01            [12] 1124 	mov	a,#0x01
      000276 F0               [24] 1125 	movx	@dptr,a
      000277 90r06r14         [24] 1126 	mov	dptr,#(_makeArpReply_device_ip_10000_100 + 0x0003)
      00027A 74 64            [12] 1127 	mov	a,#0x64
      00027C F0               [24] 1128 	movx	@dptr,a
                                   1129 ;	webserver.c:135: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      00027D 90r06r15         [24] 1130 	mov	dptr,#_makeArpReply_target_ip_10000_100
      000280 74 C0            [12] 1131 	mov	a,#0xc0
      000282 F0               [24] 1132 	movx	@dptr,a
      000283 90r06r16         [24] 1133 	mov	dptr,#(_makeArpReply_target_ip_10000_100 + 0x0001)
      000286 74 A8            [12] 1134 	mov	a,#0xa8
      000288 F0               [24] 1135 	movx	@dptr,a
      000289 90r06r17         [24] 1136 	mov	dptr,#(_makeArpReply_target_ip_10000_100 + 0x0002)
      00028C 74 01            [12] 1137 	mov	a,#0x01
      00028E F0               [24] 1138 	movx	@dptr,a
      00028F 90r06r18         [24] 1139 	mov	dptr,#(_makeArpReply_target_ip_10000_100 + 0x0003)
      000292 F0               [24] 1140 	movx	@dptr,a
                                   1141 ;	webserver.c:136: printf("trialarpreply\n\r");
      000293 74r00            [12] 1142 	mov	a,#___str_0
      000295 C0 E0            [24] 1143 	push	acc
      000297 74s00            [12] 1144 	mov	a,#(___str_0 >> 8)
      000299 C0 E0            [24] 1145 	push	acc
      00029B 74 80            [12] 1146 	mov	a,#0x80
      00029D C0 E0            [24] 1147 	push	acc
      00029F 12r00r00         [24] 1148 	lcall	_printf
      0002A2 15 81            [12] 1149 	dec	sp
      0002A4 15 81            [12] 1150 	dec	sp
      0002A6 15 81            [12] 1151 	dec	sp
                                   1152 ;	webserver.c:138: memmove(&buffer[1], &buffer[0], 42);
      0002A8 90r00r00         [24] 1153 	mov	dptr,#_memmove_PARM_2
      0002AB 74r00            [12] 1154 	mov	a,#_buffer
      0002AD F0               [24] 1155 	movx	@dptr,a
      0002AE 74s00            [12] 1156 	mov	a,#(_buffer >> 8)
      0002B0 A3               [24] 1157 	inc	dptr
      0002B1 F0               [24] 1158 	movx	@dptr,a
      0002B2 E4               [12] 1159 	clr	a
      0002B3 A3               [24] 1160 	inc	dptr
      0002B4 F0               [24] 1161 	movx	@dptr,a
      0002B5 90r00r00         [24] 1162 	mov	dptr,#_memmove_PARM_3
      0002B8 74 2A            [12] 1163 	mov	a,#0x2a
      0002BA F0               [24] 1164 	movx	@dptr,a
      0002BB E4               [12] 1165 	clr	a
      0002BC A3               [24] 1166 	inc	dptr
      0002BD F0               [24] 1167 	movx	@dptr,a
      0002BE 90r00r01         [24] 1168 	mov	dptr,#(_buffer + 0x0001)
      0002C1 F5 F0            [12] 1169 	mov	b,a
      0002C3 12r00r00         [24] 1170 	lcall	_memmove
                                   1171 ;	webserver.c:141: buffer[0] = 0x0E;
      0002C6 90r00r00         [24] 1172 	mov	dptr,#_buffer
      0002C9 74 0E            [12] 1173 	mov	a,#0x0e
      0002CB F0               [24] 1174 	movx	@dptr,a
                                   1175 ;	webserver.c:144: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6); // Destination MAC
      0002CC 90r00r00         [24] 1176 	mov	dptr,#___memcpy_PARM_2
      0002CF 74r07            [12] 1177 	mov	a,#(_buffer + 0x0007)
      0002D1 F0               [24] 1178 	movx	@dptr,a
      0002D2 74s00            [12] 1179 	mov	a,#((_buffer + 0x0007) >> 8)
      0002D4 A3               [24] 1180 	inc	dptr
      0002D5 F0               [24] 1181 	movx	@dptr,a
      0002D6 E4               [12] 1182 	clr	a
      0002D7 A3               [24] 1183 	inc	dptr
      0002D8 F0               [24] 1184 	movx	@dptr,a
      0002D9 90r00r00         [24] 1185 	mov	dptr,#___memcpy_PARM_3
      0002DC 74 06            [12] 1186 	mov	a,#0x06
      0002DE F0               [24] 1187 	movx	@dptr,a
      0002DF E4               [12] 1188 	clr	a
      0002E0 A3               [24] 1189 	inc	dptr
      0002E1 F0               [24] 1190 	movx	@dptr,a
      0002E2 90r00r01         [24] 1191 	mov	dptr,#(_buffer + 0x0001)
      0002E5 F5 F0            [12] 1192 	mov	b,a
      0002E7 12r00r00         [24] 1193 	lcall	___memcpy
                                   1194 ;	webserver.c:147: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6); // Source MAC
      0002EA 90r00r00         [24] 1195 	mov	dptr,#___memcpy_PARM_2
      0002ED 74r05            [12] 1196 	mov	a,#_makeArpReply_device_mac_10000_100
      0002EF F0               [24] 1197 	movx	@dptr,a
      0002F0 74s06            [12] 1198 	mov	a,#(_makeArpReply_device_mac_10000_100 >> 8)
      0002F2 A3               [24] 1199 	inc	dptr
      0002F3 F0               [24] 1200 	movx	@dptr,a
      0002F4 E4               [12] 1201 	clr	a
      0002F5 A3               [24] 1202 	inc	dptr
      0002F6 F0               [24] 1203 	movx	@dptr,a
      0002F7 90r00r00         [24] 1204 	mov	dptr,#___memcpy_PARM_3
      0002FA 74 06            [12] 1205 	mov	a,#0x06
      0002FC F0               [24] 1206 	movx	@dptr,a
      0002FD E4               [12] 1207 	clr	a
      0002FE A3               [24] 1208 	inc	dptr
      0002FF F0               [24] 1209 	movx	@dptr,a
      000300 90r00r07         [24] 1210 	mov	dptr,#(_buffer + 0x0007)
      000303 F5 F0            [12] 1211 	mov	b,a
      000305 12r00r00         [24] 1212 	lcall	___memcpy
                                   1213 ;	webserver.c:150: buffer[1 + 21] = 0x02; // ARP Reply opcode
      000308 90r00r16         [24] 1214 	mov	dptr,#(_buffer + 0x0016)
      00030B 74 02            [12] 1215 	mov	a,#0x02
      00030D F0               [24] 1216 	movx	@dptr,a
                                   1217 ;	webserver.c:153: memcpy(&buffer[1 + 32], &buffer[1 + 22], 6); // Target MAC = Sender MAC from request
      00030E 90r00r00         [24] 1218 	mov	dptr,#___memcpy_PARM_2
      000311 74r17            [12] 1219 	mov	a,#(_buffer + 0x0017)
      000313 F0               [24] 1220 	movx	@dptr,a
      000314 74s00            [12] 1221 	mov	a,#((_buffer + 0x0017) >> 8)
      000316 A3               [24] 1222 	inc	dptr
      000317 F0               [24] 1223 	movx	@dptr,a
      000318 E4               [12] 1224 	clr	a
      000319 A3               [24] 1225 	inc	dptr
      00031A F0               [24] 1226 	movx	@dptr,a
      00031B 90r00r00         [24] 1227 	mov	dptr,#___memcpy_PARM_3
      00031E 74 06            [12] 1228 	mov	a,#0x06
      000320 F0               [24] 1229 	movx	@dptr,a
      000321 E4               [12] 1230 	clr	a
      000322 A3               [24] 1231 	inc	dptr
      000323 F0               [24] 1232 	movx	@dptr,a
      000324 90r00r21         [24] 1233 	mov	dptr,#(_buffer + 0x0021)
      000327 F5 F0            [12] 1234 	mov	b,a
      000329 12r00r00         [24] 1235 	lcall	___memcpy
                                   1236 ;	webserver.c:154: memcpy(&buffer[1 + 38], &buffer[1 + 28], 4); // Target IP = Sender IP from request
      00032C 90r00r00         [24] 1237 	mov	dptr,#___memcpy_PARM_2
      00032F 74r1D            [12] 1238 	mov	a,#(_buffer + 0x001d)
      000331 F0               [24] 1239 	movx	@dptr,a
      000332 74s00            [12] 1240 	mov	a,#((_buffer + 0x001d) >> 8)
      000334 A3               [24] 1241 	inc	dptr
      000335 F0               [24] 1242 	movx	@dptr,a
      000336 E4               [12] 1243 	clr	a
      000337 A3               [24] 1244 	inc	dptr
      000338 F0               [24] 1245 	movx	@dptr,a
      000339 90r00r00         [24] 1246 	mov	dptr,#___memcpy_PARM_3
      00033C 74 04            [12] 1247 	mov	a,#0x04
      00033E F0               [24] 1248 	movx	@dptr,a
      00033F E4               [12] 1249 	clr	a
      000340 A3               [24] 1250 	inc	dptr
      000341 F0               [24] 1251 	movx	@dptr,a
      000342 90r00r27         [24] 1252 	mov	dptr,#(_buffer + 0x0027)
      000345 F5 F0            [12] 1253 	mov	b,a
      000347 12r00r00         [24] 1254 	lcall	___memcpy
                                   1255 ;	webserver.c:157: memcpy(&buffer[1 + 22], device_mac, 6); // Sender MAC = device MAC
      00034A 90r00r00         [24] 1256 	mov	dptr,#___memcpy_PARM_2
      00034D 74r05            [12] 1257 	mov	a,#_makeArpReply_device_mac_10000_100
      00034F F0               [24] 1258 	movx	@dptr,a
      000350 74s06            [12] 1259 	mov	a,#(_makeArpReply_device_mac_10000_100 >> 8)
      000352 A3               [24] 1260 	inc	dptr
      000353 F0               [24] 1261 	movx	@dptr,a
      000354 E4               [12] 1262 	clr	a
      000355 A3               [24] 1263 	inc	dptr
      000356 F0               [24] 1264 	movx	@dptr,a
      000357 90r00r00         [24] 1265 	mov	dptr,#___memcpy_PARM_3
      00035A 74 06            [12] 1266 	mov	a,#0x06
      00035C F0               [24] 1267 	movx	@dptr,a
      00035D E4               [12] 1268 	clr	a
      00035E A3               [24] 1269 	inc	dptr
      00035F F0               [24] 1270 	movx	@dptr,a
      000360 90r00r17         [24] 1271 	mov	dptr,#(_buffer + 0x0017)
      000363 F5 F0            [12] 1272 	mov	b,a
      000365 12r00r00         [24] 1273 	lcall	___memcpy
                                   1274 ;	webserver.c:158: memcpy(&buffer[1 + 28], device_ip, 4);  // Sender IP = device IP
      000368 90r00r00         [24] 1275 	mov	dptr,#___memcpy_PARM_2
      00036B 74r11            [12] 1276 	mov	a,#_makeArpReply_device_ip_10000_100
      00036D F0               [24] 1277 	movx	@dptr,a
      00036E 74s06            [12] 1278 	mov	a,#(_makeArpReply_device_ip_10000_100 >> 8)
      000370 A3               [24] 1279 	inc	dptr
      000371 F0               [24] 1280 	movx	@dptr,a
      000372 E4               [12] 1281 	clr	a
      000373 A3               [24] 1282 	inc	dptr
      000374 F0               [24] 1283 	movx	@dptr,a
      000375 90r00r00         [24] 1284 	mov	dptr,#___memcpy_PARM_3
      000378 74 04            [12] 1285 	mov	a,#0x04
      00037A F0               [24] 1286 	movx	@dptr,a
      00037B E4               [12] 1287 	clr	a
      00037C A3               [24] 1288 	inc	dptr
      00037D F0               [24] 1289 	movx	@dptr,a
      00037E 90r00r1D         [24] 1290 	mov	dptr,#(_buffer + 0x001d)
      000381 F5 F0            [12] 1291 	mov	b,a
      000383 12r00r00         [24] 1292 	lcall	___memcpy
                                   1293 ;	webserver.c:161: transmit_tcp_packet(buffer, 43);
      000386 90r00r00         [24] 1294 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000389 74 2B            [12] 1295 	mov	a,#0x2b
      00038B F0               [24] 1296 	movx	@dptr,a
      00038C E4               [12] 1297 	clr	a
      00038D A3               [24] 1298 	inc	dptr
      00038E F0               [24] 1299 	movx	@dptr,a
      00038F 90r00r00         [24] 1300 	mov	dptr,#_buffer
      000392 F5 F0            [12] 1301 	mov	b,a
                                   1302 ;	webserver.c:162: }
      000394 02r00r00         [24] 1303 	ljmp	_transmit_tcp_packet
                                   1304 ;------------------------------------------------------------
                                   1305 ;Allocation info for local variables in function 'calculateIPChecksum'
                                   1306 ;------------------------------------------------------------
                                   1307 ;buffer                    Allocated with name '_calculateIPChecksum_buffer_10000_101'
                                   1308 ;length                    Allocated with name '_calculateIPChecksum_length_10001_103'
                                   1309 ;sum                       Allocated with name '_calculateIPChecksum_sum_10001_103'
                                   1310 ;i                         Allocated with name '_calculateIPChecksum_i_20001_104'
                                   1311 ;word                      Allocated with name '_calculateIPChecksum_word_30001_105'
                                   1312 ;checksum                  Allocated with name '_calculateIPChecksum_checksum_10002_107'
                                   1313 ;sloc0                     Allocated with name '_calculateIPChecksum_sloc0_1_0'
                                   1314 ;sloc1                     Allocated with name '_calculateIPChecksum_sloc1_1_0'
                                   1315 ;------------------------------------------------------------
                                   1316 ;	webserver.c:174: void calculateIPChecksum(uint8_t *buffer) 
                                   1317 ;	-----------------------------------------
                                   1318 ;	 function calculateIPChecksum
                                   1319 ;	-----------------------------------------
      000397                       1320 _calculateIPChecksum:
      000397 AF F0            [24] 1321 	mov	r7,b
      000399 AE 83            [24] 1322 	mov	r6,dph
      00039B E5 82            [12] 1323 	mov	a,dpl
      00039D 90r06r19         [24] 1324 	mov	dptr,#_calculateIPChecksum_buffer_10000_101
      0003A0 F0               [24] 1325 	movx	@dptr,a
      0003A1 EE               [12] 1326 	mov	a,r6
      0003A2 A3               [24] 1327 	inc	dptr
      0003A3 F0               [24] 1328 	movx	@dptr,a
      0003A4 EF               [12] 1329 	mov	a,r7
      0003A5 A3               [24] 1330 	inc	dptr
      0003A6 F0               [24] 1331 	movx	@dptr,a
                                   1332 ;	webserver.c:177: buffer[IP_CHECKSUM_P] = 0;
      0003A7 90r06r19         [24] 1333 	mov	dptr,#_calculateIPChecksum_buffer_10000_101
      0003AA E0               [24] 1334 	movx	a,@dptr
      0003AB FD               [12] 1335 	mov	r5,a
      0003AC A3               [24] 1336 	inc	dptr
      0003AD E0               [24] 1337 	movx	a,@dptr
      0003AE FE               [12] 1338 	mov	r6,a
      0003AF A3               [24] 1339 	inc	dptr
      0003B0 E0               [24] 1340 	movx	a,@dptr
      0003B1 FF               [12] 1341 	mov	r7,a
      0003B2 74 18            [12] 1342 	mov	a,#0x18
      0003B4 2D               [12] 1343 	add	a, r5
      0003B5 FA               [12] 1344 	mov	r2,a
      0003B6 E4               [12] 1345 	clr	a
      0003B7 3E               [12] 1346 	addc	a, r6
      0003B8 FB               [12] 1347 	mov	r3,a
      0003B9 8F 04            [24] 1348 	mov	ar4,r7
      0003BB 8A 82            [24] 1349 	mov	dpl,r2
      0003BD 8B 83            [24] 1350 	mov	dph,r3
      0003BF 8C F0            [24] 1351 	mov	b,r4
      0003C1 E4               [12] 1352 	clr	a
      0003C2 12r00r00         [24] 1353 	lcall	__gptrput
                                   1354 ;	webserver.c:178: buffer[IP_CHECKSUM_P + 1] = 0;
      0003C5 74 19            [12] 1355 	mov	a,#0x19
      0003C7 2D               [12] 1356 	add	a, r5
      0003C8 FA               [12] 1357 	mov	r2,a
      0003C9 E4               [12] 1358 	clr	a
      0003CA 3E               [12] 1359 	addc	a, r6
      0003CB FB               [12] 1360 	mov	r3,a
      0003CC 8F 04            [24] 1361 	mov	ar4,r7
      0003CE 8A 82            [24] 1362 	mov	dpl,r2
      0003D0 8B 83            [24] 1363 	mov	dph,r3
      0003D2 8C F0            [24] 1364 	mov	b,r4
      0003D4 E4               [12] 1365 	clr	a
      0003D5 12r00r00         [24] 1366 	lcall	__gptrput
                                   1367 ;	webserver.c:182: uint32_t sum = 0;
      0003D8 90r06r1C         [24] 1368 	mov	dptr,#_calculateIPChecksum_sum_10001_103
      0003DB F0               [24] 1369 	movx	@dptr,a
      0003DC A3               [24] 1370 	inc	dptr
      0003DD F0               [24] 1371 	movx	@dptr,a
      0003DE A3               [24] 1372 	inc	dptr
      0003DF F0               [24] 1373 	movx	@dptr,a
      0003E0 A3               [24] 1374 	inc	dptr
      0003E1 F0               [24] 1375 	movx	@dptr,a
                                   1376 ;	webserver.c:185: for (uint16_t i = IP_P; i < IP_P + length; i += 2) {
      0003E2 90r06r20         [24] 1377 	mov	dptr,#_calculateIPChecksum_i_20001_104
      0003E5 74 0E            [12] 1378 	mov	a,#0x0e
      0003E7 F0               [24] 1379 	movx	@dptr,a
      0003E8 E4               [12] 1380 	clr	a
      0003E9 A3               [24] 1381 	inc	dptr
      0003EA F0               [24] 1382 	movx	@dptr,a
      0003EB                       1383 00106$:
      0003EB 90r06r20         [24] 1384 	mov	dptr,#_calculateIPChecksum_i_20001_104
      0003EE E0               [24] 1385 	movx	a,@dptr
      0003EF FB               [12] 1386 	mov	r3,a
      0003F0 A3               [24] 1387 	inc	dptr
      0003F1 E0               [24] 1388 	movx	a,@dptr
      0003F2 FC               [12] 1389 	mov	r4,a
      0003F3 8B 01            [24] 1390 	mov	ar1,r3
      0003F5 8C 02            [24] 1391 	mov	ar2,r4
      0003F7 C3               [12] 1392 	clr	c
      0003F8 E9               [12] 1393 	mov	a,r1
      0003F9 94 22            [12] 1394 	subb	a,#0x22
      0003FB EA               [12] 1395 	mov	a,r2
      0003FC 94 00            [12] 1396 	subb	a,#0x00
      0003FE 40 03            [24] 1397 	jc	00134$
      000400 02r04r84         [24] 1398 	ljmp	00102$
      000403                       1399 00134$:
                                   1400 ;	webserver.c:186: uint16_t word = (buffer[i] << 8) | buffer[i + 1]; // combine bytes to word
      000403 EB               [12] 1401 	mov	a,r3
      000404 2D               [12] 1402 	add	a, r5
      000405 FB               [12] 1403 	mov	r3,a
      000406 EC               [12] 1404 	mov	a,r4
      000407 3E               [12] 1405 	addc	a, r6
      000408 F8               [12] 1406 	mov	r0,a
      000409 8F 04            [24] 1407 	mov	ar4,r7
      00040B 8B 82            [24] 1408 	mov	dpl,r3
      00040D 88 83            [24] 1409 	mov	dph,r0
      00040F 8C F0            [24] 1410 	mov	b,r4
      000411 12r00r00         [24] 1411 	lcall	__gptrget
      000414 FB               [12] 1412 	mov	r3,a
      000415 7C 00            [12] 1413 	mov	r4,#0x00
      000417 8B*01            [24] 1414 	mov	(_calculateIPChecksum_sloc0_1_0 + 1),r3
      000419 8C*00            [24] 1415 	mov	_calculateIPChecksum_sloc0_1_0,r4
      00041B 74 01            [12] 1416 	mov	a,#0x01
      00041D 29               [12] 1417 	add	a, r1
      00041E F8               [12] 1418 	mov	r0,a
      00041F E4               [12] 1419 	clr	a
      000420 3A               [12] 1420 	addc	a, r2
      000421 FC               [12] 1421 	mov	r4,a
      000422 E8               [12] 1422 	mov	a,r0
      000423 2D               [12] 1423 	add	a, r5
      000424 F8               [12] 1424 	mov	r0,a
      000425 EC               [12] 1425 	mov	a,r4
      000426 3E               [12] 1426 	addc	a, r6
      000427 FC               [12] 1427 	mov	r4,a
      000428 8F 03            [24] 1428 	mov	ar3,r7
      00042A 88 82            [24] 1429 	mov	dpl,r0
      00042C 8C 83            [24] 1430 	mov	dph,r4
      00042E 8B F0            [24] 1431 	mov	b,r3
      000430 12r00r00         [24] 1432 	lcall	__gptrget
      000433 F8               [12] 1433 	mov	r0,a
      000434 7C 00            [12] 1434 	mov	r4,#0x00
      000436 E5*01            [12] 1435 	mov	a,(_calculateIPChecksum_sloc0_1_0 + 1)
      000438 42 04            [12] 1436 	orl	ar4,a
                                   1437 ;	webserver.c:187: sum += word;
      00043A C0 05            [24] 1438 	push	ar5
      00043C C0 06            [24] 1439 	push	ar6
      00043E C0 07            [24] 1440 	push	ar7
      000440 90r06r1C         [24] 1441 	mov	dptr,#_calculateIPChecksum_sum_10001_103
      000443 E0               [24] 1442 	movx	a,@dptr
      000444 F5*02            [12] 1443 	mov	_calculateIPChecksum_sloc1_1_0,a
      000446 A3               [24] 1444 	inc	dptr
      000447 E0               [24] 1445 	movx	a,@dptr
      000448 F5*03            [12] 1446 	mov	(_calculateIPChecksum_sloc1_1_0 + 1),a
      00044A A3               [24] 1447 	inc	dptr
      00044B E0               [24] 1448 	movx	a,@dptr
      00044C F5*04            [12] 1449 	mov	(_calculateIPChecksum_sloc1_1_0 + 2),a
      00044E A3               [24] 1450 	inc	dptr
      00044F E0               [24] 1451 	movx	a,@dptr
      000450 F5*05            [12] 1452 	mov	(_calculateIPChecksum_sloc1_1_0 + 3),a
      000452 7E 00            [12] 1453 	mov	r6,#0x00
      000454 7F 00            [12] 1454 	mov	r7,#0x00
      000456 90r06r1C         [24] 1455 	mov	dptr,#_calculateIPChecksum_sum_10001_103
      000459 E8               [12] 1456 	mov	a,r0
      00045A 25*02            [12] 1457 	add	a, _calculateIPChecksum_sloc1_1_0
      00045C F0               [24] 1458 	movx	@dptr,a
      00045D EC               [12] 1459 	mov	a,r4
      00045E 35*03            [12] 1460 	addc	a, (_calculateIPChecksum_sloc1_1_0 + 1)
      000460 A3               [24] 1461 	inc	dptr
      000461 F0               [24] 1462 	movx	@dptr,a
      000462 EE               [12] 1463 	mov	a,r6
      000463 35*04            [12] 1464 	addc	a, (_calculateIPChecksum_sloc1_1_0 + 2)
      000465 A3               [24] 1465 	inc	dptr
      000466 F0               [24] 1466 	movx	@dptr,a
      000467 EF               [12] 1467 	mov	a,r7
      000468 35*05            [12] 1468 	addc	a, (_calculateIPChecksum_sloc1_1_0 + 3)
      00046A A3               [24] 1469 	inc	dptr
      00046B F0               [24] 1470 	movx	@dptr,a
                                   1471 ;	webserver.c:185: for (uint16_t i = IP_P; i < IP_P + length; i += 2) {
      00046C 74 02            [12] 1472 	mov	a,#0x02
      00046E 29               [12] 1473 	add	a, r1
      00046F F9               [12] 1474 	mov	r1,a
      000470 E4               [12] 1475 	clr	a
      000471 3A               [12] 1476 	addc	a, r2
      000472 FA               [12] 1477 	mov	r2,a
      000473 90r06r20         [24] 1478 	mov	dptr,#_calculateIPChecksum_i_20001_104
      000476 E9               [12] 1479 	mov	a,r1
      000477 F0               [24] 1480 	movx	@dptr,a
      000478 EA               [12] 1481 	mov	a,r2
      000479 A3               [24] 1482 	inc	dptr
      00047A F0               [24] 1483 	movx	@dptr,a
      00047B D0 07            [24] 1484 	pop	ar7
      00047D D0 06            [24] 1485 	pop	ar6
      00047F D0 05            [24] 1486 	pop	ar5
      000481 02r03rEB         [24] 1487 	ljmp	00106$
                                   1488 ;	webserver.c:191: while (sum >> 16) {
      000484                       1489 00102$:
      000484 90r06r1C         [24] 1490 	mov	dptr,#_calculateIPChecksum_sum_10001_103
      000487 E0               [24] 1491 	movx	a,@dptr
      000488 FC               [12] 1492 	mov	r4,a
      000489 A3               [24] 1493 	inc	dptr
      00048A E0               [24] 1494 	movx	a,@dptr
      00048B FD               [12] 1495 	mov	r5,a
      00048C A3               [24] 1496 	inc	dptr
      00048D E0               [24] 1497 	movx	a,@dptr
      00048E FE               [12] 1498 	mov	r6,a
      00048F A3               [24] 1499 	inc	dptr
      000490 E0               [24] 1500 	movx	a,@dptr
      000491 FF               [12] 1501 	mov	r7,a
      000492 8E*02            [24] 1502 	mov	_calculateIPChecksum_sloc1_1_0,r6
      000494 8F*03            [24] 1503 	mov	(_calculateIPChecksum_sloc1_1_0 + 1),r7
      000496 E4               [12] 1504 	clr	a
      000497 F5*04            [12] 1505 	mov	(_calculateIPChecksum_sloc1_1_0 + 2),a
      000499 F5*05            [12] 1506 	mov	(_calculateIPChecksum_sloc1_1_0 + 3),a
      00049B E5*02            [12] 1507 	mov	a,_calculateIPChecksum_sloc1_1_0
      00049D 45*03            [12] 1508 	orl	a,(_calculateIPChecksum_sloc1_1_0 + 1)
      00049F 45*04            [12] 1509 	orl	a,(_calculateIPChecksum_sloc1_1_0 + 2)
      0004A1 45*05            [12] 1510 	orl	a,(_calculateIPChecksum_sloc1_1_0 + 3)
      0004A3 60 20            [24] 1511 	jz	00104$
                                   1512 ;	webserver.c:192: sum = (sum & 0xFFFF) + (sum >> 16);
      0004A5 8C 00            [24] 1513 	mov	ar0,r4
      0004A7 8D 01            [24] 1514 	mov	ar1,r5
      0004A9 7A 00            [12] 1515 	mov	r2,#0x00
      0004AB 7B 00            [12] 1516 	mov	r3,#0x00
      0004AD 90r06r1C         [24] 1517 	mov	dptr,#_calculateIPChecksum_sum_10001_103
      0004B0 E5*02            [12] 1518 	mov	a,_calculateIPChecksum_sloc1_1_0
      0004B2 28               [12] 1519 	add	a, r0
      0004B3 F0               [24] 1520 	movx	@dptr,a
      0004B4 E5*03            [12] 1521 	mov	a,(_calculateIPChecksum_sloc1_1_0 + 1)
      0004B6 39               [12] 1522 	addc	a, r1
      0004B7 A3               [24] 1523 	inc	dptr
      0004B8 F0               [24] 1524 	movx	@dptr,a
      0004B9 E5*04            [12] 1525 	mov	a,(_calculateIPChecksum_sloc1_1_0 + 2)
      0004BB 3A               [12] 1526 	addc	a, r2
      0004BC A3               [24] 1527 	inc	dptr
      0004BD F0               [24] 1528 	movx	@dptr,a
      0004BE E5*05            [12] 1529 	mov	a,(_calculateIPChecksum_sloc1_1_0 + 3)
      0004C0 3B               [12] 1530 	addc	a, r3
      0004C1 A3               [24] 1531 	inc	dptr
      0004C2 F0               [24] 1532 	movx	@dptr,a
      0004C3 80 BF            [24] 1533 	sjmp	00102$
      0004C5                       1534 00104$:
                                   1535 ;	webserver.c:196: uint16_t checksum = ~((uint16_t) sum);
      0004C5 EC               [12] 1536 	mov	a,r4
      0004C6 F4               [12] 1537 	cpl	a
      0004C7 FC               [12] 1538 	mov	r4,a
      0004C8 ED               [12] 1539 	mov	a,r5
      0004C9 F4               [12] 1540 	cpl	a
      0004CA FD               [12] 1541 	mov	r5,a
                                   1542 ;	webserver.c:197: buffer[IP_CHECKSUM_P] = (checksum >> 8) & 0xFF;
      0004CB 90r06r19         [24] 1543 	mov	dptr,#_calculateIPChecksum_buffer_10000_101
      0004CE E0               [24] 1544 	movx	a,@dptr
      0004CF FB               [12] 1545 	mov	r3,a
      0004D0 A3               [24] 1546 	inc	dptr
      0004D1 E0               [24] 1547 	movx	a,@dptr
      0004D2 FE               [12] 1548 	mov	r6,a
      0004D3 A3               [24] 1549 	inc	dptr
      0004D4 E0               [24] 1550 	movx	a,@dptr
      0004D5 FF               [12] 1551 	mov	r7,a
      0004D6 74 18            [12] 1552 	mov	a,#0x18
      0004D8 2B               [12] 1553 	add	a, r3
      0004D9 F5*02            [12] 1554 	mov	_calculateIPChecksum_sloc1_1_0,a
      0004DB E4               [12] 1555 	clr	a
      0004DC 3E               [12] 1556 	addc	a, r6
      0004DD F5*03            [12] 1557 	mov	(_calculateIPChecksum_sloc1_1_0 + 1),a
      0004DF 8F*04            [24] 1558 	mov	(_calculateIPChecksum_sloc1_1_0 + 2),r7
      0004E1 8D 02            [24] 1559 	mov	ar2,r5
      0004E3 85*02 82         [24] 1560 	mov	dpl,_calculateIPChecksum_sloc1_1_0
      0004E6 85*03 83         [24] 1561 	mov	dph,(_calculateIPChecksum_sloc1_1_0 + 1)
      0004E9 85*04 F0         [24] 1562 	mov	b,(_calculateIPChecksum_sloc1_1_0 + 2)
      0004EC EA               [12] 1563 	mov	a,r2
      0004ED 12r00r00         [24] 1564 	lcall	__gptrput
                                   1565 ;	webserver.c:198: buffer[IP_CHECKSUM_P + 1] = checksum & 0xFF;
      0004F0 74 19            [12] 1566 	mov	a,#0x19
      0004F2 2B               [12] 1567 	add	a, r3
      0004F3 FB               [12] 1568 	mov	r3,a
      0004F4 E4               [12] 1569 	clr	a
      0004F5 3E               [12] 1570 	addc	a, r6
      0004F6 FE               [12] 1571 	mov	r6,a
      0004F7 8B 82            [24] 1572 	mov	dpl,r3
      0004F9 8E 83            [24] 1573 	mov	dph,r6
      0004FB 8F F0            [24] 1574 	mov	b,r7
      0004FD EC               [12] 1575 	mov	a,r4
                                   1576 ;	webserver.c:199: }
      0004FE 02r00r00         [24] 1577 	ljmp	__gptrput
                                   1578 ;------------------------------------------------------------
                                   1579 ;Allocation info for local variables in function 'calculateTcpChecksum'
                                   1580 ;------------------------------------------------------------
                                   1581 ;buffer                    Allocated with name '_calculateTcpChecksum_buffer_10000_108'
                                   1582 ;tcpLength                 Allocated with name '_calculateTcpChecksum_tcpLength_10001_110'
                                   1583 ;sum                       Allocated with name '_calculateTcpChecksum_sum_10001_110'
                                   1584 ;i                         Allocated with name '_calculateTcpChecksum_i_20001_111'
                                   1585 ;i                         Allocated with name '_calculateTcpChecksum_i_20001_113'
                                   1586 ;i                         Allocated with name '_calculateTcpChecksum_i_20001_115'
                                   1587 ;word                      Allocated with name '_calculateTcpChecksum_word_30001_116'
                                   1588 ;checksum                  Allocated with name '_calculateTcpChecksum_checksum_10002_118'
                                   1589 ;sloc0                     Allocated with name '_calculateTcpChecksum_sloc0_1_0'
                                   1590 ;sloc1                     Allocated with name '_calculateTcpChecksum_sloc1_1_0'
                                   1591 ;sloc2                     Allocated with name '_calculateTcpChecksum_sloc2_1_0'
                                   1592 ;sloc3                     Allocated with name '_calculateTcpChecksum_sloc3_1_0'
                                   1593 ;sloc4                     Allocated with name '_calculateTcpChecksum_sloc4_1_0'
                                   1594 ;------------------------------------------------------------
                                   1595 ;	webserver.c:214: void calculateTcpChecksum(uint8_t *buffer) 
                                   1596 ;	-----------------------------------------
                                   1597 ;	 function calculateTcpChecksum
                                   1598 ;	-----------------------------------------
      000501                       1599 _calculateTcpChecksum:
      000501 AF F0            [24] 1600 	mov	r7,b
      000503 AE 83            [24] 1601 	mov	r6,dph
      000505 E5 82            [12] 1602 	mov	a,dpl
      000507 90r06r22         [24] 1603 	mov	dptr,#_calculateTcpChecksum_buffer_10000_108
      00050A F0               [24] 1604 	movx	@dptr,a
      00050B EE               [12] 1605 	mov	a,r6
      00050C A3               [24] 1606 	inc	dptr
      00050D F0               [24] 1607 	movx	@dptr,a
      00050E EF               [12] 1608 	mov	a,r7
      00050F A3               [24] 1609 	inc	dptr
      000510 F0               [24] 1610 	movx	@dptr,a
                                   1611 ;	webserver.c:217: buffer[TCP_CHECKSUM_H_P] = 0;
      000511 90r06r22         [24] 1612 	mov	dptr,#_calculateTcpChecksum_buffer_10000_108
      000514 E0               [24] 1613 	movx	a,@dptr
      000515 FD               [12] 1614 	mov	r5,a
      000516 A3               [24] 1615 	inc	dptr
      000517 E0               [24] 1616 	movx	a,@dptr
      000518 FE               [12] 1617 	mov	r6,a
      000519 A3               [24] 1618 	inc	dptr
      00051A E0               [24] 1619 	movx	a,@dptr
      00051B FF               [12] 1620 	mov	r7,a
      00051C 74 32            [12] 1621 	mov	a,#0x32
      00051E 2D               [12] 1622 	add	a, r5
      00051F FA               [12] 1623 	mov	r2,a
      000520 E4               [12] 1624 	clr	a
      000521 3E               [12] 1625 	addc	a, r6
      000522 FB               [12] 1626 	mov	r3,a
      000523 8F 04            [24] 1627 	mov	ar4,r7
      000525 8A 82            [24] 1628 	mov	dpl,r2
      000527 8B 83            [24] 1629 	mov	dph,r3
      000529 8C F0            [24] 1630 	mov	b,r4
      00052B E4               [12] 1631 	clr	a
      00052C 12r00r00         [24] 1632 	lcall	__gptrput
                                   1633 ;	webserver.c:218: buffer[TCP_CHECKSUM_L_P] = 0;
      00052F 74 33            [12] 1634 	mov	a,#0x33
      000531 2D               [12] 1635 	add	a, r5
      000532 FA               [12] 1636 	mov	r2,a
      000533 E4               [12] 1637 	clr	a
      000534 3E               [12] 1638 	addc	a, r6
      000535 FB               [12] 1639 	mov	r3,a
      000536 8F 04            [24] 1640 	mov	ar4,r7
      000538 8A 82            [24] 1641 	mov	dpl,r2
      00053A 8B 83            [24] 1642 	mov	dph,r3
      00053C 8C F0            [24] 1643 	mov	b,r4
      00053E E4               [12] 1644 	clr	a
      00053F 12r00r00         [24] 1645 	lcall	__gptrput
                                   1646 ;	webserver.c:221: uint16_t tcpLength = (((buffer[IP_TOTLEN_H_P] << 8) | buffer[IP_TOTLEN_L_P]) - IP_HEADER_LEN);
      000542 74 10            [12] 1647 	mov	a,#0x10
      000544 2D               [12] 1648 	add	a, r5
      000545 FA               [12] 1649 	mov	r2,a
      000546 E4               [12] 1650 	clr	a
      000547 3E               [12] 1651 	addc	a, r6
      000548 FB               [12] 1652 	mov	r3,a
      000549 8F 04            [24] 1653 	mov	ar4,r7
      00054B 8A 82            [24] 1654 	mov	dpl,r2
      00054D 8B 83            [24] 1655 	mov	dph,r3
      00054F 8C F0            [24] 1656 	mov	b,r4
      000551 12r00r00         [24] 1657 	lcall	__gptrget
      000554 FC               [12] 1658 	mov	r4,a
      000555 7A 00            [12] 1659 	mov	r2,#0x00
      000557 74 11            [12] 1660 	mov	a,#0x11
      000559 2D               [12] 1661 	add	a, r5
      00055A F8               [12] 1662 	mov	r0,a
      00055B E4               [12] 1663 	clr	a
      00055C 3E               [12] 1664 	addc	a, r6
      00055D F9               [12] 1665 	mov	r1,a
      00055E 8F 03            [24] 1666 	mov	ar3,r7
      000560 88 82            [24] 1667 	mov	dpl,r0
      000562 89 83            [24] 1668 	mov	dph,r1
      000564 8B F0            [24] 1669 	mov	b,r3
      000566 12r00r00         [24] 1670 	lcall	__gptrget
      000569 7B 00            [12] 1671 	mov	r3,#0x00
      00056B 42 02            [12] 1672 	orl	ar2,a
      00056D EB               [12] 1673 	mov	a,r3
      00056E 42 04            [12] 1674 	orl	ar4,a
      000570 EA               [12] 1675 	mov	a,r2
      000571 24 EC            [12] 1676 	add	a,#0xec
      000573 FA               [12] 1677 	mov	r2,a
      000574 EC               [12] 1678 	mov	a,r4
      000575 34 FF            [12] 1679 	addc	a,#0xff
      000577 FC               [12] 1680 	mov	r4,a
                                   1681 ;	webserver.c:222: uint32_t sum = 0;
      000578 90r06r25         [24] 1682 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      00057B E4               [12] 1683 	clr	a
      00057C F0               [24] 1684 	movx	@dptr,a
      00057D A3               [24] 1685 	inc	dptr
      00057E F0               [24] 1686 	movx	@dptr,a
      00057F A3               [24] 1687 	inc	dptr
      000580 F0               [24] 1688 	movx	@dptr,a
      000581 A3               [24] 1689 	inc	dptr
      000582 F0               [24] 1690 	movx	@dptr,a
                                   1691 ;	webserver.c:225: for (uint8_t i = 0; i < 4; i++) {
      000583 8D*01            [24] 1692 	mov	_calculateTcpChecksum_sloc1_1_0,r5
      000585 8E*02            [24] 1693 	mov	(_calculateTcpChecksum_sloc1_1_0 + 1),r6
      000587 8F*03            [24] 1694 	mov	(_calculateTcpChecksum_sloc1_1_0 + 2),r7
      000589 FB               [12] 1695 	mov	r3,a
      00058A                       1696 00108$:
      00058A BB 04 00         [24] 1697 	cjne	r3,#0x04,00168$
      00058D                       1698 00168$:
      00058D 50 5B            [24] 1699 	jnc	00101$
                                   1700 ;	webserver.c:226: sum += buffer[IP_SRC_P + i];
      00058F C0 02            [24] 1701 	push	ar2
      000591 C0 04            [24] 1702 	push	ar4
      000593 8B 00            [24] 1703 	mov	ar0,r3
      000595 79 00            [12] 1704 	mov	r1,#0x00
      000597 74 1A            [12] 1705 	mov	a,#0x1a
      000599 28               [12] 1706 	add	a, r0
      00059A F8               [12] 1707 	mov	r0,a
      00059B E4               [12] 1708 	clr	a
      00059C 39               [12] 1709 	addc	a, r1
      00059D F9               [12] 1710 	mov	r1,a
      00059E E8               [12] 1711 	mov	a,r0
      00059F 25*01            [12] 1712 	add	a, _calculateTcpChecksum_sloc1_1_0
      0005A1 F8               [12] 1713 	mov	r0,a
      0005A2 E9               [12] 1714 	mov	a,r1
      0005A3 35*02            [12] 1715 	addc	a, (_calculateTcpChecksum_sloc1_1_0 + 1)
      0005A5 F9               [12] 1716 	mov	r1,a
      0005A6 AC*03            [24] 1717 	mov	r4,(_calculateTcpChecksum_sloc1_1_0 + 2)
      0005A8 88 82            [24] 1718 	mov	dpl,r0
      0005AA 89 83            [24] 1719 	mov	dph,r1
      0005AC 8C F0            [24] 1720 	mov	b,r4
      0005AE 12r00r00         [24] 1721 	lcall	__gptrget
      0005B1 F5*00            [12] 1722 	mov	_calculateTcpChecksum_sloc0_1_0,a
      0005B3 90r06r25         [24] 1723 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      0005B6 E0               [24] 1724 	movx	a,@dptr
      0005B7 F5*04            [12] 1725 	mov	_calculateTcpChecksum_sloc2_1_0,a
      0005B9 A3               [24] 1726 	inc	dptr
      0005BA E0               [24] 1727 	movx	a,@dptr
      0005BB F5*05            [12] 1728 	mov	(_calculateTcpChecksum_sloc2_1_0 + 1),a
      0005BD A3               [24] 1729 	inc	dptr
      0005BE E0               [24] 1730 	movx	a,@dptr
      0005BF F5*06            [12] 1731 	mov	(_calculateTcpChecksum_sloc2_1_0 + 2),a
      0005C1 A3               [24] 1732 	inc	dptr
      0005C2 E0               [24] 1733 	movx	a,@dptr
      0005C3 F5*07            [12] 1734 	mov	(_calculateTcpChecksum_sloc2_1_0 + 3),a
      0005C5 AC*00            [24] 1735 	mov	r4,_calculateTcpChecksum_sloc0_1_0
      0005C7 7D 00            [12] 1736 	mov	r5,#0x00
      0005C9 7E 00            [12] 1737 	mov	r6,#0x00
      0005CB 7F 00            [12] 1738 	mov	r7,#0x00
      0005CD 90r06r25         [24] 1739 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      0005D0 EC               [12] 1740 	mov	a,r4
      0005D1 25*04            [12] 1741 	add	a, _calculateTcpChecksum_sloc2_1_0
      0005D3 F0               [24] 1742 	movx	@dptr,a
      0005D4 ED               [12] 1743 	mov	a,r5
      0005D5 35*05            [12] 1744 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      0005D7 A3               [24] 1745 	inc	dptr
      0005D8 F0               [24] 1746 	movx	@dptr,a
      0005D9 EE               [12] 1747 	mov	a,r6
      0005DA 35*06            [12] 1748 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 2)
      0005DC A3               [24] 1749 	inc	dptr
      0005DD F0               [24] 1750 	movx	@dptr,a
      0005DE EF               [12] 1751 	mov	a,r7
      0005DF 35*07            [12] 1752 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 3)
      0005E1 A3               [24] 1753 	inc	dptr
      0005E2 F0               [24] 1754 	movx	@dptr,a
                                   1755 ;	webserver.c:225: for (uint8_t i = 0; i < 4; i++) {
      0005E3 0B               [12] 1756 	inc	r3
      0005E4 D0 04            [24] 1757 	pop	ar4
      0005E6 D0 02            [24] 1758 	pop	ar2
      0005E8 80 A0            [24] 1759 	sjmp	00108$
      0005EA                       1760 00101$:
                                   1761 ;	webserver.c:230: for (uint8_t i = 0; i < 4; i++) {
      0005EA 90r06r22         [24] 1762 	mov	dptr,#_calculateTcpChecksum_buffer_10000_108
      0005ED E0               [24] 1763 	movx	a,@dptr
      0005EE F5*01            [12] 1764 	mov	_calculateTcpChecksum_sloc1_1_0,a
      0005F0 A3               [24] 1765 	inc	dptr
      0005F1 E0               [24] 1766 	movx	a,@dptr
      0005F2 F5*02            [12] 1767 	mov	(_calculateTcpChecksum_sloc1_1_0 + 1),a
      0005F4 A3               [24] 1768 	inc	dptr
      0005F5 E0               [24] 1769 	movx	a,@dptr
      0005F6 F5*03            [12] 1770 	mov	(_calculateTcpChecksum_sloc1_1_0 + 2),a
      0005F8 7B 00            [12] 1771 	mov	r3,#0x00
      0005FA                       1772 00111$:
      0005FA BB 04 00         [24] 1773 	cjne	r3,#0x04,00170$
      0005FD                       1774 00170$:
      0005FD 50 5B            [24] 1775 	jnc	00102$
                                   1776 ;	webserver.c:231: sum += buffer[IP_DST_P + i];
      0005FF C0 02            [24] 1777 	push	ar2
      000601 C0 04            [24] 1778 	push	ar4
      000603 8B 00            [24] 1779 	mov	ar0,r3
      000605 79 00            [12] 1780 	mov	r1,#0x00
      000607 74 1E            [12] 1781 	mov	a,#0x1e
      000609 28               [12] 1782 	add	a, r0
      00060A F8               [12] 1783 	mov	r0,a
      00060B E4               [12] 1784 	clr	a
      00060C 39               [12] 1785 	addc	a, r1
      00060D F9               [12] 1786 	mov	r1,a
      00060E E8               [12] 1787 	mov	a,r0
      00060F 25*01            [12] 1788 	add	a, _calculateTcpChecksum_sloc1_1_0
      000611 F8               [12] 1789 	mov	r0,a
      000612 E9               [12] 1790 	mov	a,r1
      000613 35*02            [12] 1791 	addc	a, (_calculateTcpChecksum_sloc1_1_0 + 1)
      000615 F9               [12] 1792 	mov	r1,a
      000616 AC*03            [24] 1793 	mov	r4,(_calculateTcpChecksum_sloc1_1_0 + 2)
      000618 88 82            [24] 1794 	mov	dpl,r0
      00061A 89 83            [24] 1795 	mov	dph,r1
      00061C 8C F0            [24] 1796 	mov	b,r4
      00061E 12r00r00         [24] 1797 	lcall	__gptrget
      000621 F5*04            [12] 1798 	mov	_calculateTcpChecksum_sloc2_1_0,a
      000623 90r06r25         [24] 1799 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      000626 E0               [24] 1800 	movx	a,@dptr
      000627 F5*08            [12] 1801 	mov	_calculateTcpChecksum_sloc3_1_0,a
      000629 A3               [24] 1802 	inc	dptr
      00062A E0               [24] 1803 	movx	a,@dptr
      00062B F5*09            [12] 1804 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),a
      00062D A3               [24] 1805 	inc	dptr
      00062E E0               [24] 1806 	movx	a,@dptr
      00062F F5*0A            [12] 1807 	mov	(_calculateTcpChecksum_sloc3_1_0 + 2),a
      000631 A3               [24] 1808 	inc	dptr
      000632 E0               [24] 1809 	movx	a,@dptr
      000633 F5*0B            [12] 1810 	mov	(_calculateTcpChecksum_sloc3_1_0 + 3),a
      000635 AC*04            [24] 1811 	mov	r4,_calculateTcpChecksum_sloc2_1_0
      000637 7D 00            [12] 1812 	mov	r5,#0x00
      000639 7E 00            [12] 1813 	mov	r6,#0x00
      00063B 7F 00            [12] 1814 	mov	r7,#0x00
      00063D 90r06r25         [24] 1815 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      000640 EC               [12] 1816 	mov	a,r4
      000641 25*08            [12] 1817 	add	a, _calculateTcpChecksum_sloc3_1_0
      000643 F0               [24] 1818 	movx	@dptr,a
      000644 ED               [12] 1819 	mov	a,r5
      000645 35*09            [12] 1820 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 1)
      000647 A3               [24] 1821 	inc	dptr
      000648 F0               [24] 1822 	movx	@dptr,a
      000649 EE               [12] 1823 	mov	a,r6
      00064A 35*0A            [12] 1824 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 2)
      00064C A3               [24] 1825 	inc	dptr
      00064D F0               [24] 1826 	movx	@dptr,a
      00064E EF               [12] 1827 	mov	a,r7
      00064F 35*0B            [12] 1828 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 3)
      000651 A3               [24] 1829 	inc	dptr
      000652 F0               [24] 1830 	movx	@dptr,a
                                   1831 ;	webserver.c:230: for (uint8_t i = 0; i < 4; i++) {
      000653 0B               [12] 1832 	inc	r3
      000654 D0 04            [24] 1833 	pop	ar4
      000656 D0 02            [24] 1834 	pop	ar2
      000658 80 A0            [24] 1835 	sjmp	00111$
      00065A                       1836 00102$:
                                   1837 ;	webserver.c:235: sum += (uint16_t) IP_PROTO_TCP;  // Protocol number for TCP
      00065A 90r06r25         [24] 1838 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      00065D E0               [24] 1839 	movx	a,@dptr
      00065E FB               [12] 1840 	mov	r3,a
      00065F A3               [24] 1841 	inc	dptr
      000660 E0               [24] 1842 	movx	a,@dptr
      000661 FD               [12] 1843 	mov	r5,a
      000662 A3               [24] 1844 	inc	dptr
      000663 E0               [24] 1845 	movx	a,@dptr
      000664 FE               [12] 1846 	mov	r6,a
      000665 A3               [24] 1847 	inc	dptr
      000666 E0               [24] 1848 	movx	a,@dptr
      000667 FF               [12] 1849 	mov	r7,a
      000668 90r06r25         [24] 1850 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      00066B 74 06            [12] 1851 	mov	a,#0x06
      00066D 2B               [12] 1852 	add	a, r3
      00066E F0               [24] 1853 	movx	@dptr,a
      00066F E4               [12] 1854 	clr	a
      000670 3D               [12] 1855 	addc	a, r5
      000671 A3               [24] 1856 	inc	dptr
      000672 F0               [24] 1857 	movx	@dptr,a
      000673 E4               [12] 1858 	clr	a
      000674 3E               [12] 1859 	addc	a, r6
      000675 A3               [24] 1860 	inc	dptr
      000676 F0               [24] 1861 	movx	@dptr,a
      000677 E4               [12] 1862 	clr	a
      000678 3F               [12] 1863 	addc	a, r7
      000679 A3               [24] 1864 	inc	dptr
      00067A F0               [24] 1865 	movx	@dptr,a
                                   1866 ;	webserver.c:236: sum += tcpLength;  // TCP length is the total length minus IP header length
      00067B 90r06r25         [24] 1867 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      00067E E0               [24] 1868 	movx	a,@dptr
      00067F F5*08            [12] 1869 	mov	_calculateTcpChecksum_sloc3_1_0,a
      000681 A3               [24] 1870 	inc	dptr
      000682 E0               [24] 1871 	movx	a,@dptr
      000683 F5*09            [12] 1872 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),a
      000685 A3               [24] 1873 	inc	dptr
      000686 E0               [24] 1874 	movx	a,@dptr
      000687 F5*0A            [12] 1875 	mov	(_calculateTcpChecksum_sloc3_1_0 + 2),a
      000689 A3               [24] 1876 	inc	dptr
      00068A E0               [24] 1877 	movx	a,@dptr
      00068B F5*0B            [12] 1878 	mov	(_calculateTcpChecksum_sloc3_1_0 + 3),a
      00068D 8A 00            [24] 1879 	mov	ar0,r2
      00068F 8C 01            [24] 1880 	mov	ar1,r4
      000691 7E 00            [12] 1881 	mov	r6,#0x00
      000693 7F 00            [12] 1882 	mov	r7,#0x00
      000695 90r06r25         [24] 1883 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      000698 E8               [12] 1884 	mov	a,r0
      000699 25*08            [12] 1885 	add	a, _calculateTcpChecksum_sloc3_1_0
      00069B F0               [24] 1886 	movx	@dptr,a
      00069C E9               [12] 1887 	mov	a,r1
      00069D 35*09            [12] 1888 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 1)
      00069F A3               [24] 1889 	inc	dptr
      0006A0 F0               [24] 1890 	movx	@dptr,a
      0006A1 EE               [12] 1891 	mov	a,r6
      0006A2 35*0A            [12] 1892 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 2)
      0006A4 A3               [24] 1893 	inc	dptr
      0006A5 F0               [24] 1894 	movx	@dptr,a
      0006A6 EF               [12] 1895 	mov	a,r7
      0006A7 35*0B            [12] 1896 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 3)
      0006A9 A3               [24] 1897 	inc	dptr
      0006AA F0               [24] 1898 	movx	@dptr,a
                                   1899 ;	webserver.c:239: for (uint16_t i = TCP_SRC_PORT_H_P; i < TCP_SRC_PORT_H_P + tcpLength; i += 2) {
      0006AB 90r06r29         [24] 1900 	mov	dptr,#_calculateTcpChecksum_i_20001_115
      0006AE 74 22            [12] 1901 	mov	a,#0x22
      0006B0 F0               [24] 1902 	movx	@dptr,a
      0006B1 E4               [12] 1903 	clr	a
      0006B2 A3               [24] 1904 	inc	dptr
      0006B3 F0               [24] 1905 	movx	@dptr,a
      0006B4 90r06r22         [24] 1906 	mov	dptr,#_calculateTcpChecksum_buffer_10000_108
      0006B7 E0               [24] 1907 	movx	a,@dptr
      0006B8 FD               [12] 1908 	mov	r5,a
      0006B9 A3               [24] 1909 	inc	dptr
      0006BA E0               [24] 1910 	movx	a,@dptr
      0006BB FE               [12] 1911 	mov	r6,a
      0006BC A3               [24] 1912 	inc	dptr
      0006BD E0               [24] 1913 	movx	a,@dptr
      0006BE FF               [12] 1914 	mov	r7,a
      0006BF                       1915 00114$:
      0006BF 8A 01            [24] 1916 	mov	ar1,r2
      0006C1 8C 03            [24] 1917 	mov	ar3,r4
      0006C3 74 22            [12] 1918 	mov	a,#0x22
      0006C5 29               [12] 1919 	add	a, r1
      0006C6 F9               [12] 1920 	mov	r1,a
      0006C7 E4               [12] 1921 	clr	a
      0006C8 3B               [12] 1922 	addc	a, r3
      0006C9 FB               [12] 1923 	mov	r3,a
      0006CA 90r06r29         [24] 1924 	mov	dptr,#_calculateTcpChecksum_i_20001_115
      0006CD E0               [24] 1925 	movx	a,@dptr
      0006CE F5*08            [12] 1926 	mov	_calculateTcpChecksum_sloc3_1_0,a
      0006D0 A3               [24] 1927 	inc	dptr
      0006D1 E0               [24] 1928 	movx	a,@dptr
      0006D2 F5*09            [12] 1929 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),a
      0006D4 85*08*04         [24] 1930 	mov	_calculateTcpChecksum_sloc2_1_0,_calculateTcpChecksum_sloc3_1_0
      0006D7 85*09*05         [24] 1931 	mov	(_calculateTcpChecksum_sloc2_1_0 + 1),(_calculateTcpChecksum_sloc3_1_0 + 1)
      0006DA C3               [12] 1932 	clr	c
      0006DB E5*04            [12] 1933 	mov	a,_calculateTcpChecksum_sloc2_1_0
      0006DD 99               [12] 1934 	subb	a,r1
      0006DE E5*05            [12] 1935 	mov	a,(_calculateTcpChecksum_sloc2_1_0 + 1)
      0006E0 9B               [12] 1936 	subb	a,r3
      0006E1 40 03            [24] 1937 	jc	00172$
      0006E3 02r07r6D         [24] 1938 	ljmp	00104$
      0006E6                       1939 00172$:
                                   1940 ;	webserver.c:240: uint16_t word = (buffer[i] << 8) | buffer[i + 1];  // Combine the bytes into 16-bit word
      0006E6 C0 02            [24] 1941 	push	ar2
      0006E8 C0 04            [24] 1942 	push	ar4
      0006EA E5*08            [12] 1943 	mov	a,_calculateTcpChecksum_sloc3_1_0
      0006EC 2D               [12] 1944 	add	a, r5
      0006ED F8               [12] 1945 	mov	r0,a
      0006EE E5*09            [12] 1946 	mov	a,(_calculateTcpChecksum_sloc3_1_0 + 1)
      0006F0 3E               [12] 1947 	addc	a, r6
      0006F1 F9               [12] 1948 	mov	r1,a
      0006F2 8F 03            [24] 1949 	mov	ar3,r7
      0006F4 88 82            [24] 1950 	mov	dpl,r0
      0006F6 89 83            [24] 1951 	mov	dph,r1
      0006F8 8B F0            [24] 1952 	mov	b,r3
      0006FA 12r00r00         [24] 1953 	lcall	__gptrget
      0006FD FB               [12] 1954 	mov	r3,a
      0006FE 78 00            [12] 1955 	mov	r0,#0x00
      000700 74 01            [12] 1956 	mov	a,#0x01
      000702 25*04            [12] 1957 	add	a, _calculateTcpChecksum_sloc2_1_0
      000704 F9               [12] 1958 	mov	r1,a
      000705 E4               [12] 1959 	clr	a
      000706 35*05            [12] 1960 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      000708 FC               [12] 1961 	mov	r4,a
      000709 E9               [12] 1962 	mov	a,r1
      00070A 2D               [12] 1963 	add	a, r5
      00070B F9               [12] 1964 	mov	r1,a
      00070C EC               [12] 1965 	mov	a,r4
      00070D 3E               [12] 1966 	addc	a, r6
      00070E FC               [12] 1967 	mov	r4,a
      00070F 8F 02            [24] 1968 	mov	ar2,r7
      000711 89 82            [24] 1969 	mov	dpl,r1
      000713 8C 83            [24] 1970 	mov	dph,r4
      000715 8A F0            [24] 1971 	mov	b,r2
      000717 12r00r00         [24] 1972 	lcall	__gptrget
      00071A 7C 00            [12] 1973 	mov	r4,#0x00
      00071C 42 00            [12] 1974 	orl	ar0,a
      00071E EC               [12] 1975 	mov	a,r4
      00071F 42 03            [12] 1976 	orl	ar3,a
      000721 88*08            [24] 1977 	mov	_calculateTcpChecksum_sloc3_1_0,r0
      000723 8B*09            [24] 1978 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),r3
                                   1979 ;	webserver.c:241: sum += word;
      000725 90r06r25         [24] 1980 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      000728 E0               [24] 1981 	movx	a,@dptr
      000729 F5*0C            [12] 1982 	mov	_calculateTcpChecksum_sloc4_1_0,a
      00072B A3               [24] 1983 	inc	dptr
      00072C E0               [24] 1984 	movx	a,@dptr
      00072D F5*0D            [12] 1985 	mov	(_calculateTcpChecksum_sloc4_1_0 + 1),a
      00072F A3               [24] 1986 	inc	dptr
      000730 E0               [24] 1987 	movx	a,@dptr
      000731 F5*0E            [12] 1988 	mov	(_calculateTcpChecksum_sloc4_1_0 + 2),a
      000733 A3               [24] 1989 	inc	dptr
      000734 E0               [24] 1990 	movx	a,@dptr
      000735 F5*0F            [12] 1991 	mov	(_calculateTcpChecksum_sloc4_1_0 + 3),a
      000737 A8*08            [24] 1992 	mov	r0,_calculateTcpChecksum_sloc3_1_0
      000739 AA*09            [24] 1993 	mov	r2,(_calculateTcpChecksum_sloc3_1_0 + 1)
      00073B 7B 00            [12] 1994 	mov	r3,#0x00
      00073D 7C 00            [12] 1995 	mov	r4,#0x00
      00073F 90r06r25         [24] 1996 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      000742 E8               [12] 1997 	mov	a,r0
      000743 25*0C            [12] 1998 	add	a, _calculateTcpChecksum_sloc4_1_0
      000745 F0               [24] 1999 	movx	@dptr,a
      000746 EA               [12] 2000 	mov	a,r2
      000747 35*0D            [12] 2001 	addc	a, (_calculateTcpChecksum_sloc4_1_0 + 1)
      000749 A3               [24] 2002 	inc	dptr
      00074A F0               [24] 2003 	movx	@dptr,a
      00074B EB               [12] 2004 	mov	a,r3
      00074C 35*0E            [12] 2005 	addc	a, (_calculateTcpChecksum_sloc4_1_0 + 2)
      00074E A3               [24] 2006 	inc	dptr
      00074F F0               [24] 2007 	movx	@dptr,a
      000750 EC               [12] 2008 	mov	a,r4
      000751 35*0F            [12] 2009 	addc	a, (_calculateTcpChecksum_sloc4_1_0 + 3)
      000753 A3               [24] 2010 	inc	dptr
      000754 F0               [24] 2011 	movx	@dptr,a
                                   2012 ;	webserver.c:239: for (uint16_t i = TCP_SRC_PORT_H_P; i < TCP_SRC_PORT_H_P + tcpLength; i += 2) {
      000755 74 02            [12] 2013 	mov	a,#0x02
      000757 25*04            [12] 2014 	add	a, _calculateTcpChecksum_sloc2_1_0
      000759 FB               [12] 2015 	mov	r3,a
      00075A E4               [12] 2016 	clr	a
      00075B 35*05            [12] 2017 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      00075D FC               [12] 2018 	mov	r4,a
      00075E 90r06r29         [24] 2019 	mov	dptr,#_calculateTcpChecksum_i_20001_115
      000761 EB               [12] 2020 	mov	a,r3
      000762 F0               [24] 2021 	movx	@dptr,a
      000763 EC               [12] 2022 	mov	a,r4
      000764 A3               [24] 2023 	inc	dptr
      000765 F0               [24] 2024 	movx	@dptr,a
      000766 D0 04            [24] 2025 	pop	ar4
      000768 D0 02            [24] 2026 	pop	ar2
      00076A 02r06rBF         [24] 2027 	ljmp	00114$
                                   2028 ;	webserver.c:245: while (sum >> 16) {
      00076D                       2029 00104$:
      00076D 90r06r25         [24] 2030 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      000770 E0               [24] 2031 	movx	a,@dptr
      000771 FC               [12] 2032 	mov	r4,a
      000772 A3               [24] 2033 	inc	dptr
      000773 E0               [24] 2034 	movx	a,@dptr
      000774 FD               [12] 2035 	mov	r5,a
      000775 A3               [24] 2036 	inc	dptr
      000776 E0               [24] 2037 	movx	a,@dptr
      000777 FE               [12] 2038 	mov	r6,a
      000778 A3               [24] 2039 	inc	dptr
      000779 E0               [24] 2040 	movx	a,@dptr
      00077A FF               [12] 2041 	mov	r7,a
      00077B 8E*0C            [24] 2042 	mov	_calculateTcpChecksum_sloc4_1_0,r6
      00077D 8F*0D            [24] 2043 	mov	(_calculateTcpChecksum_sloc4_1_0 + 1),r7
      00077F E4               [12] 2044 	clr	a
      000780 F5*0E            [12] 2045 	mov	(_calculateTcpChecksum_sloc4_1_0 + 2),a
      000782 F5*0F            [12] 2046 	mov	(_calculateTcpChecksum_sloc4_1_0 + 3),a
      000784 E5*0C            [12] 2047 	mov	a,_calculateTcpChecksum_sloc4_1_0
      000786 45*0D            [12] 2048 	orl	a,(_calculateTcpChecksum_sloc4_1_0 + 1)
      000788 45*0E            [12] 2049 	orl	a,(_calculateTcpChecksum_sloc4_1_0 + 2)
      00078A 45*0F            [12] 2050 	orl	a,(_calculateTcpChecksum_sloc4_1_0 + 3)
      00078C 60 20            [24] 2051 	jz	00106$
                                   2052 ;	webserver.c:246: sum = (sum & 0xFFFF) + (sum >> 16);
      00078E 8C 00            [24] 2053 	mov	ar0,r4
      000790 8D 01            [24] 2054 	mov	ar1,r5
      000792 7A 00            [12] 2055 	mov	r2,#0x00
      000794 7B 00            [12] 2056 	mov	r3,#0x00
      000796 90r06r25         [24] 2057 	mov	dptr,#_calculateTcpChecksum_sum_10001_110
      000799 E5*0C            [12] 2058 	mov	a,_calculateTcpChecksum_sloc4_1_0
      00079B 28               [12] 2059 	add	a, r0
      00079C F0               [24] 2060 	movx	@dptr,a
      00079D E5*0D            [12] 2061 	mov	a,(_calculateTcpChecksum_sloc4_1_0 + 1)
      00079F 39               [12] 2062 	addc	a, r1
      0007A0 A3               [24] 2063 	inc	dptr
      0007A1 F0               [24] 2064 	movx	@dptr,a
      0007A2 E5*0E            [12] 2065 	mov	a,(_calculateTcpChecksum_sloc4_1_0 + 2)
      0007A4 3A               [12] 2066 	addc	a, r2
      0007A5 A3               [24] 2067 	inc	dptr
      0007A6 F0               [24] 2068 	movx	@dptr,a
      0007A7 E5*0F            [12] 2069 	mov	a,(_calculateTcpChecksum_sloc4_1_0 + 3)
      0007A9 3B               [12] 2070 	addc	a, r3
      0007AA A3               [24] 2071 	inc	dptr
      0007AB F0               [24] 2072 	movx	@dptr,a
      0007AC 80 BF            [24] 2073 	sjmp	00104$
      0007AE                       2074 00106$:
                                   2075 ;	webserver.c:250: uint16_t checksum = ~((uint16_t) sum);
      0007AE EC               [12] 2076 	mov	a,r4
      0007AF F4               [12] 2077 	cpl	a
      0007B0 FC               [12] 2078 	mov	r4,a
      0007B1 ED               [12] 2079 	mov	a,r5
      0007B2 F4               [12] 2080 	cpl	a
      0007B3 FD               [12] 2081 	mov	r5,a
                                   2082 ;	webserver.c:251: buffer[TCP_CHECKSUM_H_P] = (checksum >> 8) & 0xFF;
      0007B4 90r06r22         [24] 2083 	mov	dptr,#_calculateTcpChecksum_buffer_10000_108
      0007B7 E0               [24] 2084 	movx	a,@dptr
      0007B8 FB               [12] 2085 	mov	r3,a
      0007B9 A3               [24] 2086 	inc	dptr
      0007BA E0               [24] 2087 	movx	a,@dptr
      0007BB FE               [12] 2088 	mov	r6,a
      0007BC A3               [24] 2089 	inc	dptr
      0007BD E0               [24] 2090 	movx	a,@dptr
      0007BE FF               [12] 2091 	mov	r7,a
      0007BF 74 32            [12] 2092 	mov	a,#0x32
      0007C1 2B               [12] 2093 	add	a, r3
      0007C2 F5*0C            [12] 2094 	mov	_calculateTcpChecksum_sloc4_1_0,a
      0007C4 E4               [12] 2095 	clr	a
      0007C5 3E               [12] 2096 	addc	a, r6
      0007C6 F5*0D            [12] 2097 	mov	(_calculateTcpChecksum_sloc4_1_0 + 1),a
      0007C8 8F*0E            [24] 2098 	mov	(_calculateTcpChecksum_sloc4_1_0 + 2),r7
      0007CA 8D 02            [24] 2099 	mov	ar2,r5
      0007CC 85*0C 82         [24] 2100 	mov	dpl,_calculateTcpChecksum_sloc4_1_0
      0007CF 85*0D 83         [24] 2101 	mov	dph,(_calculateTcpChecksum_sloc4_1_0 + 1)
      0007D2 85*0E F0         [24] 2102 	mov	b,(_calculateTcpChecksum_sloc4_1_0 + 2)
      0007D5 EA               [12] 2103 	mov	a,r2
      0007D6 12r00r00         [24] 2104 	lcall	__gptrput
                                   2105 ;	webserver.c:252: buffer[TCP_CHECKSUM_L_P] = checksum & 0xFF;
      0007D9 74 33            [12] 2106 	mov	a,#0x33
      0007DB 2B               [12] 2107 	add	a, r3
      0007DC FB               [12] 2108 	mov	r3,a
      0007DD E4               [12] 2109 	clr	a
      0007DE 3E               [12] 2110 	addc	a, r6
      0007DF FE               [12] 2111 	mov	r6,a
      0007E0 8B 82            [24] 2112 	mov	dpl,r3
      0007E2 8E 83            [24] 2113 	mov	dph,r6
      0007E4 8F F0            [24] 2114 	mov	b,r7
      0007E6 EC               [12] 2115 	mov	a,r4
                                   2116 ;	webserver.c:253: }
      0007E7 02r00r00         [24] 2117 	ljmp	__gptrput
                                   2118 ;------------------------------------------------------------
                                   2119 ;Allocation info for local variables in function 'makeTcpFinPshAck'
                                   2120 ;------------------------------------------------------------
                                   2121 ;device_mac                Allocated with name '_makeTcpFinPshAck_device_mac_10000_120'
                                   2122 ;target_mac                Allocated with name '_makeTcpFinPshAck_target_mac_10000_120'
                                   2123 ;device_ip                 Allocated with name '_makeTcpFinPshAck_device_ip_10000_120'
                                   2124 ;target_ip                 Allocated with name '_makeTcpFinPshAck_target_ip_10000_120'
                                   2125 ;srcPort                   Allocated with name '_makeTcpFinPshAck_srcPort_10001_121'
                                   2126 ;dstPort                   Allocated with name '_makeTcpFinPshAck_dstPort_10001_121'
                                   2127 ;serverSeqNum              Allocated with name '_makeTcpFinPshAck_serverSeqNum_10002_122'
                                   2128 ;ackNum                    Allocated with name '_makeTcpFinPshAck_ackNum_10002_122'
                                   2129 ;html_payload              Allocated with name '_makeTcpFinPshAck_html_payload_10003_123'
                                   2130 ;dataLength                Allocated with name '_makeTcpFinPshAck_dataLength_10003_123'
                                   2131 ;totalLength               Allocated with name '_makeTcpFinPshAck_totalLength_10003_123'
                                   2132 ;------------------------------------------------------------
                                   2133 ;	webserver.c:265: void makeTcpFinPshAck(void) 
                                   2134 ;	-----------------------------------------
                                   2135 ;	 function makeTcpFinPshAck
                                   2136 ;	-----------------------------------------
      0007EA                       2137 _makeTcpFinPshAck:
                                   2138 ;	webserver.c:267: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      0007EA 90r06r2B         [24] 2139 	mov	dptr,#_makeTcpFinPshAck_device_mac_10000_120
      0007ED 74 02            [12] 2140 	mov	a,#0x02
      0007EF F0               [24] 2141 	movx	@dptr,a
      0007F0 90r06r2C         [24] 2142 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_120 + 0x0001)
      0007F3 23               [12] 2143 	rl	a
      0007F4 F0               [24] 2144 	movx	@dptr,a
      0007F5 90r06r2D         [24] 2145 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_120 + 0x0002)
      0007F8 74 A3            [12] 2146 	mov	a,#0xa3
      0007FA F0               [24] 2147 	movx	@dptr,a
      0007FB 90r06r2E         [24] 2148 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_120 + 0x0003)
      0007FE 74 3C            [12] 2149 	mov	a,#0x3c
      000800 F0               [24] 2150 	movx	@dptr,a
      000801 90r06r2F         [24] 2151 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_120 + 0x0004)
      000804 74 4D            [12] 2152 	mov	a,#0x4d
      000806 F0               [24] 2153 	movx	@dptr,a
      000807 90r06r30         [24] 2154 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_120 + 0x0005)
      00080A 74 50            [12] 2155 	mov	a,#0x50
      00080C F0               [24] 2156 	movx	@dptr,a
                                   2157 ;	webserver.c:268: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      00080D 90r06r31         [24] 2158 	mov	dptr,#_makeTcpFinPshAck_target_mac_10000_120
      000810 74 FF            [12] 2159 	mov	a,#0xff
      000812 F0               [24] 2160 	movx	@dptr,a
      000813 90r06r32         [24] 2161 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_120 + 0x0001)
      000816 F0               [24] 2162 	movx	@dptr,a
      000817 90r06r33         [24] 2163 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_120 + 0x0002)
      00081A F0               [24] 2164 	movx	@dptr,a
      00081B 90r06r34         [24] 2165 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_120 + 0x0003)
      00081E F0               [24] 2166 	movx	@dptr,a
      00081F 90r06r35         [24] 2167 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_120 + 0x0004)
      000822 F0               [24] 2168 	movx	@dptr,a
      000823 90r06r36         [24] 2169 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_120 + 0x0005)
      000826 F0               [24] 2170 	movx	@dptr,a
                                   2171 ;	webserver.c:269: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000827 90r06r37         [24] 2172 	mov	dptr,#_makeTcpFinPshAck_device_ip_10000_120
      00082A 74 C0            [12] 2173 	mov	a,#0xc0
      00082C F0               [24] 2174 	movx	@dptr,a
      00082D 90r06r38         [24] 2175 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_120 + 0x0001)
      000830 74 A8            [12] 2176 	mov	a,#0xa8
      000832 F0               [24] 2177 	movx	@dptr,a
      000833 90r06r39         [24] 2178 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_120 + 0x0002)
      000836 74 01            [12] 2179 	mov	a,#0x01
      000838 F0               [24] 2180 	movx	@dptr,a
      000839 90r06r3A         [24] 2181 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_120 + 0x0003)
      00083C 74 64            [12] 2182 	mov	a,#0x64
      00083E F0               [24] 2183 	movx	@dptr,a
                                   2184 ;	webserver.c:270: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      00083F 90r06r3B         [24] 2185 	mov	dptr,#_makeTcpFinPshAck_target_ip_10000_120
      000842 74 C0            [12] 2186 	mov	a,#0xc0
      000844 F0               [24] 2187 	movx	@dptr,a
      000845 90r06r3C         [24] 2188 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_120 + 0x0001)
      000848 74 A8            [12] 2189 	mov	a,#0xa8
      00084A F0               [24] 2190 	movx	@dptr,a
      00084B 90r06r3D         [24] 2191 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_120 + 0x0002)
      00084E 74 01            [12] 2192 	mov	a,#0x01
      000850 F0               [24] 2193 	movx	@dptr,a
      000851 90r06r3E         [24] 2194 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_120 + 0x0003)
      000854 F0               [24] 2195 	movx	@dptr,a
                                   2196 ;	webserver.c:271: printf("makeTcpFinPshAck\n\r");
      000855 74r8B            [12] 2197 	mov	a,#___str_2
      000857 C0 E0            [24] 2198 	push	acc
      000859 74s03            [12] 2199 	mov	a,#(___str_2 >> 8)
      00085B C0 E0            [24] 2200 	push	acc
      00085D 74 80            [12] 2201 	mov	a,#0x80
      00085F C0 E0            [24] 2202 	push	acc
      000861 12r00r00         [24] 2203 	lcall	_printf
      000864 15 81            [12] 2204 	dec	sp
      000866 15 81            [12] 2205 	dec	sp
      000868 15 81            [12] 2206 	dec	sp
                                   2207 ;	webserver.c:274: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      00086A 90r00r00         [24] 2208 	mov	dptr,#_memmove_PARM_2
      00086D 74r00            [12] 2209 	mov	a,#_buffer
      00086F F0               [24] 2210 	movx	@dptr,a
      000870 74s00            [12] 2211 	mov	a,#(_buffer >> 8)
      000872 A3               [24] 2212 	inc	dptr
      000873 F0               [24] 2213 	movx	@dptr,a
      000874 E4               [12] 2214 	clr	a
      000875 A3               [24] 2215 	inc	dptr
      000876 F0               [24] 2216 	movx	@dptr,a
      000877 90r00r00         [24] 2217 	mov	dptr,#_memmove_PARM_3
      00087A 74 36            [12] 2218 	mov	a,#0x36
      00087C F0               [24] 2219 	movx	@dptr,a
      00087D E4               [12] 2220 	clr	a
      00087E A3               [24] 2221 	inc	dptr
      00087F F0               [24] 2222 	movx	@dptr,a
      000880 90r00r01         [24] 2223 	mov	dptr,#(_buffer + 0x0001)
      000883 F5 F0            [12] 2224 	mov	b,a
      000885 12r00r00         [24] 2225 	lcall	_memmove
                                   2226 ;	webserver.c:275: buffer[0] = 0x0E;
      000888 90r00r00         [24] 2227 	mov	dptr,#_buffer
      00088B 74 0E            [12] 2228 	mov	a,#0x0e
      00088D F0               [24] 2229 	movx	@dptr,a
                                   2230 ;	webserver.c:278: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      00088E 90r00r00         [24] 2231 	mov	dptr,#___memcpy_PARM_2
      000891 74r07            [12] 2232 	mov	a,#(_buffer + 0x0007)
      000893 F0               [24] 2233 	movx	@dptr,a
      000894 74s00            [12] 2234 	mov	a,#((_buffer + 0x0007) >> 8)
      000896 A3               [24] 2235 	inc	dptr
      000897 F0               [24] 2236 	movx	@dptr,a
      000898 E4               [12] 2237 	clr	a
      000899 A3               [24] 2238 	inc	dptr
      00089A F0               [24] 2239 	movx	@dptr,a
      00089B 90r00r00         [24] 2240 	mov	dptr,#___memcpy_PARM_3
      00089E 74 06            [12] 2241 	mov	a,#0x06
      0008A0 F0               [24] 2242 	movx	@dptr,a
      0008A1 E4               [12] 2243 	clr	a
      0008A2 A3               [24] 2244 	inc	dptr
      0008A3 F0               [24] 2245 	movx	@dptr,a
      0008A4 90r00r01         [24] 2246 	mov	dptr,#(_buffer + 0x0001)
      0008A7 F5 F0            [12] 2247 	mov	b,a
      0008A9 12r00r00         [24] 2248 	lcall	___memcpy
                                   2249 ;	webserver.c:279: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      0008AC 90r00r00         [24] 2250 	mov	dptr,#___memcpy_PARM_2
      0008AF 74r2B            [12] 2251 	mov	a,#_makeTcpFinPshAck_device_mac_10000_120
      0008B1 F0               [24] 2252 	movx	@dptr,a
      0008B2 74s06            [12] 2253 	mov	a,#(_makeTcpFinPshAck_device_mac_10000_120 >> 8)
      0008B4 A3               [24] 2254 	inc	dptr
      0008B5 F0               [24] 2255 	movx	@dptr,a
      0008B6 E4               [12] 2256 	clr	a
      0008B7 A3               [24] 2257 	inc	dptr
      0008B8 F0               [24] 2258 	movx	@dptr,a
      0008B9 90r00r00         [24] 2259 	mov	dptr,#___memcpy_PARM_3
      0008BC 74 06            [12] 2260 	mov	a,#0x06
      0008BE F0               [24] 2261 	movx	@dptr,a
      0008BF E4               [12] 2262 	clr	a
      0008C0 A3               [24] 2263 	inc	dptr
      0008C1 F0               [24] 2264 	movx	@dptr,a
      0008C2 90r00r07         [24] 2265 	mov	dptr,#(_buffer + 0x0007)
      0008C5 F5 F0            [12] 2266 	mov	b,a
      0008C7 12r00r00         [24] 2267 	lcall	___memcpy
                                   2268 ;	webserver.c:282: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      0008CA 90r00r00         [24] 2269 	mov	dptr,#___memcpy_PARM_2
      0008CD 74r1B            [12] 2270 	mov	a,#(_buffer + 0x001b)
      0008CF F0               [24] 2271 	movx	@dptr,a
      0008D0 74s00            [12] 2272 	mov	a,#((_buffer + 0x001b) >> 8)
      0008D2 A3               [24] 2273 	inc	dptr
      0008D3 F0               [24] 2274 	movx	@dptr,a
      0008D4 E4               [12] 2275 	clr	a
      0008D5 A3               [24] 2276 	inc	dptr
      0008D6 F0               [24] 2277 	movx	@dptr,a
      0008D7 90r00r00         [24] 2278 	mov	dptr,#___memcpy_PARM_3
      0008DA 74 04            [12] 2279 	mov	a,#0x04
      0008DC F0               [24] 2280 	movx	@dptr,a
      0008DD E4               [12] 2281 	clr	a
      0008DE A3               [24] 2282 	inc	dptr
      0008DF F0               [24] 2283 	movx	@dptr,a
      0008E0 90r00r1F         [24] 2284 	mov	dptr,#(_buffer + 0x001f)
      0008E3 F5 F0            [12] 2285 	mov	b,a
      0008E5 12r00r00         [24] 2286 	lcall	___memcpy
                                   2287 ;	webserver.c:283: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      0008E8 90r00r00         [24] 2288 	mov	dptr,#___memcpy_PARM_2
      0008EB 74r37            [12] 2289 	mov	a,#_makeTcpFinPshAck_device_ip_10000_120
      0008ED F0               [24] 2290 	movx	@dptr,a
      0008EE 74s06            [12] 2291 	mov	a,#(_makeTcpFinPshAck_device_ip_10000_120 >> 8)
      0008F0 A3               [24] 2292 	inc	dptr
      0008F1 F0               [24] 2293 	movx	@dptr,a
      0008F2 E4               [12] 2294 	clr	a
      0008F3 A3               [24] 2295 	inc	dptr
      0008F4 F0               [24] 2296 	movx	@dptr,a
      0008F5 90r00r00         [24] 2297 	mov	dptr,#___memcpy_PARM_3
      0008F8 74 04            [12] 2298 	mov	a,#0x04
      0008FA F0               [24] 2299 	movx	@dptr,a
      0008FB E4               [12] 2300 	clr	a
      0008FC A3               [24] 2301 	inc	dptr
      0008FD F0               [24] 2302 	movx	@dptr,a
      0008FE 90r00r1B         [24] 2303 	mov	dptr,#(_buffer + 0x001b)
      000901 F5 F0            [12] 2304 	mov	b,a
      000903 12r00r00         [24] 2305 	lcall	___memcpy
                                   2306 ;	webserver.c:286: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000906 90r00r23         [24] 2307 	mov	dptr,#(_buffer + 0x0023)
      000909 E0               [24] 2308 	movx	a,@dptr
      00090A FE               [12] 2309 	mov	r6,a
      00090B 7F 00            [12] 2310 	mov	r7,#0x00
      00090D 90r00r24         [24] 2311 	mov	dptr,#(_buffer + 0x0024)
      000910 E0               [24] 2312 	movx	a,@dptr
      000911 7C 00            [12] 2313 	mov	r4,#0x00
      000913 42 07            [12] 2314 	orl	ar7,a
      000915 EC               [12] 2315 	mov	a,r4
      000916 42 06            [12] 2316 	orl	ar6,a
                                   2317 ;	webserver.c:288: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000918 90r00r25         [24] 2318 	mov	dptr,#(_buffer + 0x0025)
      00091B E0               [24] 2319 	movx	a,@dptr
      00091C FC               [12] 2320 	mov	r4,a
      00091D 7D 00            [12] 2321 	mov	r5,#0x00
      00091F 90r00r26         [24] 2322 	mov	dptr,#(_buffer + 0x0026)
      000922 E0               [24] 2323 	movx	a,@dptr
      000923 7A 00            [12] 2324 	mov	r2,#0x00
      000925 42 05            [12] 2325 	orl	ar5,a
      000927 EA               [12] 2326 	mov	a,r2
      000928 42 04            [12] 2327 	orl	ar4,a
                                   2328 ;	webserver.c:290: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      00092A 8C 03            [24] 2329 	mov	ar3,r4
      00092C 90r00r23         [24] 2330 	mov	dptr,#(_buffer + 0x0023)
      00092F EB               [12] 2331 	mov	a,r3
      000930 F0               [24] 2332 	movx	@dptr,a
                                   2333 ;	webserver.c:291: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      000931 90r00r24         [24] 2334 	mov	dptr,#(_buffer + 0x0024)
      000934 ED               [12] 2335 	mov	a,r5
      000935 F0               [24] 2336 	movx	@dptr,a
                                   2337 ;	webserver.c:292: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      000936 8E 05            [24] 2338 	mov	ar5,r6
      000938 90r00r25         [24] 2339 	mov	dptr,#(_buffer + 0x0025)
      00093B ED               [12] 2340 	mov	a,r5
      00093C F0               [24] 2341 	movx	@dptr,a
                                   2342 ;	webserver.c:293: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      00093D 90r00r26         [24] 2343 	mov	dptr,#(_buffer + 0x0026)
      000940 EF               [12] 2344 	mov	a,r7
      000941 F0               [24] 2345 	movx	@dptr,a
                                   2346 ;	webserver.c:296: uint32_t serverSeqNum = prevSeq;
      000942 90r05rDC         [24] 2347 	mov	dptr,#_prevSeq
      000945 E0               [24] 2348 	movx	a,@dptr
      000946 FC               [12] 2349 	mov	r4,a
      000947 A3               [24] 2350 	inc	dptr
      000948 E0               [24] 2351 	movx	a,@dptr
      000949 FD               [12] 2352 	mov	r5,a
      00094A A3               [24] 2353 	inc	dptr
      00094B E0               [24] 2354 	movx	a,@dptr
      00094C FE               [12] 2355 	mov	r6,a
      00094D A3               [24] 2356 	inc	dptr
      00094E E0               [24] 2357 	movx	a,@dptr
      00094F FF               [12] 2358 	mov	r7,a
      000950 90r06r3F         [24] 2359 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_122
      000953 EC               [12] 2360 	mov	a,r4
      000954 F0               [24] 2361 	movx	@dptr,a
      000955 ED               [12] 2362 	mov	a,r5
      000956 A3               [24] 2363 	inc	dptr
      000957 F0               [24] 2364 	movx	@dptr,a
      000958 EE               [12] 2365 	mov	a,r6
      000959 A3               [24] 2366 	inc	dptr
      00095A F0               [24] 2367 	movx	@dptr,a
      00095B EF               [12] 2368 	mov	a,r7
      00095C A3               [24] 2369 	inc	dptr
      00095D F0               [24] 2370 	movx	@dptr,a
                                   2371 ;	webserver.c:297: uint32_t ackNum = prevAck;
      00095E 90r05rE0         [24] 2372 	mov	dptr,#_prevAck
      000961 E0               [24] 2373 	movx	a,@dptr
      000962 F8               [12] 2374 	mov	r0,a
      000963 A3               [24] 2375 	inc	dptr
      000964 E0               [24] 2376 	movx	a,@dptr
      000965 F9               [12] 2377 	mov	r1,a
      000966 A3               [24] 2378 	inc	dptr
      000967 E0               [24] 2379 	movx	a,@dptr
      000968 FA               [12] 2380 	mov	r2,a
      000969 A3               [24] 2381 	inc	dptr
      00096A E0               [24] 2382 	movx	a,@dptr
      00096B FB               [12] 2383 	mov	r3,a
      00096C 90r06r43         [24] 2384 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_122
      00096F E8               [12] 2385 	mov	a,r0
      000970 F0               [24] 2386 	movx	@dptr,a
      000971 E9               [12] 2387 	mov	a,r1
      000972 A3               [24] 2388 	inc	dptr
      000973 F0               [24] 2389 	movx	@dptr,a
      000974 EA               [12] 2390 	mov	a,r2
      000975 A3               [24] 2391 	inc	dptr
      000976 F0               [24] 2392 	movx	@dptr,a
      000977 EB               [12] 2393 	mov	a,r3
      000978 A3               [24] 2394 	inc	dptr
      000979 F0               [24] 2395 	movx	@dptr,a
                                   2396 ;	webserver.c:299: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      00097A 8F 04            [24] 2397 	mov	ar4,r7
      00097C 90r00r27         [24] 2398 	mov	dptr,#(_buffer + 0x0027)
      00097F EC               [12] 2399 	mov	a,r4
      000980 F0               [24] 2400 	movx	@dptr,a
                                   2401 ;	webserver.c:300: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      000981 90r06r3F         [24] 2402 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_122
      000984 E0               [24] 2403 	movx	a,@dptr
      000985 FC               [12] 2404 	mov	r4,a
      000986 A3               [24] 2405 	inc	dptr
      000987 E0               [24] 2406 	movx	a,@dptr
      000988 FD               [12] 2407 	mov	r5,a
      000989 A3               [24] 2408 	inc	dptr
      00098A E0               [24] 2409 	movx	a,@dptr
      00098B FE               [12] 2410 	mov	r6,a
      00098C A3               [24] 2411 	inc	dptr
      00098D E0               [24] 2412 	movx	a,@dptr
      00098E 8E 03            [24] 2413 	mov	ar3,r6
      000990 90r00r28         [24] 2414 	mov	dptr,#(_buffer + 0x0028)
      000993 EB               [12] 2415 	mov	a,r3
      000994 F0               [24] 2416 	movx	@dptr,a
                                   2417 ;	webserver.c:301: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000995 8D 03            [24] 2418 	mov	ar3,r5
      000997 90r00r29         [24] 2419 	mov	dptr,#(_buffer + 0x0029)
      00099A EB               [12] 2420 	mov	a,r3
      00099B F0               [24] 2421 	movx	@dptr,a
                                   2422 ;	webserver.c:302: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      00099C 90r00r2A         [24] 2423 	mov	dptr,#(_buffer + 0x002a)
      00099F EC               [12] 2424 	mov	a,r4
      0009A0 F0               [24] 2425 	movx	@dptr,a
                                   2426 ;	webserver.c:303: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      0009A1 90r06r43         [24] 2427 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_122
      0009A4 E0               [24] 2428 	movx	a,@dptr
      0009A5 FC               [12] 2429 	mov	r4,a
      0009A6 A3               [24] 2430 	inc	dptr
      0009A7 E0               [24] 2431 	movx	a,@dptr
      0009A8 FD               [12] 2432 	mov	r5,a
      0009A9 A3               [24] 2433 	inc	dptr
      0009AA E0               [24] 2434 	movx	a,@dptr
      0009AB FE               [12] 2435 	mov	r6,a
      0009AC A3               [24] 2436 	inc	dptr
      0009AD E0               [24] 2437 	movx	a,@dptr
      0009AE 90r00r2B         [24] 2438 	mov	dptr,#(_buffer + 0x002b)
      0009B1 F0               [24] 2439 	movx	@dptr,a
                                   2440 ;	webserver.c:304: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      0009B2 8E 03            [24] 2441 	mov	ar3,r6
      0009B4 90r00r2C         [24] 2442 	mov	dptr,#(_buffer + 0x002c)
      0009B7 EB               [12] 2443 	mov	a,r3
      0009B8 F0               [24] 2444 	movx	@dptr,a
                                   2445 ;	webserver.c:305: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      0009B9 8D 03            [24] 2446 	mov	ar3,r5
      0009BB 90r00r2D         [24] 2447 	mov	dptr,#(_buffer + 0x002d)
      0009BE EB               [12] 2448 	mov	a,r3
      0009BF F0               [24] 2449 	movx	@dptr,a
                                   2450 ;	webserver.c:306: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      0009C0 90r00r2E         [24] 2451 	mov	dptr,#(_buffer + 0x002e)
      0009C3 EC               [12] 2452 	mov	a,r4
      0009C4 F0               [24] 2453 	movx	@dptr,a
                                   2454 ;	webserver.c:309: const char *html_payload =
                                   2455 ;	webserver.c:332: uint16_t dataLength = strlen(html_payload);
      0009C5 90r00r10         [24] 2456 	mov	dptr,#___str_1
      0009C8 75 F0 80         [24] 2457 	mov	b, #0x80
      0009CB 12r00r00         [24] 2458 	lcall	_strlen
      0009CE AE 82            [24] 2459 	mov	r6, dpl
      0009D0 AF 83            [24] 2460 	mov	r7, dph
                                   2461 ;	webserver.c:335: uint16_t totalLength = IP_HEADER_LEN + TCP_HEADER_LEN + dataLength;
      0009D2 74 28            [12] 2462 	mov	a,#0x28
      0009D4 2E               [12] 2463 	add	a, r6
      0009D5 FC               [12] 2464 	mov	r4,a
      0009D6 E4               [12] 2465 	clr	a
      0009D7 3F               [12] 2466 	addc	a, r7
                                   2467 ;	webserver.c:336: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      0009D8 90r00r11         [24] 2468 	mov	dptr,#(_buffer + 0x0011)
      0009DB F0               [24] 2469 	movx	@dptr,a
                                   2470 ;	webserver.c:337: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      0009DC 90r00r12         [24] 2471 	mov	dptr,#(_buffer + 0x0012)
      0009DF EC               [12] 2472 	mov	a,r4
      0009E0 F0               [24] 2473 	movx	@dptr,a
                                   2474 ;	webserver.c:340: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_FIN | TCP_FLAG_PUSH | TCP_FLAG_ACK;
      0009E1 90r00r30         [24] 2475 	mov	dptr,#(_buffer + 0x0030)
      0009E4 74 19            [12] 2476 	mov	a,#0x19
      0009E6 F0               [24] 2477 	movx	@dptr,a
                                   2478 ;	webserver.c:341: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF;
      0009E7 90r00r31         [24] 2479 	mov	dptr,#(_buffer + 0x0031)
      0009EA 74 FF            [12] 2480 	mov	a,#0xff
      0009EC F0               [24] 2481 	movx	@dptr,a
                                   2482 ;	webserver.c:342: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      0009ED 90r00r32         [24] 2483 	mov	dptr,#(_buffer + 0x0032)
      0009F0 F0               [24] 2484 	movx	@dptr,a
                                   2485 ;	webserver.c:343: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      0009F1 90r00r2F         [24] 2486 	mov	dptr,#(_buffer + 0x002f)
      0009F4 74 50            [12] 2487 	mov	a,#0x50
      0009F6 F0               [24] 2488 	movx	@dptr,a
                                   2489 ;	webserver.c:346: memcpy(&buffer[1 + TCP_DATA_START_P], html_payload, dataLength);
      0009F7 90r00r00         [24] 2490 	mov	dptr,#___memcpy_PARM_2
      0009FA 74r10            [12] 2491 	mov	a,#___str_1
      0009FC F0               [24] 2492 	movx	@dptr,a
      0009FD 74s00            [12] 2493 	mov	a,#(___str_1 >> 8)
      0009FF A3               [24] 2494 	inc	dptr
      000A00 F0               [24] 2495 	movx	@dptr,a
      000A01 74 80            [12] 2496 	mov	a,#0x80
      000A03 A3               [24] 2497 	inc	dptr
      000A04 F0               [24] 2498 	movx	@dptr,a
      000A05 90r00r00         [24] 2499 	mov	dptr,#___memcpy_PARM_3
      000A08 EE               [12] 2500 	mov	a,r6
      000A09 F0               [24] 2501 	movx	@dptr,a
      000A0A EF               [12] 2502 	mov	a,r7
      000A0B A3               [24] 2503 	inc	dptr
      000A0C F0               [24] 2504 	movx	@dptr,a
      000A0D 90r00r37         [24] 2505 	mov	dptr,#(_buffer + 0x0037)
      000A10 75 F0 00         [24] 2506 	mov	b, #0x00
      000A13 C0 07            [24] 2507 	push	ar7
      000A15 C0 06            [24] 2508 	push	ar6
      000A17 12r00r00         [24] 2509 	lcall	___memcpy
                                   2510 ;	webserver.c:349: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000A1A 90r00r01         [24] 2511 	mov	dptr,#(_buffer + 0x0001)
      000A1D 75 F0 00         [24] 2512 	mov	b, #0x00
      000A20 12r03r97         [24] 2513 	lcall	_calculateIPChecksum
                                   2514 ;	webserver.c:350: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000A23 90r00r01         [24] 2515 	mov	dptr,#(_buffer + 0x0001)
      000A26 75 F0 00         [24] 2516 	mov	b, #0x00
      000A29 12r05r01         [24] 2517 	lcall	_calculateTcpChecksum
      000A2C D0 06            [24] 2518 	pop	ar6
      000A2E D0 07            [24] 2519 	pop	ar7
                                   2520 ;	webserver.c:353: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P + dataLength);
      000A30 74 37            [12] 2521 	mov	a,#0x37
      000A32 2E               [12] 2522 	add	a, r6
      000A33 FE               [12] 2523 	mov	r6,a
      000A34 E4               [12] 2524 	clr	a
      000A35 3F               [12] 2525 	addc	a, r7
      000A36 FF               [12] 2526 	mov	r7,a
      000A37 90r00r00         [24] 2527 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000A3A EE               [12] 2528 	mov	a,r6
      000A3B F0               [24] 2529 	movx	@dptr,a
      000A3C EF               [12] 2530 	mov	a,r7
      000A3D A3               [24] 2531 	inc	dptr
      000A3E F0               [24] 2532 	movx	@dptr,a
      000A3F 90r00r00         [24] 2533 	mov	dptr,#_buffer
      000A42 75 F0 00         [24] 2534 	mov	b, #0x00
      000A45 12r00r00         [24] 2535 	lcall	_transmit_tcp_packet
                                   2536 ;	webserver.c:356: connectionState = FIN_WAIT;
      000A48 90r00r00         [24] 2537 	mov	dptr,#_connectionState
      000A4B 74 03            [12] 2538 	mov	a,#0x03
      000A4D F0               [24] 2539 	movx	@dptr,a
                                   2540 ;	webserver.c:357: }
      000A4E 22               [24] 2541 	ret
                                   2542 ;------------------------------------------------------------
                                   2543 ;Allocation info for local variables in function 'makeTcpAck3'
                                   2544 ;------------------------------------------------------------
                                   2545 ;sloc0                     Allocated with name '_makeTcpAck3_sloc0_1_0'
                                   2546 ;device_mac                Allocated with name '_makeTcpAck3_device_mac_10000_125'
                                   2547 ;target_mac                Allocated with name '_makeTcpAck3_target_mac_10000_125'
                                   2548 ;device_ip                 Allocated with name '_makeTcpAck3_device_ip_10000_125'
                                   2549 ;target_ip                 Allocated with name '_makeTcpAck3_target_ip_10000_125'
                                   2550 ;srcPort                   Allocated with name '_makeTcpAck3_srcPort_10001_126'
                                   2551 ;dstPort                   Allocated with name '_makeTcpAck3_dstPort_10001_126'
                                   2552 ;clientSeqNum              Allocated with name '_makeTcpAck3_clientSeqNum_10002_127'
                                   2553 ;clientAckNum              Allocated with name '_makeTcpAck3_clientAckNum_10002_127'
                                   2554 ;serverSeqNum              Allocated with name '_makeTcpAck3_serverSeqNum_10002_127'
                                   2555 ;ackNum                    Allocated with name '_makeTcpAck3_ackNum_10002_127'
                                   2556 ;totalLength               Allocated with name '_makeTcpAck3_totalLength_10003_128'
                                   2557 ;------------------------------------------------------------
                                   2558 ;	webserver.c:368: void makeTcpAck3(void) 
                                   2559 ;	-----------------------------------------
                                   2560 ;	 function makeTcpAck3
                                   2561 ;	-----------------------------------------
      000A4F                       2562 _makeTcpAck3:
                                   2563 ;	webserver.c:370: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      000A4F 90r06r47         [24] 2564 	mov	dptr,#_makeTcpAck3_device_mac_10000_125
      000A52 74 02            [12] 2565 	mov	a,#0x02
      000A54 F0               [24] 2566 	movx	@dptr,a
      000A55 90r06r48         [24] 2567 	mov	dptr,#(_makeTcpAck3_device_mac_10000_125 + 0x0001)
      000A58 23               [12] 2568 	rl	a
      000A59 F0               [24] 2569 	movx	@dptr,a
      000A5A 90r06r49         [24] 2570 	mov	dptr,#(_makeTcpAck3_device_mac_10000_125 + 0x0002)
      000A5D 74 A3            [12] 2571 	mov	a,#0xa3
      000A5F F0               [24] 2572 	movx	@dptr,a
      000A60 90r06r4A         [24] 2573 	mov	dptr,#(_makeTcpAck3_device_mac_10000_125 + 0x0003)
      000A63 74 3C            [12] 2574 	mov	a,#0x3c
      000A65 F0               [24] 2575 	movx	@dptr,a
      000A66 90r06r4B         [24] 2576 	mov	dptr,#(_makeTcpAck3_device_mac_10000_125 + 0x0004)
      000A69 74 4D            [12] 2577 	mov	a,#0x4d
      000A6B F0               [24] 2578 	movx	@dptr,a
      000A6C 90r06r4C         [24] 2579 	mov	dptr,#(_makeTcpAck3_device_mac_10000_125 + 0x0005)
      000A6F 74 50            [12] 2580 	mov	a,#0x50
      000A71 F0               [24] 2581 	movx	@dptr,a
                                   2582 ;	webserver.c:371: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      000A72 90r06r4D         [24] 2583 	mov	dptr,#_makeTcpAck3_target_mac_10000_125
      000A75 74 FF            [12] 2584 	mov	a,#0xff
      000A77 F0               [24] 2585 	movx	@dptr,a
      000A78 90r06r4E         [24] 2586 	mov	dptr,#(_makeTcpAck3_target_mac_10000_125 + 0x0001)
      000A7B F0               [24] 2587 	movx	@dptr,a
      000A7C 90r06r4F         [24] 2588 	mov	dptr,#(_makeTcpAck3_target_mac_10000_125 + 0x0002)
      000A7F F0               [24] 2589 	movx	@dptr,a
      000A80 90r06r50         [24] 2590 	mov	dptr,#(_makeTcpAck3_target_mac_10000_125 + 0x0003)
      000A83 F0               [24] 2591 	movx	@dptr,a
      000A84 90r06r51         [24] 2592 	mov	dptr,#(_makeTcpAck3_target_mac_10000_125 + 0x0004)
      000A87 F0               [24] 2593 	movx	@dptr,a
      000A88 90r06r52         [24] 2594 	mov	dptr,#(_makeTcpAck3_target_mac_10000_125 + 0x0005)
      000A8B F0               [24] 2595 	movx	@dptr,a
                                   2596 ;	webserver.c:372: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000A8C 90r06r53         [24] 2597 	mov	dptr,#_makeTcpAck3_device_ip_10000_125
      000A8F 74 C0            [12] 2598 	mov	a,#0xc0
      000A91 F0               [24] 2599 	movx	@dptr,a
      000A92 90r06r54         [24] 2600 	mov	dptr,#(_makeTcpAck3_device_ip_10000_125 + 0x0001)
      000A95 74 A8            [12] 2601 	mov	a,#0xa8
      000A97 F0               [24] 2602 	movx	@dptr,a
      000A98 90r06r55         [24] 2603 	mov	dptr,#(_makeTcpAck3_device_ip_10000_125 + 0x0002)
      000A9B 74 01            [12] 2604 	mov	a,#0x01
      000A9D F0               [24] 2605 	movx	@dptr,a
      000A9E 90r06r56         [24] 2606 	mov	dptr,#(_makeTcpAck3_device_ip_10000_125 + 0x0003)
      000AA1 74 64            [12] 2607 	mov	a,#0x64
      000AA3 F0               [24] 2608 	movx	@dptr,a
                                   2609 ;	webserver.c:373: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      000AA4 90r06r57         [24] 2610 	mov	dptr,#_makeTcpAck3_target_ip_10000_125
      000AA7 74 C0            [12] 2611 	mov	a,#0xc0
      000AA9 F0               [24] 2612 	movx	@dptr,a
      000AAA 90r06r58         [24] 2613 	mov	dptr,#(_makeTcpAck3_target_ip_10000_125 + 0x0001)
      000AAD 74 A8            [12] 2614 	mov	a,#0xa8
      000AAF F0               [24] 2615 	movx	@dptr,a
      000AB0 90r06r59         [24] 2616 	mov	dptr,#(_makeTcpAck3_target_ip_10000_125 + 0x0002)
      000AB3 74 01            [12] 2617 	mov	a,#0x01
      000AB5 F0               [24] 2618 	movx	@dptr,a
      000AB6 90r06r5A         [24] 2619 	mov	dptr,#(_makeTcpAck3_target_ip_10000_125 + 0x0003)
      000AB9 F0               [24] 2620 	movx	@dptr,a
                                   2621 ;	webserver.c:374: printf("makeTcpAck\n\r");
      000ABA 74r9E            [12] 2622 	mov	a,#___str_3
      000ABC C0 E0            [24] 2623 	push	acc
      000ABE 74s03            [12] 2624 	mov	a,#(___str_3 >> 8)
      000AC0 C0 E0            [24] 2625 	push	acc
      000AC2 74 80            [12] 2626 	mov	a,#0x80
      000AC4 C0 E0            [24] 2627 	push	acc
      000AC6 12r00r00         [24] 2628 	lcall	_printf
      000AC9 15 81            [12] 2629 	dec	sp
      000ACB 15 81            [12] 2630 	dec	sp
      000ACD 15 81            [12] 2631 	dec	sp
                                   2632 ;	webserver.c:377: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000ACF 90r00r00         [24] 2633 	mov	dptr,#_memmove_PARM_2
      000AD2 74r00            [12] 2634 	mov	a,#_buffer
      000AD4 F0               [24] 2635 	movx	@dptr,a
      000AD5 74s00            [12] 2636 	mov	a,#(_buffer >> 8)
      000AD7 A3               [24] 2637 	inc	dptr
      000AD8 F0               [24] 2638 	movx	@dptr,a
      000AD9 E4               [12] 2639 	clr	a
      000ADA A3               [24] 2640 	inc	dptr
      000ADB F0               [24] 2641 	movx	@dptr,a
      000ADC 90r00r00         [24] 2642 	mov	dptr,#_memmove_PARM_3
      000ADF 74 36            [12] 2643 	mov	a,#0x36
      000AE1 F0               [24] 2644 	movx	@dptr,a
      000AE2 E4               [12] 2645 	clr	a
      000AE3 A3               [24] 2646 	inc	dptr
      000AE4 F0               [24] 2647 	movx	@dptr,a
      000AE5 90r00r01         [24] 2648 	mov	dptr,#(_buffer + 0x0001)
      000AE8 F5 F0            [12] 2649 	mov	b,a
      000AEA 12r00r00         [24] 2650 	lcall	_memmove
                                   2651 ;	webserver.c:378: buffer[0] = 0x0E;
      000AED 90r00r00         [24] 2652 	mov	dptr,#_buffer
      000AF0 74 0E            [12] 2653 	mov	a,#0x0e
      000AF2 F0               [24] 2654 	movx	@dptr,a
                                   2655 ;	webserver.c:381: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      000AF3 90r00r00         [24] 2656 	mov	dptr,#___memcpy_PARM_2
      000AF6 74r07            [12] 2657 	mov	a,#(_buffer + 0x0007)
      000AF8 F0               [24] 2658 	movx	@dptr,a
      000AF9 74s00            [12] 2659 	mov	a,#((_buffer + 0x0007) >> 8)
      000AFB A3               [24] 2660 	inc	dptr
      000AFC F0               [24] 2661 	movx	@dptr,a
      000AFD E4               [12] 2662 	clr	a
      000AFE A3               [24] 2663 	inc	dptr
      000AFF F0               [24] 2664 	movx	@dptr,a
      000B00 90r00r00         [24] 2665 	mov	dptr,#___memcpy_PARM_3
      000B03 74 06            [12] 2666 	mov	a,#0x06
      000B05 F0               [24] 2667 	movx	@dptr,a
      000B06 E4               [12] 2668 	clr	a
      000B07 A3               [24] 2669 	inc	dptr
      000B08 F0               [24] 2670 	movx	@dptr,a
      000B09 90r00r01         [24] 2671 	mov	dptr,#(_buffer + 0x0001)
      000B0C F5 F0            [12] 2672 	mov	b,a
      000B0E 12r00r00         [24] 2673 	lcall	___memcpy
                                   2674 ;	webserver.c:382: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      000B11 90r00r00         [24] 2675 	mov	dptr,#___memcpy_PARM_2
      000B14 74r47            [12] 2676 	mov	a,#_makeTcpAck3_device_mac_10000_125
      000B16 F0               [24] 2677 	movx	@dptr,a
      000B17 74s06            [12] 2678 	mov	a,#(_makeTcpAck3_device_mac_10000_125 >> 8)
      000B19 A3               [24] 2679 	inc	dptr
      000B1A F0               [24] 2680 	movx	@dptr,a
      000B1B E4               [12] 2681 	clr	a
      000B1C A3               [24] 2682 	inc	dptr
      000B1D F0               [24] 2683 	movx	@dptr,a
      000B1E 90r00r00         [24] 2684 	mov	dptr,#___memcpy_PARM_3
      000B21 74 06            [12] 2685 	mov	a,#0x06
      000B23 F0               [24] 2686 	movx	@dptr,a
      000B24 E4               [12] 2687 	clr	a
      000B25 A3               [24] 2688 	inc	dptr
      000B26 F0               [24] 2689 	movx	@dptr,a
      000B27 90r00r07         [24] 2690 	mov	dptr,#(_buffer + 0x0007)
      000B2A F5 F0            [12] 2691 	mov	b,a
      000B2C 12r00r00         [24] 2692 	lcall	___memcpy
                                   2693 ;	webserver.c:385: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000B2F 90r00r00         [24] 2694 	mov	dptr,#___memcpy_PARM_2
      000B32 74r1B            [12] 2695 	mov	a,#(_buffer + 0x001b)
      000B34 F0               [24] 2696 	movx	@dptr,a
      000B35 74s00            [12] 2697 	mov	a,#((_buffer + 0x001b) >> 8)
      000B37 A3               [24] 2698 	inc	dptr
      000B38 F0               [24] 2699 	movx	@dptr,a
      000B39 E4               [12] 2700 	clr	a
      000B3A A3               [24] 2701 	inc	dptr
      000B3B F0               [24] 2702 	movx	@dptr,a
      000B3C 90r00r00         [24] 2703 	mov	dptr,#___memcpy_PARM_3
      000B3F 74 04            [12] 2704 	mov	a,#0x04
      000B41 F0               [24] 2705 	movx	@dptr,a
      000B42 E4               [12] 2706 	clr	a
      000B43 A3               [24] 2707 	inc	dptr
      000B44 F0               [24] 2708 	movx	@dptr,a
      000B45 90r00r1F         [24] 2709 	mov	dptr,#(_buffer + 0x001f)
      000B48 F5 F0            [12] 2710 	mov	b,a
      000B4A 12r00r00         [24] 2711 	lcall	___memcpy
                                   2712 ;	webserver.c:386: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000B4D 90r00r00         [24] 2713 	mov	dptr,#___memcpy_PARM_2
      000B50 74r53            [12] 2714 	mov	a,#_makeTcpAck3_device_ip_10000_125
      000B52 F0               [24] 2715 	movx	@dptr,a
      000B53 74s06            [12] 2716 	mov	a,#(_makeTcpAck3_device_ip_10000_125 >> 8)
      000B55 A3               [24] 2717 	inc	dptr
      000B56 F0               [24] 2718 	movx	@dptr,a
      000B57 E4               [12] 2719 	clr	a
      000B58 A3               [24] 2720 	inc	dptr
      000B59 F0               [24] 2721 	movx	@dptr,a
      000B5A 90r00r00         [24] 2722 	mov	dptr,#___memcpy_PARM_3
      000B5D 74 04            [12] 2723 	mov	a,#0x04
      000B5F F0               [24] 2724 	movx	@dptr,a
      000B60 E4               [12] 2725 	clr	a
      000B61 A3               [24] 2726 	inc	dptr
      000B62 F0               [24] 2727 	movx	@dptr,a
      000B63 90r00r1B         [24] 2728 	mov	dptr,#(_buffer + 0x001b)
      000B66 F5 F0            [12] 2729 	mov	b,a
      000B68 12r00r00         [24] 2730 	lcall	___memcpy
                                   2731 ;	webserver.c:389: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000B6B 90r00r23         [24] 2732 	mov	dptr,#(_buffer + 0x0023)
      000B6E E0               [24] 2733 	movx	a,@dptr
      000B6F FE               [12] 2734 	mov	r6,a
      000B70 7F 00            [12] 2735 	mov	r7,#0x00
      000B72 90r00r24         [24] 2736 	mov	dptr,#(_buffer + 0x0024)
      000B75 E0               [24] 2737 	movx	a,@dptr
      000B76 7C 00            [12] 2738 	mov	r4,#0x00
      000B78 42 07            [12] 2739 	orl	ar7,a
      000B7A EC               [12] 2740 	mov	a,r4
      000B7B 42 06            [12] 2741 	orl	ar6,a
                                   2742 ;	webserver.c:391: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000B7D 90r00r25         [24] 2743 	mov	dptr,#(_buffer + 0x0025)
      000B80 E0               [24] 2744 	movx	a,@dptr
      000B81 FC               [12] 2745 	mov	r4,a
      000B82 7D 00            [12] 2746 	mov	r5,#0x00
      000B84 90r00r26         [24] 2747 	mov	dptr,#(_buffer + 0x0026)
      000B87 E0               [24] 2748 	movx	a,@dptr
      000B88 7A 00            [12] 2749 	mov	r2,#0x00
      000B8A 42 05            [12] 2750 	orl	ar5,a
      000B8C EA               [12] 2751 	mov	a,r2
      000B8D 42 04            [12] 2752 	orl	ar4,a
                                   2753 ;	webserver.c:393: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000B8F 8C 03            [24] 2754 	mov	ar3,r4
      000B91 90r00r23         [24] 2755 	mov	dptr,#(_buffer + 0x0023)
      000B94 EB               [12] 2756 	mov	a,r3
      000B95 F0               [24] 2757 	movx	@dptr,a
                                   2758 ;	webserver.c:394: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      000B96 90r00r24         [24] 2759 	mov	dptr,#(_buffer + 0x0024)
      000B99 ED               [12] 2760 	mov	a,r5
      000B9A F0               [24] 2761 	movx	@dptr,a
                                   2762 ;	webserver.c:395: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      000B9B 8E 05            [24] 2763 	mov	ar5,r6
      000B9D 90r00r25         [24] 2764 	mov	dptr,#(_buffer + 0x0025)
      000BA0 ED               [12] 2765 	mov	a,r5
      000BA1 F0               [24] 2766 	movx	@dptr,a
                                   2767 ;	webserver.c:396: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      000BA2 90r00r26         [24] 2768 	mov	dptr,#(_buffer + 0x0026)
      000BA5 EF               [12] 2769 	mov	a,r7
      000BA6 F0               [24] 2770 	movx	@dptr,a
                                   2771 ;	webserver.c:399: uint32_t clientSeqNum = ((uint32_t)buffer[1 + TCP_SEQ_H_P] << 24)
      000BA7 90r00r27         [24] 2772 	mov	dptr,#(_buffer + 0x0027)
      000BAA E0               [24] 2773 	movx	a,@dptr
      000BAB FF               [12] 2774 	mov	r7,a
      000BAC 7E 00            [12] 2775 	mov	r6,#0x00
      000BAE 7D 00            [12] 2776 	mov	r5,#0x00
      000BB0 8F 04            [24] 2777 	mov	ar4,r7
      000BB2 7F 00            [12] 2778 	mov	r7,#0x00
      000BB4 90r00r28         [24] 2779 	mov	dptr,#(_buffer + 0x0028)
      000BB7 E0               [24] 2780 	movx	a,@dptr
      000BB8 F8               [12] 2781 	mov	r0,a
      000BB9 79 00            [12] 2782 	mov	r1,#0x00
      000BBB 89 03            [24] 2783 	mov	ar3,r1
      000BBD 88 02            [24] 2784 	mov	ar2,r0
      000BBF E4               [12] 2785 	clr	a
      000BC0 42 07            [12] 2786 	orl	ar7,a
      000BC2 E9               [12] 2787 	mov	a,r1
      000BC3 42 06            [12] 2788 	orl	ar6,a
      000BC5 EA               [12] 2789 	mov	a,r2
      000BC6 42 05            [12] 2790 	orl	ar5,a
      000BC8 EB               [12] 2791 	mov	a,r3
      000BC9 42 04            [12] 2792 	orl	ar4,a
      000BCB 90r00r29         [24] 2793 	mov	dptr,#(_buffer + 0x0029)
      000BCE E0               [24] 2794 	movx	a,@dptr
      000BCF F8               [12] 2795 	mov	r0,a
      000BD0 79 00            [12] 2796 	mov	r1,#0x00
      000BD2 7A 00            [12] 2797 	mov	r2,#0x00
      000BD4 8A 03            [24] 2798 	mov	ar3,r2
      000BD6 89 02            [24] 2799 	mov	ar2,r1
      000BD8 88 01            [24] 2800 	mov	ar1,r0
      000BDA E4               [12] 2801 	clr	a
      000BDB 42 07            [12] 2802 	orl	ar7,a
      000BDD E9               [12] 2803 	mov	a,r1
      000BDE 42 06            [12] 2804 	orl	ar6,a
      000BE0 EA               [12] 2805 	mov	a,r2
      000BE1 42 05            [12] 2806 	orl	ar5,a
      000BE3 EB               [12] 2807 	mov	a,r3
      000BE4 42 04            [12] 2808 	orl	ar4,a
      000BE6 90r00r2A         [24] 2809 	mov	dptr,#(_buffer + 0x002a)
      000BE9 E0               [24] 2810 	movx	a,@dptr
      000BEA F8               [12] 2811 	mov	r0,a
      000BEB E4               [12] 2812 	clr	a
      000BEC F9               [12] 2813 	mov	r1,a
      000BED FA               [12] 2814 	mov	r2,a
      000BEE FB               [12] 2815 	mov	r3,a
      000BEF E8               [12] 2816 	mov	a,r0
      000BF0 42 07            [12] 2817 	orl	ar7,a
      000BF2 E9               [12] 2818 	mov	a,r1
      000BF3 42 06            [12] 2819 	orl	ar6,a
      000BF5 EA               [12] 2820 	mov	a,r2
      000BF6 42 05            [12] 2821 	orl	ar5,a
      000BF8 EB               [12] 2822 	mov	a,r3
      000BF9 42 04            [12] 2823 	orl	ar4,a
                                   2824 ;	webserver.c:404: uint32_t clientAckNum = ((uint32_t)buffer[1 + TCP_ACK_H_P] << 24)
      000BFB 90r00r2B         [24] 2825 	mov	dptr,#(_buffer + 0x002b)
      000BFE E0               [24] 2826 	movx	a,@dptr
      000BFF F8               [12] 2827 	mov	r0,a
      000C00 79 00            [12] 2828 	mov	r1,#0x00
      000C02 7B 00            [12] 2829 	mov	r3,#0x00
      000C04 88*03            [24] 2830 	mov	(_makeTcpAck3_sloc0_1_0 + 3),r0
      000C06 8B*00            [24] 2831 	mov	_makeTcpAck3_sloc0_1_0,r3
      000C08 8B*01            [24] 2832 	mov	(_makeTcpAck3_sloc0_1_0 + 1),r3
      000C0A 8B*02            [24] 2833 	mov	(_makeTcpAck3_sloc0_1_0 + 2),r3
      000C0C 90r00r2C         [24] 2834 	mov	dptr,#(_buffer + 0x002c)
      000C0F E0               [24] 2835 	movx	a,@dptr
      000C10 F8               [12] 2836 	mov	r0,a
      000C11 89 03            [24] 2837 	mov	ar3,r1
      000C13 88 02            [24] 2838 	mov	ar2,r0
      000C15 E4               [12] 2839 	clr	a
      000C16 42*00            [12] 2840 	orl	_makeTcpAck3_sloc0_1_0,a
      000C18 E9               [12] 2841 	mov	a,r1
      000C19 42*01            [12] 2842 	orl	(_makeTcpAck3_sloc0_1_0 + 1),a
      000C1B EA               [12] 2843 	mov	a,r2
      000C1C 42*02            [12] 2844 	orl	(_makeTcpAck3_sloc0_1_0 + 2),a
      000C1E EB               [12] 2845 	mov	a,r3
      000C1F 42*03            [12] 2846 	orl	(_makeTcpAck3_sloc0_1_0 + 3),a
      000C21 90r00r2D         [24] 2847 	mov	dptr,#(_buffer + 0x002d)
      000C24 E0               [24] 2848 	movx	a,@dptr
      000C25 F8               [12] 2849 	mov	r0,a
      000C26 79 00            [12] 2850 	mov	r1,#0x00
      000C28 7A 00            [12] 2851 	mov	r2,#0x00
      000C2A 8A 03            [24] 2852 	mov	ar3,r2
      000C2C 89 02            [24] 2853 	mov	ar2,r1
      000C2E 88 01            [24] 2854 	mov	ar1,r0
      000C30 E4               [12] 2855 	clr	a
      000C31 42*00            [12] 2856 	orl	_makeTcpAck3_sloc0_1_0,a
      000C33 E9               [12] 2857 	mov	a,r1
      000C34 42*01            [12] 2858 	orl	(_makeTcpAck3_sloc0_1_0 + 1),a
      000C36 EA               [12] 2859 	mov	a,r2
      000C37 42*02            [12] 2860 	orl	(_makeTcpAck3_sloc0_1_0 + 2),a
      000C39 EB               [12] 2861 	mov	a,r3
      000C3A 42*03            [12] 2862 	orl	(_makeTcpAck3_sloc0_1_0 + 3),a
      000C3C 90r00r2E         [24] 2863 	mov	dptr,#(_buffer + 0x002e)
      000C3F E0               [24] 2864 	movx	a,@dptr
      000C40 F8               [12] 2865 	mov	r0,a
      000C41 E4               [12] 2866 	clr	a
      000C42 F9               [12] 2867 	mov	r1,a
      000C43 FA               [12] 2868 	mov	r2,a
      000C44 FB               [12] 2869 	mov	r3,a
      000C45 E5*01            [12] 2870 	mov	a,(_makeTcpAck3_sloc0_1_0 + 1)
      000C47 42 01            [12] 2871 	orl	ar1,a
      000C49 E5*02            [12] 2872 	mov	a,(_makeTcpAck3_sloc0_1_0 + 2)
      000C4B 42 02            [12] 2873 	orl	ar2,a
      000C4D E5*03            [12] 2874 	mov	a,(_makeTcpAck3_sloc0_1_0 + 3)
      000C4F 42 03            [12] 2875 	orl	ar3,a
                                   2876 ;	webserver.c:410: uint32_t ackNum = clientSeqNum + 1;
      000C51 74 01            [12] 2877 	mov	a,#0x01
      000C53 2F               [12] 2878 	add	a, r7
      000C54 F5*00            [12] 2879 	mov	_makeTcpAck3_sloc0_1_0,a
      000C56 E4               [12] 2880 	clr	a
      000C57 3E               [12] 2881 	addc	a, r6
      000C58 F5*01            [12] 2882 	mov	(_makeTcpAck3_sloc0_1_0 + 1),a
      000C5A E4               [12] 2883 	clr	a
      000C5B 3D               [12] 2884 	addc	a, r5
      000C5C F5*02            [12] 2885 	mov	(_makeTcpAck3_sloc0_1_0 + 2),a
      000C5E E4               [12] 2886 	clr	a
      000C5F 3C               [12] 2887 	addc	a, r4
      000C60 F5*03            [12] 2888 	mov	(_makeTcpAck3_sloc0_1_0 + 3),a
                                   2889 ;	webserver.c:411: prevSeq = serverSeqNum;
      000C62 90r05rDC         [24] 2890 	mov	dptr,#_prevSeq
      000C65 E8               [12] 2891 	mov	a,r0
      000C66 F0               [24] 2892 	movx	@dptr,a
      000C67 E9               [12] 2893 	mov	a,r1
      000C68 A3               [24] 2894 	inc	dptr
      000C69 F0               [24] 2895 	movx	@dptr,a
      000C6A EA               [12] 2896 	mov	a,r2
      000C6B A3               [24] 2897 	inc	dptr
      000C6C F0               [24] 2898 	movx	@dptr,a
      000C6D EB               [12] 2899 	mov	a,r3
      000C6E A3               [24] 2900 	inc	dptr
      000C6F F0               [24] 2901 	movx	@dptr,a
                                   2902 ;	webserver.c:412: prevAck = ackNum;
      000C70 90r05rE0         [24] 2903 	mov	dptr,#_prevAck
      000C73 E5*00            [12] 2904 	mov	a,_makeTcpAck3_sloc0_1_0
      000C75 F0               [24] 2905 	movx	@dptr,a
      000C76 E5*01            [12] 2906 	mov	a,(_makeTcpAck3_sloc0_1_0 + 1)
      000C78 A3               [24] 2907 	inc	dptr
      000C79 F0               [24] 2908 	movx	@dptr,a
      000C7A E5*02            [12] 2909 	mov	a,(_makeTcpAck3_sloc0_1_0 + 2)
      000C7C A3               [24] 2910 	inc	dptr
      000C7D F0               [24] 2911 	movx	@dptr,a
      000C7E E5*03            [12] 2912 	mov	a,(_makeTcpAck3_sloc0_1_0 + 3)
      000C80 A3               [24] 2913 	inc	dptr
      000C81 F0               [24] 2914 	movx	@dptr,a
                                   2915 ;	webserver.c:415: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      000C82 8B 07            [24] 2916 	mov	ar7,r3
      000C84 90r00r27         [24] 2917 	mov	dptr,#(_buffer + 0x0027)
      000C87 EF               [12] 2918 	mov	a,r7
      000C88 F0               [24] 2919 	movx	@dptr,a
                                   2920 ;	webserver.c:416: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      000C89 8A 07            [24] 2921 	mov	ar7,r2
      000C8B 90r00r28         [24] 2922 	mov	dptr,#(_buffer + 0x0028)
      000C8E EF               [12] 2923 	mov	a,r7
      000C8F F0               [24] 2924 	movx	@dptr,a
                                   2925 ;	webserver.c:417: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000C90 89 07            [24] 2926 	mov	ar7,r1
      000C92 90r00r29         [24] 2927 	mov	dptr,#(_buffer + 0x0029)
      000C95 EF               [12] 2928 	mov	a,r7
      000C96 F0               [24] 2929 	movx	@dptr,a
                                   2930 ;	webserver.c:418: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      000C97 90r00r2A         [24] 2931 	mov	dptr,#(_buffer + 0x002a)
      000C9A E8               [12] 2932 	mov	a,r0
      000C9B F0               [24] 2933 	movx	@dptr,a
                                   2934 ;	webserver.c:419: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      000C9C AF*03            [24] 2935 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 3)
      000C9E 90r00r2B         [24] 2936 	mov	dptr,#(_buffer + 0x002b)
      000CA1 EF               [12] 2937 	mov	a,r7
      000CA2 F0               [24] 2938 	movx	@dptr,a
                                   2939 ;	webserver.c:420: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      000CA3 AF*02            [24] 2940 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 2)
      000CA5 90r00r2C         [24] 2941 	mov	dptr,#(_buffer + 0x002c)
      000CA8 EF               [12] 2942 	mov	a,r7
      000CA9 F0               [24] 2943 	movx	@dptr,a
                                   2944 ;	webserver.c:421: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      000CAA AF*01            [24] 2945 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 1)
      000CAC 90r00r2D         [24] 2946 	mov	dptr,#(_buffer + 0x002d)
      000CAF EF               [12] 2947 	mov	a,r7
      000CB0 F0               [24] 2948 	movx	@dptr,a
                                   2949 ;	webserver.c:422: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      000CB1 AF*00            [24] 2950 	mov	r7,_makeTcpAck3_sloc0_1_0
      000CB3 90r00r2E         [24] 2951 	mov	dptr,#(_buffer + 0x002e)
      000CB6 EF               [12] 2952 	mov	a,r7
      000CB7 F0               [24] 2953 	movx	@dptr,a
                                   2954 ;	webserver.c:426: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000CB8 90r00r11         [24] 2955 	mov	dptr,#(_buffer + 0x0011)
      000CBB E4               [12] 2956 	clr	a
      000CBC F0               [24] 2957 	movx	@dptr,a
                                   2958 ;	webserver.c:427: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000CBD 90r00r12         [24] 2959 	mov	dptr,#(_buffer + 0x0012)
      000CC0 74 28            [12] 2960 	mov	a,#0x28
      000CC2 F0               [24] 2961 	movx	@dptr,a
                                   2962 ;	webserver.c:430: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      000CC3 90r00r30         [24] 2963 	mov	dptr,#(_buffer + 0x0030)
      000CC6 74 10            [12] 2964 	mov	a,#0x10
      000CC8 F0               [24] 2965 	movx	@dptr,a
                                   2966 ;	webserver.c:431: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      000CC9 90r00r31         [24] 2967 	mov	dptr,#(_buffer + 0x0031)
      000CCC 74 FF            [12] 2968 	mov	a,#0xff
      000CCE F0               [24] 2969 	movx	@dptr,a
                                   2970 ;	webserver.c:432: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      000CCF 90r00r32         [24] 2971 	mov	dptr,#(_buffer + 0x0032)
      000CD2 F0               [24] 2972 	movx	@dptr,a
                                   2973 ;	webserver.c:433: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000CD3 90r00r2F         [24] 2974 	mov	dptr,#(_buffer + 0x002f)
      000CD6 74 50            [12] 2975 	mov	a,#0x50
      000CD8 F0               [24] 2976 	movx	@dptr,a
                                   2977 ;	webserver.c:436: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000CD9 90r00r01         [24] 2978 	mov	dptr,#(_buffer + 0x0001)
      000CDC 75 F0 00         [24] 2979 	mov	b, #0x00
      000CDF 12r03r97         [24] 2980 	lcall	_calculateIPChecksum
                                   2981 ;	webserver.c:437: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000CE2 90r00r01         [24] 2982 	mov	dptr,#(_buffer + 0x0001)
      000CE5 75 F0 00         [24] 2983 	mov	b, #0x00
      000CE8 12r05r01         [24] 2984 	lcall	_calculateTcpChecksum
                                   2985 ;	webserver.c:441: transmit_tcp_packet(buffer, 1 + 54);
      000CEB 90r00r00         [24] 2986 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000CEE 74 37            [12] 2987 	mov	a,#0x37
      000CF0 F0               [24] 2988 	movx	@dptr,a
      000CF1 E4               [12] 2989 	clr	a
      000CF2 A3               [24] 2990 	inc	dptr
      000CF3 F0               [24] 2991 	movx	@dptr,a
      000CF4 90r00r00         [24] 2992 	mov	dptr,#_buffer
      000CF7 F5 F0            [12] 2993 	mov	b,a
      000CF9 12r00r00         [24] 2994 	lcall	_transmit_tcp_packet
                                   2995 ;	webserver.c:444: connectionState = ACK_SENT;
      000CFC 90r00r00         [24] 2996 	mov	dptr,#_connectionState
      000CFF 74 05            [12] 2997 	mov	a,#0x05
      000D01 F0               [24] 2998 	movx	@dptr,a
                                   2999 ;	webserver.c:445: }
      000D02 22               [24] 3000 	ret
                                   3001 ;------------------------------------------------------------
                                   3002 ;Allocation info for local variables in function 'makeTcpAck2'
                                   3003 ;------------------------------------------------------------
                                   3004 ;sloc0                     Allocated with name '_makeTcpAck2_sloc0_1_0'
                                   3005 ;sloc1                     Allocated with name '_makeTcpAck2_sloc1_1_0'
                                   3006 ;sloc2                     Allocated with name '_makeTcpAck2_sloc2_1_0'
                                   3007 ;device_mac                Allocated with name '_makeTcpAck2_device_mac_10000_130'
                                   3008 ;target_mac                Allocated with name '_makeTcpAck2_target_mac_10000_130'
                                   3009 ;device_ip                 Allocated with name '_makeTcpAck2_device_ip_10000_130'
                                   3010 ;target_ip                 Allocated with name '_makeTcpAck2_target_ip_10000_130'
                                   3011 ;totalLength1              Allocated with name '_makeTcpAck2_totalLength1_10000_130'
                                   3012 ;receivedPayloadLength     Allocated with name '_makeTcpAck2_receivedPayloadLength_10000_130'
                                   3013 ;srcPort                   Allocated with name '_makeTcpAck2_srcPort_10001_131'
                                   3014 ;dstPort                   Allocated with name '_makeTcpAck2_dstPort_10001_131'
                                   3015 ;clientSeqNum              Allocated with name '_makeTcpAck2_clientSeqNum_10002_132'
                                   3016 ;clientAckNum              Allocated with name '_makeTcpAck2_clientAckNum_10002_132'
                                   3017 ;serverSeqNum              Allocated with name '_makeTcpAck2_serverSeqNum_10002_132'
                                   3018 ;ackNum                    Allocated with name '_makeTcpAck2_ackNum_10002_132'
                                   3019 ;totalLength               Allocated with name '_makeTcpAck2_totalLength_10003_133'
                                   3020 ;------------------------------------------------------------
                                   3021 ;	webserver.c:459: void makeTcpAck2(void) 
                                   3022 ;	-----------------------------------------
                                   3023 ;	 function makeTcpAck2
                                   3024 ;	-----------------------------------------
      000D03                       3025 _makeTcpAck2:
                                   3026 ;	webserver.c:461: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      000D03 90r06r5B         [24] 3027 	mov	dptr,#_makeTcpAck2_device_mac_10000_130
      000D06 74 02            [12] 3028 	mov	a,#0x02
      000D08 F0               [24] 3029 	movx	@dptr,a
      000D09 90r06r5C         [24] 3030 	mov	dptr,#(_makeTcpAck2_device_mac_10000_130 + 0x0001)
      000D0C 23               [12] 3031 	rl	a
      000D0D F0               [24] 3032 	movx	@dptr,a
      000D0E 90r06r5D         [24] 3033 	mov	dptr,#(_makeTcpAck2_device_mac_10000_130 + 0x0002)
      000D11 74 A3            [12] 3034 	mov	a,#0xa3
      000D13 F0               [24] 3035 	movx	@dptr,a
      000D14 90r06r5E         [24] 3036 	mov	dptr,#(_makeTcpAck2_device_mac_10000_130 + 0x0003)
      000D17 74 3C            [12] 3037 	mov	a,#0x3c
      000D19 F0               [24] 3038 	movx	@dptr,a
      000D1A 90r06r5F         [24] 3039 	mov	dptr,#(_makeTcpAck2_device_mac_10000_130 + 0x0004)
      000D1D 74 4D            [12] 3040 	mov	a,#0x4d
      000D1F F0               [24] 3041 	movx	@dptr,a
      000D20 90r06r60         [24] 3042 	mov	dptr,#(_makeTcpAck2_device_mac_10000_130 + 0x0005)
      000D23 74 50            [12] 3043 	mov	a,#0x50
      000D25 F0               [24] 3044 	movx	@dptr,a
                                   3045 ;	webserver.c:462: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      000D26 90r06r61         [24] 3046 	mov	dptr,#_makeTcpAck2_target_mac_10000_130
      000D29 74 FF            [12] 3047 	mov	a,#0xff
      000D2B F0               [24] 3048 	movx	@dptr,a
      000D2C 90r06r62         [24] 3049 	mov	dptr,#(_makeTcpAck2_target_mac_10000_130 + 0x0001)
      000D2F F0               [24] 3050 	movx	@dptr,a
      000D30 90r06r63         [24] 3051 	mov	dptr,#(_makeTcpAck2_target_mac_10000_130 + 0x0002)
      000D33 F0               [24] 3052 	movx	@dptr,a
      000D34 90r06r64         [24] 3053 	mov	dptr,#(_makeTcpAck2_target_mac_10000_130 + 0x0003)
      000D37 F0               [24] 3054 	movx	@dptr,a
      000D38 90r06r65         [24] 3055 	mov	dptr,#(_makeTcpAck2_target_mac_10000_130 + 0x0004)
      000D3B F0               [24] 3056 	movx	@dptr,a
      000D3C 90r06r66         [24] 3057 	mov	dptr,#(_makeTcpAck2_target_mac_10000_130 + 0x0005)
      000D3F F0               [24] 3058 	movx	@dptr,a
                                   3059 ;	webserver.c:463: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000D40 90r06r67         [24] 3060 	mov	dptr,#_makeTcpAck2_device_ip_10000_130
      000D43 74 C0            [12] 3061 	mov	a,#0xc0
      000D45 F0               [24] 3062 	movx	@dptr,a
      000D46 90r06r68         [24] 3063 	mov	dptr,#(_makeTcpAck2_device_ip_10000_130 + 0x0001)
      000D49 74 A8            [12] 3064 	mov	a,#0xa8
      000D4B F0               [24] 3065 	movx	@dptr,a
      000D4C 90r06r69         [24] 3066 	mov	dptr,#(_makeTcpAck2_device_ip_10000_130 + 0x0002)
      000D4F 74 01            [12] 3067 	mov	a,#0x01
      000D51 F0               [24] 3068 	movx	@dptr,a
      000D52 90r06r6A         [24] 3069 	mov	dptr,#(_makeTcpAck2_device_ip_10000_130 + 0x0003)
      000D55 74 64            [12] 3070 	mov	a,#0x64
      000D57 F0               [24] 3071 	movx	@dptr,a
                                   3072 ;	webserver.c:464: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      000D58 90r06r6B         [24] 3073 	mov	dptr,#_makeTcpAck2_target_ip_10000_130
      000D5B 74 C0            [12] 3074 	mov	a,#0xc0
      000D5D F0               [24] 3075 	movx	@dptr,a
      000D5E 90r06r6C         [24] 3076 	mov	dptr,#(_makeTcpAck2_target_ip_10000_130 + 0x0001)
      000D61 74 A8            [12] 3077 	mov	a,#0xa8
      000D63 F0               [24] 3078 	movx	@dptr,a
      000D64 90r06r6D         [24] 3079 	mov	dptr,#(_makeTcpAck2_target_ip_10000_130 + 0x0002)
      000D67 74 01            [12] 3080 	mov	a,#0x01
      000D69 F0               [24] 3081 	movx	@dptr,a
      000D6A 90r06r6E         [24] 3082 	mov	dptr,#(_makeTcpAck2_target_ip_10000_130 + 0x0003)
      000D6D F0               [24] 3083 	movx	@dptr,a
                                   3084 ;	webserver.c:465: uint16_t totalLength1 = (buffer[16] << 8) | buffer[17]; // Total IP length
      000D6E 90r00r10         [24] 3085 	mov	dptr,#(_buffer + 0x0010)
      000D71 E0               [24] 3086 	movx	a,@dptr
      000D72 FE               [12] 3087 	mov	r6,a
      000D73 7F 00            [12] 3088 	mov	r7,#0x00
      000D75 90r00r11         [24] 3089 	mov	dptr,#(_buffer + 0x0011)
      000D78 E0               [24] 3090 	movx	a,@dptr
      000D79 7C 00            [12] 3091 	mov	r4,#0x00
      000D7B 42 07            [12] 3092 	orl	ar7,a
      000D7D EC               [12] 3093 	mov	a,r4
      000D7E 42 06            [12] 3094 	orl	ar6,a
                                   3095 ;	webserver.c:466: uint16_t receivedPayloadLength = totalLength1 - 40;
      000D80 EF               [12] 3096 	mov	a,r7
      000D81 24 D8            [12] 3097 	add	a,#0xd8
      000D83 FF               [12] 3098 	mov	r7,a
      000D84 EE               [12] 3099 	mov	a,r6
      000D85 34 FF            [12] 3100 	addc	a,#0xff
      000D87 FE               [12] 3101 	mov	r6,a
      000D88 8F*04            [24] 3102 	mov	_makeTcpAck2_sloc0_1_0,r7
      000D8A 8E*05            [24] 3103 	mov	(_makeTcpAck2_sloc0_1_0 + 1),r6
                                   3104 ;	webserver.c:467: printf("makeTcpAck\n\r");
      000D8C 74r9E            [12] 3105 	mov	a,#___str_3
      000D8E C0 E0            [24] 3106 	push	acc
      000D90 74s03            [12] 3107 	mov	a,#(___str_3 >> 8)
      000D92 C0 E0            [24] 3108 	push	acc
      000D94 74 80            [12] 3109 	mov	a,#0x80
      000D96 C0 E0            [24] 3110 	push	acc
      000D98 12r00r00         [24] 3111 	lcall	_printf
      000D9B 15 81            [12] 3112 	dec	sp
      000D9D 15 81            [12] 3113 	dec	sp
      000D9F 15 81            [12] 3114 	dec	sp
                                   3115 ;	webserver.c:470: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000DA1 90r00r00         [24] 3116 	mov	dptr,#_memmove_PARM_2
      000DA4 74r00            [12] 3117 	mov	a,#_buffer
      000DA6 F0               [24] 3118 	movx	@dptr,a
      000DA7 74s00            [12] 3119 	mov	a,#(_buffer >> 8)
      000DA9 A3               [24] 3120 	inc	dptr
      000DAA F0               [24] 3121 	movx	@dptr,a
      000DAB E4               [12] 3122 	clr	a
      000DAC A3               [24] 3123 	inc	dptr
      000DAD F0               [24] 3124 	movx	@dptr,a
      000DAE 90r00r00         [24] 3125 	mov	dptr,#_memmove_PARM_3
      000DB1 74 36            [12] 3126 	mov	a,#0x36
      000DB3 F0               [24] 3127 	movx	@dptr,a
      000DB4 E4               [12] 3128 	clr	a
      000DB5 A3               [24] 3129 	inc	dptr
      000DB6 F0               [24] 3130 	movx	@dptr,a
      000DB7 90r00r01         [24] 3131 	mov	dptr,#(_buffer + 0x0001)
      000DBA F5 F0            [12] 3132 	mov	b,a
      000DBC 12r00r00         [24] 3133 	lcall	_memmove
                                   3134 ;	webserver.c:471: buffer[0] = 0x0E;
      000DBF 90r00r00         [24] 3135 	mov	dptr,#_buffer
      000DC2 74 0E            [12] 3136 	mov	a,#0x0e
      000DC4 F0               [24] 3137 	movx	@dptr,a
                                   3138 ;	webserver.c:474: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      000DC5 90r00r00         [24] 3139 	mov	dptr,#___memcpy_PARM_2
      000DC8 74r07            [12] 3140 	mov	a,#(_buffer + 0x0007)
      000DCA F0               [24] 3141 	movx	@dptr,a
      000DCB 74s00            [12] 3142 	mov	a,#((_buffer + 0x0007) >> 8)
      000DCD A3               [24] 3143 	inc	dptr
      000DCE F0               [24] 3144 	movx	@dptr,a
      000DCF E4               [12] 3145 	clr	a
      000DD0 A3               [24] 3146 	inc	dptr
      000DD1 F0               [24] 3147 	movx	@dptr,a
      000DD2 90r00r00         [24] 3148 	mov	dptr,#___memcpy_PARM_3
      000DD5 74 06            [12] 3149 	mov	a,#0x06
      000DD7 F0               [24] 3150 	movx	@dptr,a
      000DD8 E4               [12] 3151 	clr	a
      000DD9 A3               [24] 3152 	inc	dptr
      000DDA F0               [24] 3153 	movx	@dptr,a
      000DDB 90r00r01         [24] 3154 	mov	dptr,#(_buffer + 0x0001)
      000DDE F5 F0            [12] 3155 	mov	b,a
      000DE0 12r00r00         [24] 3156 	lcall	___memcpy
                                   3157 ;	webserver.c:475: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      000DE3 90r00r00         [24] 3158 	mov	dptr,#___memcpy_PARM_2
      000DE6 74r5B            [12] 3159 	mov	a,#_makeTcpAck2_device_mac_10000_130
      000DE8 F0               [24] 3160 	movx	@dptr,a
      000DE9 74s06            [12] 3161 	mov	a,#(_makeTcpAck2_device_mac_10000_130 >> 8)
      000DEB A3               [24] 3162 	inc	dptr
      000DEC F0               [24] 3163 	movx	@dptr,a
      000DED E4               [12] 3164 	clr	a
      000DEE A3               [24] 3165 	inc	dptr
      000DEF F0               [24] 3166 	movx	@dptr,a
      000DF0 90r00r00         [24] 3167 	mov	dptr,#___memcpy_PARM_3
      000DF3 74 06            [12] 3168 	mov	a,#0x06
      000DF5 F0               [24] 3169 	movx	@dptr,a
      000DF6 E4               [12] 3170 	clr	a
      000DF7 A3               [24] 3171 	inc	dptr
      000DF8 F0               [24] 3172 	movx	@dptr,a
      000DF9 90r00r07         [24] 3173 	mov	dptr,#(_buffer + 0x0007)
      000DFC F5 F0            [12] 3174 	mov	b,a
      000DFE 12r00r00         [24] 3175 	lcall	___memcpy
                                   3176 ;	webserver.c:478: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000E01 90r00r00         [24] 3177 	mov	dptr,#___memcpy_PARM_2
      000E04 74r1B            [12] 3178 	mov	a,#(_buffer + 0x001b)
      000E06 F0               [24] 3179 	movx	@dptr,a
      000E07 74s00            [12] 3180 	mov	a,#((_buffer + 0x001b) >> 8)
      000E09 A3               [24] 3181 	inc	dptr
      000E0A F0               [24] 3182 	movx	@dptr,a
      000E0B E4               [12] 3183 	clr	a
      000E0C A3               [24] 3184 	inc	dptr
      000E0D F0               [24] 3185 	movx	@dptr,a
      000E0E 90r00r00         [24] 3186 	mov	dptr,#___memcpy_PARM_3
      000E11 74 04            [12] 3187 	mov	a,#0x04
      000E13 F0               [24] 3188 	movx	@dptr,a
      000E14 E4               [12] 3189 	clr	a
      000E15 A3               [24] 3190 	inc	dptr
      000E16 F0               [24] 3191 	movx	@dptr,a
      000E17 90r00r1F         [24] 3192 	mov	dptr,#(_buffer + 0x001f)
      000E1A F5 F0            [12] 3193 	mov	b,a
      000E1C 12r00r00         [24] 3194 	lcall	___memcpy
                                   3195 ;	webserver.c:479: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000E1F 90r00r00         [24] 3196 	mov	dptr,#___memcpy_PARM_2
      000E22 74r67            [12] 3197 	mov	a,#_makeTcpAck2_device_ip_10000_130
      000E24 F0               [24] 3198 	movx	@dptr,a
      000E25 74s06            [12] 3199 	mov	a,#(_makeTcpAck2_device_ip_10000_130 >> 8)
      000E27 A3               [24] 3200 	inc	dptr
      000E28 F0               [24] 3201 	movx	@dptr,a
      000E29 E4               [12] 3202 	clr	a
      000E2A A3               [24] 3203 	inc	dptr
      000E2B F0               [24] 3204 	movx	@dptr,a
      000E2C 90r00r00         [24] 3205 	mov	dptr,#___memcpy_PARM_3
      000E2F 74 04            [12] 3206 	mov	a,#0x04
      000E31 F0               [24] 3207 	movx	@dptr,a
      000E32 E4               [12] 3208 	clr	a
      000E33 A3               [24] 3209 	inc	dptr
      000E34 F0               [24] 3210 	movx	@dptr,a
      000E35 90r00r1B         [24] 3211 	mov	dptr,#(_buffer + 0x001b)
      000E38 F5 F0            [12] 3212 	mov	b,a
      000E3A 12r00r00         [24] 3213 	lcall	___memcpy
                                   3214 ;	webserver.c:482: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000E3D 90r00r23         [24] 3215 	mov	dptr,#(_buffer + 0x0023)
      000E40 E0               [24] 3216 	movx	a,@dptr
      000E41 FC               [12] 3217 	mov	r4,a
      000E42 7D 00            [12] 3218 	mov	r5,#0x00
      000E44 90r00r24         [24] 3219 	mov	dptr,#(_buffer + 0x0024)
      000E47 E0               [24] 3220 	movx	a,@dptr
      000E48 7A 00            [12] 3221 	mov	r2,#0x00
      000E4A 42 05            [12] 3222 	orl	ar5,a
      000E4C EA               [12] 3223 	mov	a,r2
      000E4D 42 04            [12] 3224 	orl	ar4,a
                                   3225 ;	webserver.c:484: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000E4F 90r00r25         [24] 3226 	mov	dptr,#(_buffer + 0x0025)
      000E52 E0               [24] 3227 	movx	a,@dptr
      000E53 FA               [12] 3228 	mov	r2,a
      000E54 7B 00            [12] 3229 	mov	r3,#0x00
      000E56 90r00r26         [24] 3230 	mov	dptr,#(_buffer + 0x0026)
      000E59 E0               [24] 3231 	movx	a,@dptr
      000E5A 79 00            [12] 3232 	mov	r1,#0x00
      000E5C 42 03            [12] 3233 	orl	ar3,a
      000E5E E9               [12] 3234 	mov	a,r1
      000E5F 42 02            [12] 3235 	orl	ar2,a
                                   3236 ;	webserver.c:486: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000E61 8A 01            [24] 3237 	mov	ar1,r2
      000E63 90r00r23         [24] 3238 	mov	dptr,#(_buffer + 0x0023)
      000E66 E9               [12] 3239 	mov	a,r1
      000E67 F0               [24] 3240 	movx	@dptr,a
                                   3241 ;	webserver.c:487: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      000E68 90r00r24         [24] 3242 	mov	dptr,#(_buffer + 0x0024)
      000E6B EB               [12] 3243 	mov	a,r3
      000E6C F0               [24] 3244 	movx	@dptr,a
                                   3245 ;	webserver.c:488: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      000E6D 8C 03            [24] 3246 	mov	ar3,r4
      000E6F 90r00r25         [24] 3247 	mov	dptr,#(_buffer + 0x0025)
      000E72 EB               [12] 3248 	mov	a,r3
      000E73 F0               [24] 3249 	movx	@dptr,a
                                   3250 ;	webserver.c:489: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      000E74 90r00r26         [24] 3251 	mov	dptr,#(_buffer + 0x0026)
      000E77 ED               [12] 3252 	mov	a,r5
      000E78 F0               [24] 3253 	movx	@dptr,a
                                   3254 ;	webserver.c:492: uint32_t clientSeqNum = ((uint32_t)buffer[1 + TCP_SEQ_H_P] << 24)
      000E79 90r00r27         [24] 3255 	mov	dptr,#(_buffer + 0x0027)
      000E7C E0               [24] 3256 	movx	a,@dptr
      000E7D FD               [12] 3257 	mov	r5,a
      000E7E 7C 00            [12] 3258 	mov	r4,#0x00
      000E80 7B 00            [12] 3259 	mov	r3,#0x00
      000E82 8D 02            [24] 3260 	mov	ar2,r5
      000E84 7D 00            [12] 3261 	mov	r5,#0x00
      000E86 90r00r28         [24] 3262 	mov	dptr,#(_buffer + 0x0028)
      000E89 E0               [24] 3263 	movx	a,@dptr
      000E8A F8               [12] 3264 	mov	r0,a
      000E8B 79 00            [12] 3265 	mov	r1,#0x00
      000E8D 89 07            [24] 3266 	mov	ar7,r1
      000E8F 88 06            [24] 3267 	mov	ar6,r0
      000E91 E4               [12] 3268 	clr	a
      000E92 42 05            [12] 3269 	orl	ar5,a
      000E94 E9               [12] 3270 	mov	a,r1
      000E95 42 04            [12] 3271 	orl	ar4,a
      000E97 EE               [12] 3272 	mov	a,r6
      000E98 42 03            [12] 3273 	orl	ar3,a
      000E9A EF               [12] 3274 	mov	a,r7
      000E9B 42 02            [12] 3275 	orl	ar2,a
      000E9D 90r00r29         [24] 3276 	mov	dptr,#(_buffer + 0x0029)
      000EA0 E0               [24] 3277 	movx	a,@dptr
      000EA1 F8               [12] 3278 	mov	r0,a
      000EA2 79 00            [12] 3279 	mov	r1,#0x00
      000EA4 7E 00            [12] 3280 	mov	r6,#0x00
      000EA6 8E 07            [24] 3281 	mov	ar7,r6
      000EA8 89 06            [24] 3282 	mov	ar6,r1
      000EAA 88 01            [24] 3283 	mov	ar1,r0
      000EAC E4               [12] 3284 	clr	a
      000EAD 42 05            [12] 3285 	orl	ar5,a
      000EAF E9               [12] 3286 	mov	a,r1
      000EB0 42 04            [12] 3287 	orl	ar4,a
      000EB2 EE               [12] 3288 	mov	a,r6
      000EB3 42 03            [12] 3289 	orl	ar3,a
      000EB5 EF               [12] 3290 	mov	a,r7
      000EB6 42 02            [12] 3291 	orl	ar2,a
      000EB8 90r00r2A         [24] 3292 	mov	dptr,#(_buffer + 0x002a)
      000EBB E0               [24] 3293 	movx	a,@dptr
      000EBC F8               [12] 3294 	mov	r0,a
      000EBD E4               [12] 3295 	clr	a
      000EBE F9               [12] 3296 	mov	r1,a
      000EBF FE               [12] 3297 	mov	r6,a
      000EC0 FF               [12] 3298 	mov	r7,a
      000EC1 E8               [12] 3299 	mov	a,r0
      000EC2 4D               [12] 3300 	orl	a,r5
      000EC3 F5*0A            [12] 3301 	mov	_makeTcpAck2_sloc2_1_0,a
      000EC5 E9               [12] 3302 	mov	a,r1
      000EC6 4C               [12] 3303 	orl	a,r4
      000EC7 F5*0B            [12] 3304 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      000EC9 EE               [12] 3305 	mov	a,r6
      000ECA 4B               [12] 3306 	orl	a,r3
      000ECB F5*0C            [12] 3307 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      000ECD EF               [12] 3308 	mov	a,r7
      000ECE 4A               [12] 3309 	orl	a,r2
      000ECF F5*0D            [12] 3310 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   3311 ;	webserver.c:497: uint32_t clientAckNum = ((uint32_t)buffer[1 + TCP_ACK_H_P] << 24)
      000ED1 90r00r2B         [24] 3312 	mov	dptr,#(_buffer + 0x002b)
      000ED4 E0               [24] 3313 	movx	a,@dptr
      000ED5 F8               [12] 3314 	mov	r0,a
      000ED6 7F 00            [12] 3315 	mov	r7,#0x00
      000ED8 88*09            [24] 3316 	mov	(_makeTcpAck2_sloc1_1_0 + 3),r0
      000EDA 8F*06            [24] 3317 	mov	_makeTcpAck2_sloc1_1_0,r7
      000EDC 8F*07            [24] 3318 	mov	(_makeTcpAck2_sloc1_1_0 + 1),r7
      000EDE 8F*08            [24] 3319 	mov	(_makeTcpAck2_sloc1_1_0 + 2),r7
      000EE0 90r00r2C         [24] 3320 	mov	dptr,#(_buffer + 0x002c)
      000EE3 E0               [24] 3321 	movx	a,@dptr
      000EE4 F8               [12] 3322 	mov	r0,a
      000EE5 89 07            [24] 3323 	mov	ar7,r1
      000EE7 88 06            [24] 3324 	mov	ar6,r0
      000EE9 E4               [12] 3325 	clr	a
      000EEA 42*06            [12] 3326 	orl	_makeTcpAck2_sloc1_1_0,a
      000EEC E9               [12] 3327 	mov	a,r1
      000EED 42*07            [12] 3328 	orl	(_makeTcpAck2_sloc1_1_0 + 1),a
      000EEF EE               [12] 3329 	mov	a,r6
      000EF0 42*08            [12] 3330 	orl	(_makeTcpAck2_sloc1_1_0 + 2),a
      000EF2 EF               [12] 3331 	mov	a,r7
      000EF3 42*09            [12] 3332 	orl	(_makeTcpAck2_sloc1_1_0 + 3),a
      000EF5 90r00r2D         [24] 3333 	mov	dptr,#(_buffer + 0x002d)
      000EF8 E0               [24] 3334 	movx	a,@dptr
      000EF9 F8               [12] 3335 	mov	r0,a
      000EFA 79 00            [12] 3336 	mov	r1,#0x00
      000EFC 7E 00            [12] 3337 	mov	r6,#0x00
      000EFE 8E 07            [24] 3338 	mov	ar7,r6
      000F00 89 06            [24] 3339 	mov	ar6,r1
      000F02 88 01            [24] 3340 	mov	ar1,r0
      000F04 E4               [12] 3341 	clr	a
      000F05 42*06            [12] 3342 	orl	_makeTcpAck2_sloc1_1_0,a
      000F07 E9               [12] 3343 	mov	a,r1
      000F08 42*07            [12] 3344 	orl	(_makeTcpAck2_sloc1_1_0 + 1),a
      000F0A EE               [12] 3345 	mov	a,r6
      000F0B 42*08            [12] 3346 	orl	(_makeTcpAck2_sloc1_1_0 + 2),a
      000F0D EF               [12] 3347 	mov	a,r7
      000F0E 42*09            [12] 3348 	orl	(_makeTcpAck2_sloc1_1_0 + 3),a
      000F10 90r00r2E         [24] 3349 	mov	dptr,#(_buffer + 0x002e)
      000F13 E0               [24] 3350 	movx	a,@dptr
      000F14 F8               [12] 3351 	mov	r0,a
      000F15 E4               [12] 3352 	clr	a
      000F16 F9               [12] 3353 	mov	r1,a
      000F17 FE               [12] 3354 	mov	r6,a
      000F18 FF               [12] 3355 	mov	r7,a
      000F19 E5*07            [12] 3356 	mov	a,(_makeTcpAck2_sloc1_1_0 + 1)
      000F1B 42 01            [12] 3357 	orl	ar1,a
      000F1D E5*08            [12] 3358 	mov	a,(_makeTcpAck2_sloc1_1_0 + 2)
      000F1F 42 06            [12] 3359 	orl	ar6,a
      000F21 E5*09            [12] 3360 	mov	a,(_makeTcpAck2_sloc1_1_0 + 3)
      000F23 42 07            [12] 3361 	orl	ar7,a
                                   3362 ;	webserver.c:503: uint32_t ackNum = clientSeqNum + receivedPayloadLength - 1;
      000F25 AA*04            [24] 3363 	mov	r2,_makeTcpAck2_sloc0_1_0
      000F27 AB*05            [24] 3364 	mov	r3,(_makeTcpAck2_sloc0_1_0 + 1)
      000F29 E4               [12] 3365 	clr	a
      000F2A FC               [12] 3366 	mov	r4,a
      000F2B FD               [12] 3367 	mov	r5,a
      000F2C EA               [12] 3368 	mov	a,r2
      000F2D 25*0A            [12] 3369 	add	a, _makeTcpAck2_sloc2_1_0
      000F2F FA               [12] 3370 	mov	r2,a
      000F30 EB               [12] 3371 	mov	a,r3
      000F31 35*0B            [12] 3372 	addc	a, (_makeTcpAck2_sloc2_1_0 + 1)
      000F33 FB               [12] 3373 	mov	r3,a
      000F34 EC               [12] 3374 	mov	a,r4
      000F35 35*0C            [12] 3375 	addc	a, (_makeTcpAck2_sloc2_1_0 + 2)
      000F37 FC               [12] 3376 	mov	r4,a
      000F38 ED               [12] 3377 	mov	a,r5
      000F39 35*0D            [12] 3378 	addc	a, (_makeTcpAck2_sloc2_1_0 + 3)
      000F3B FD               [12] 3379 	mov	r5,a
      000F3C EA               [12] 3380 	mov	a,r2
      000F3D 24 FF            [12] 3381 	add	a,#0xff
      000F3F F5*0A            [12] 3382 	mov	_makeTcpAck2_sloc2_1_0,a
      000F41 EB               [12] 3383 	mov	a,r3
      000F42 34 FF            [12] 3384 	addc	a,#0xff
      000F44 F5*0B            [12] 3385 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      000F46 EC               [12] 3386 	mov	a,r4
      000F47 34 FF            [12] 3387 	addc	a,#0xff
      000F49 F5*0C            [12] 3388 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      000F4B ED               [12] 3389 	mov	a,r5
      000F4C 34 FF            [12] 3390 	addc	a,#0xff
      000F4E F5*0D            [12] 3391 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   3392 ;	webserver.c:504: prevSeq = serverSeqNum;
      000F50 90r05rDC         [24] 3393 	mov	dptr,#_prevSeq
      000F53 E8               [12] 3394 	mov	a,r0
      000F54 F0               [24] 3395 	movx	@dptr,a
      000F55 E9               [12] 3396 	mov	a,r1
      000F56 A3               [24] 3397 	inc	dptr
      000F57 F0               [24] 3398 	movx	@dptr,a
      000F58 EE               [12] 3399 	mov	a,r6
      000F59 A3               [24] 3400 	inc	dptr
      000F5A F0               [24] 3401 	movx	@dptr,a
      000F5B EF               [12] 3402 	mov	a,r7
      000F5C A3               [24] 3403 	inc	dptr
      000F5D F0               [24] 3404 	movx	@dptr,a
                                   3405 ;	webserver.c:505: prevAck = ackNum;
      000F5E 90r05rE0         [24] 3406 	mov	dptr,#_prevAck
      000F61 E5*0A            [12] 3407 	mov	a,_makeTcpAck2_sloc2_1_0
      000F63 F0               [24] 3408 	movx	@dptr,a
      000F64 E5*0B            [12] 3409 	mov	a,(_makeTcpAck2_sloc2_1_0 + 1)
      000F66 A3               [24] 3410 	inc	dptr
      000F67 F0               [24] 3411 	movx	@dptr,a
      000F68 E5*0C            [12] 3412 	mov	a,(_makeTcpAck2_sloc2_1_0 + 2)
      000F6A A3               [24] 3413 	inc	dptr
      000F6B F0               [24] 3414 	movx	@dptr,a
      000F6C E5*0D            [12] 3415 	mov	a,(_makeTcpAck2_sloc2_1_0 + 3)
      000F6E A3               [24] 3416 	inc	dptr
      000F6F F0               [24] 3417 	movx	@dptr,a
                                   3418 ;	webserver.c:508: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      000F70 8F 05            [24] 3419 	mov	ar5,r7
      000F72 90r00r27         [24] 3420 	mov	dptr,#(_buffer + 0x0027)
      000F75 ED               [12] 3421 	mov	a,r5
      000F76 F0               [24] 3422 	movx	@dptr,a
                                   3423 ;	webserver.c:509: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      000F77 8E 05            [24] 3424 	mov	ar5,r6
      000F79 90r00r28         [24] 3425 	mov	dptr,#(_buffer + 0x0028)
      000F7C ED               [12] 3426 	mov	a,r5
      000F7D F0               [24] 3427 	movx	@dptr,a
                                   3428 ;	webserver.c:510: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000F7E 89 05            [24] 3429 	mov	ar5,r1
      000F80 90r00r29         [24] 3430 	mov	dptr,#(_buffer + 0x0029)
      000F83 ED               [12] 3431 	mov	a,r5
      000F84 F0               [24] 3432 	movx	@dptr,a
                                   3433 ;	webserver.c:511: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      000F85 90r00r2A         [24] 3434 	mov	dptr,#(_buffer + 0x002a)
      000F88 E8               [12] 3435 	mov	a,r0
      000F89 F0               [24] 3436 	movx	@dptr,a
                                   3437 ;	webserver.c:512: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      000F8A AF*0D            [24] 3438 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 3)
      000F8C 90r00r2B         [24] 3439 	mov	dptr,#(_buffer + 0x002b)
      000F8F EF               [12] 3440 	mov	a,r7
      000F90 F0               [24] 3441 	movx	@dptr,a
                                   3442 ;	webserver.c:513: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      000F91 AF*0C            [24] 3443 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 2)
      000F93 90r00r2C         [24] 3444 	mov	dptr,#(_buffer + 0x002c)
      000F96 EF               [12] 3445 	mov	a,r7
      000F97 F0               [24] 3446 	movx	@dptr,a
                                   3447 ;	webserver.c:514: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      000F98 AF*0B            [24] 3448 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 1)
      000F9A 90r00r2D         [24] 3449 	mov	dptr,#(_buffer + 0x002d)
      000F9D EF               [12] 3450 	mov	a,r7
      000F9E F0               [24] 3451 	movx	@dptr,a
                                   3452 ;	webserver.c:515: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      000F9F AA*0A            [24] 3453 	mov	r2,_makeTcpAck2_sloc2_1_0
      000FA1 90r00r2E         [24] 3454 	mov	dptr,#(_buffer + 0x002e)
      000FA4 EA               [12] 3455 	mov	a,r2
      000FA5 F0               [24] 3456 	movx	@dptr,a
                                   3457 ;	webserver.c:519: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000FA6 90r00r11         [24] 3458 	mov	dptr,#(_buffer + 0x0011)
      000FA9 E4               [12] 3459 	clr	a
      000FAA F0               [24] 3460 	movx	@dptr,a
                                   3461 ;	webserver.c:520: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000FAB 90r00r12         [24] 3462 	mov	dptr,#(_buffer + 0x0012)
      000FAE 74 28            [12] 3463 	mov	a,#0x28
      000FB0 F0               [24] 3464 	movx	@dptr,a
                                   3465 ;	webserver.c:523: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      000FB1 90r00r30         [24] 3466 	mov	dptr,#(_buffer + 0x0030)
      000FB4 74 10            [12] 3467 	mov	a,#0x10
      000FB6 F0               [24] 3468 	movx	@dptr,a
                                   3469 ;	webserver.c:524: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      000FB7 90r00r31         [24] 3470 	mov	dptr,#(_buffer + 0x0031)
      000FBA 74 FF            [12] 3471 	mov	a,#0xff
      000FBC F0               [24] 3472 	movx	@dptr,a
                                   3473 ;	webserver.c:525: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      000FBD 90r00r32         [24] 3474 	mov	dptr,#(_buffer + 0x0032)
      000FC0 F0               [24] 3475 	movx	@dptr,a
                                   3476 ;	webserver.c:526: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000FC1 90r00r2F         [24] 3477 	mov	dptr,#(_buffer + 0x002f)
      000FC4 74 50            [12] 3478 	mov	a,#0x50
      000FC6 F0               [24] 3479 	movx	@dptr,a
                                   3480 ;	webserver.c:529: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000FC7 90r00r01         [24] 3481 	mov	dptr,#(_buffer + 0x0001)
      000FCA 75 F0 00         [24] 3482 	mov	b, #0x00
      000FCD 12r03r97         [24] 3483 	lcall	_calculateIPChecksum
                                   3484 ;	webserver.c:530: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000FD0 90r00r01         [24] 3485 	mov	dptr,#(_buffer + 0x0001)
      000FD3 75 F0 00         [24] 3486 	mov	b, #0x00
      000FD6 12r05r01         [24] 3487 	lcall	_calculateTcpChecksum
                                   3488 ;	webserver.c:534: transmit_tcp_packet(buffer, 1 + 54);
      000FD9 90r00r00         [24] 3489 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000FDC 74 37            [12] 3490 	mov	a,#0x37
      000FDE F0               [24] 3491 	movx	@dptr,a
      000FDF E4               [12] 3492 	clr	a
      000FE0 A3               [24] 3493 	inc	dptr
      000FE1 F0               [24] 3494 	movx	@dptr,a
      000FE2 90r00r00         [24] 3495 	mov	dptr,#_buffer
      000FE5 F5 F0            [12] 3496 	mov	b,a
      000FE7 12r00r00         [24] 3497 	lcall	_transmit_tcp_packet
                                   3498 ;	webserver.c:537: connectionState = ACK_SENT;
      000FEA 90r00r00         [24] 3499 	mov	dptr,#_connectionState
      000FED 74 05            [12] 3500 	mov	a,#0x05
      000FEF F0               [24] 3501 	movx	@dptr,a
                                   3502 ;	webserver.c:538: }
      000FF0 22               [24] 3503 	ret
                                   3504 ;------------------------------------------------------------
                                   3505 ;Allocation info for local variables in function 'makeTcpSynAck'
                                   3506 ;------------------------------------------------------------
                                   3507 ;sloc0                     Allocated with name '_makeTcpSynAck_sloc0_1_0'
                                   3508 ;device_mac                Allocated with name '_makeTcpSynAck_device_mac_10000_135'
                                   3509 ;target_mac                Allocated with name '_makeTcpSynAck_target_mac_10000_135'
                                   3510 ;device_ip                 Allocated with name '_makeTcpSynAck_device_ip_10000_135'
                                   3511 ;target_ip                 Allocated with name '_makeTcpSynAck_target_ip_10000_135'
                                   3512 ;srcPort                   Allocated with name '_makeTcpSynAck_srcPort_10001_136'
                                   3513 ;dstPort                   Allocated with name '_makeTcpSynAck_dstPort_10001_136'
                                   3514 ;clientSeqNum              Allocated with name '_makeTcpSynAck_clientSeqNum_10002_137'
                                   3515 ;clientAckNumber           Allocated with name '_makeTcpSynAck_clientAckNumber_10002_137'
                                   3516 ;serverSeqNum              Allocated with name '_makeTcpSynAck_serverSeqNum_10002_137'
                                   3517 ;ackNum                    Allocated with name '_makeTcpSynAck_ackNum_10002_137'
                                   3518 ;totalLength               Allocated with name '_makeTcpSynAck_totalLength_10003_138'
                                   3519 ;------------------------------------------------------------
                                   3520 ;	webserver.c:552: void makeTcpSynAck(void) 
                                   3521 ;	-----------------------------------------
                                   3522 ;	 function makeTcpSynAck
                                   3523 ;	-----------------------------------------
      000FF1                       3524 _makeTcpSynAck:
                                   3525 ;	webserver.c:554: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      000FF1 90r06r6F         [24] 3526 	mov	dptr,#_makeTcpSynAck_device_mac_10000_135
      000FF4 74 02            [12] 3527 	mov	a,#0x02
      000FF6 F0               [24] 3528 	movx	@dptr,a
      000FF7 90r06r70         [24] 3529 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_135 + 0x0001)
      000FFA 23               [12] 3530 	rl	a
      000FFB F0               [24] 3531 	movx	@dptr,a
      000FFC 90r06r71         [24] 3532 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_135 + 0x0002)
      000FFF 74 A3            [12] 3533 	mov	a,#0xa3
      001001 F0               [24] 3534 	movx	@dptr,a
      001002 90r06r72         [24] 3535 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_135 + 0x0003)
      001005 74 3C            [12] 3536 	mov	a,#0x3c
      001007 F0               [24] 3537 	movx	@dptr,a
      001008 90r06r73         [24] 3538 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_135 + 0x0004)
      00100B 74 4D            [12] 3539 	mov	a,#0x4d
      00100D F0               [24] 3540 	movx	@dptr,a
      00100E 90r06r74         [24] 3541 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_135 + 0x0005)
      001011 74 50            [12] 3542 	mov	a,#0x50
      001013 F0               [24] 3543 	movx	@dptr,a
                                   3544 ;	webserver.c:555: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      001014 90r06r75         [24] 3545 	mov	dptr,#_makeTcpSynAck_target_mac_10000_135
      001017 74 FF            [12] 3546 	mov	a,#0xff
      001019 F0               [24] 3547 	movx	@dptr,a
      00101A 90r06r76         [24] 3548 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_135 + 0x0001)
      00101D F0               [24] 3549 	movx	@dptr,a
      00101E 90r06r77         [24] 3550 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_135 + 0x0002)
      001021 F0               [24] 3551 	movx	@dptr,a
      001022 90r06r78         [24] 3552 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_135 + 0x0003)
      001025 F0               [24] 3553 	movx	@dptr,a
      001026 90r06r79         [24] 3554 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_135 + 0x0004)
      001029 F0               [24] 3555 	movx	@dptr,a
      00102A 90r06r7A         [24] 3556 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_135 + 0x0005)
      00102D F0               [24] 3557 	movx	@dptr,a
                                   3558 ;	webserver.c:556: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      00102E 90r06r7B         [24] 3559 	mov	dptr,#_makeTcpSynAck_device_ip_10000_135
      001031 74 C0            [12] 3560 	mov	a,#0xc0
      001033 F0               [24] 3561 	movx	@dptr,a
      001034 90r06r7C         [24] 3562 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_135 + 0x0001)
      001037 74 A8            [12] 3563 	mov	a,#0xa8
      001039 F0               [24] 3564 	movx	@dptr,a
      00103A 90r06r7D         [24] 3565 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_135 + 0x0002)
      00103D 74 01            [12] 3566 	mov	a,#0x01
      00103F F0               [24] 3567 	movx	@dptr,a
      001040 90r06r7E         [24] 3568 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_135 + 0x0003)
      001043 74 64            [12] 3569 	mov	a,#0x64
      001045 F0               [24] 3570 	movx	@dptr,a
                                   3571 ;	webserver.c:557: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      001046 90r06r7F         [24] 3572 	mov	dptr,#_makeTcpSynAck_target_ip_10000_135
      001049 74 C0            [12] 3573 	mov	a,#0xc0
      00104B F0               [24] 3574 	movx	@dptr,a
      00104C 90r06r80         [24] 3575 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_135 + 0x0001)
      00104F 74 A8            [12] 3576 	mov	a,#0xa8
      001051 F0               [24] 3577 	movx	@dptr,a
      001052 90r06r81         [24] 3578 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_135 + 0x0002)
      001055 74 01            [12] 3579 	mov	a,#0x01
      001057 F0               [24] 3580 	movx	@dptr,a
      001058 90r06r82         [24] 3581 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_135 + 0x0003)
      00105B F0               [24] 3582 	movx	@dptr,a
                                   3583 ;	webserver.c:558: printf("makeTcpSynAck\n\r");
      00105C 74rAB            [12] 3584 	mov	a,#___str_4
      00105E C0 E0            [24] 3585 	push	acc
      001060 74s03            [12] 3586 	mov	a,#(___str_4 >> 8)
      001062 C0 E0            [24] 3587 	push	acc
      001064 74 80            [12] 3588 	mov	a,#0x80
      001066 C0 E0            [24] 3589 	push	acc
      001068 12r00r00         [24] 3590 	lcall	_printf
      00106B 15 81            [12] 3591 	dec	sp
      00106D 15 81            [12] 3592 	dec	sp
      00106F 15 81            [12] 3593 	dec	sp
                                   3594 ;	webserver.c:561: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      001071 90r00r00         [24] 3595 	mov	dptr,#_memmove_PARM_2
      001074 74r00            [12] 3596 	mov	a,#_buffer
      001076 F0               [24] 3597 	movx	@dptr,a
      001077 74s00            [12] 3598 	mov	a,#(_buffer >> 8)
      001079 A3               [24] 3599 	inc	dptr
      00107A F0               [24] 3600 	movx	@dptr,a
      00107B E4               [12] 3601 	clr	a
      00107C A3               [24] 3602 	inc	dptr
      00107D F0               [24] 3603 	movx	@dptr,a
      00107E 90r00r00         [24] 3604 	mov	dptr,#_memmove_PARM_3
      001081 74 36            [12] 3605 	mov	a,#0x36
      001083 F0               [24] 3606 	movx	@dptr,a
      001084 E4               [12] 3607 	clr	a
      001085 A3               [24] 3608 	inc	dptr
      001086 F0               [24] 3609 	movx	@dptr,a
      001087 90r00r01         [24] 3610 	mov	dptr,#(_buffer + 0x0001)
      00108A F5 F0            [12] 3611 	mov	b,a
      00108C 12r00r00         [24] 3612 	lcall	_memmove
                                   3613 ;	webserver.c:562: buffer[0] = 0x0E;
      00108F 90r00r00         [24] 3614 	mov	dptr,#_buffer
      001092 74 0E            [12] 3615 	mov	a,#0x0e
      001094 F0               [24] 3616 	movx	@dptr,a
                                   3617 ;	webserver.c:564: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      001095 90r00r00         [24] 3618 	mov	dptr,#___memcpy_PARM_2
      001098 74r07            [12] 3619 	mov	a,#(_buffer + 0x0007)
      00109A F0               [24] 3620 	movx	@dptr,a
      00109B 74s00            [12] 3621 	mov	a,#((_buffer + 0x0007) >> 8)
      00109D A3               [24] 3622 	inc	dptr
      00109E F0               [24] 3623 	movx	@dptr,a
      00109F E4               [12] 3624 	clr	a
      0010A0 A3               [24] 3625 	inc	dptr
      0010A1 F0               [24] 3626 	movx	@dptr,a
      0010A2 90r00r00         [24] 3627 	mov	dptr,#___memcpy_PARM_3
      0010A5 74 06            [12] 3628 	mov	a,#0x06
      0010A7 F0               [24] 3629 	movx	@dptr,a
      0010A8 E4               [12] 3630 	clr	a
      0010A9 A3               [24] 3631 	inc	dptr
      0010AA F0               [24] 3632 	movx	@dptr,a
      0010AB 90r00r01         [24] 3633 	mov	dptr,#(_buffer + 0x0001)
      0010AE F5 F0            [12] 3634 	mov	b,a
      0010B0 12r00r00         [24] 3635 	lcall	___memcpy
                                   3636 ;	webserver.c:565: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      0010B3 90r00r00         [24] 3637 	mov	dptr,#___memcpy_PARM_2
      0010B6 74r6F            [12] 3638 	mov	a,#_makeTcpSynAck_device_mac_10000_135
      0010B8 F0               [24] 3639 	movx	@dptr,a
      0010B9 74s06            [12] 3640 	mov	a,#(_makeTcpSynAck_device_mac_10000_135 >> 8)
      0010BB A3               [24] 3641 	inc	dptr
      0010BC F0               [24] 3642 	movx	@dptr,a
      0010BD E4               [12] 3643 	clr	a
      0010BE A3               [24] 3644 	inc	dptr
      0010BF F0               [24] 3645 	movx	@dptr,a
      0010C0 90r00r00         [24] 3646 	mov	dptr,#___memcpy_PARM_3
      0010C3 74 06            [12] 3647 	mov	a,#0x06
      0010C5 F0               [24] 3648 	movx	@dptr,a
      0010C6 E4               [12] 3649 	clr	a
      0010C7 A3               [24] 3650 	inc	dptr
      0010C8 F0               [24] 3651 	movx	@dptr,a
      0010C9 90r00r07         [24] 3652 	mov	dptr,#(_buffer + 0x0007)
      0010CC F5 F0            [12] 3653 	mov	b,a
      0010CE 12r00r00         [24] 3654 	lcall	___memcpy
                                   3655 ;	webserver.c:568: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      0010D1 90r00r00         [24] 3656 	mov	dptr,#___memcpy_PARM_2
      0010D4 74r1B            [12] 3657 	mov	a,#(_buffer + 0x001b)
      0010D6 F0               [24] 3658 	movx	@dptr,a
      0010D7 74s00            [12] 3659 	mov	a,#((_buffer + 0x001b) >> 8)
      0010D9 A3               [24] 3660 	inc	dptr
      0010DA F0               [24] 3661 	movx	@dptr,a
      0010DB E4               [12] 3662 	clr	a
      0010DC A3               [24] 3663 	inc	dptr
      0010DD F0               [24] 3664 	movx	@dptr,a
      0010DE 90r00r00         [24] 3665 	mov	dptr,#___memcpy_PARM_3
      0010E1 74 04            [12] 3666 	mov	a,#0x04
      0010E3 F0               [24] 3667 	movx	@dptr,a
      0010E4 E4               [12] 3668 	clr	a
      0010E5 A3               [24] 3669 	inc	dptr
      0010E6 F0               [24] 3670 	movx	@dptr,a
      0010E7 90r00r1F         [24] 3671 	mov	dptr,#(_buffer + 0x001f)
      0010EA F5 F0            [12] 3672 	mov	b,a
      0010EC 12r00r00         [24] 3673 	lcall	___memcpy
                                   3674 ;	webserver.c:569: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      0010EF 90r00r00         [24] 3675 	mov	dptr,#___memcpy_PARM_2
      0010F2 74r7B            [12] 3676 	mov	a,#_makeTcpSynAck_device_ip_10000_135
      0010F4 F0               [24] 3677 	movx	@dptr,a
      0010F5 74s06            [12] 3678 	mov	a,#(_makeTcpSynAck_device_ip_10000_135 >> 8)
      0010F7 A3               [24] 3679 	inc	dptr
      0010F8 F0               [24] 3680 	movx	@dptr,a
      0010F9 E4               [12] 3681 	clr	a
      0010FA A3               [24] 3682 	inc	dptr
      0010FB F0               [24] 3683 	movx	@dptr,a
      0010FC 90r00r00         [24] 3684 	mov	dptr,#___memcpy_PARM_3
      0010FF 74 04            [12] 3685 	mov	a,#0x04
      001101 F0               [24] 3686 	movx	@dptr,a
      001102 E4               [12] 3687 	clr	a
      001103 A3               [24] 3688 	inc	dptr
      001104 F0               [24] 3689 	movx	@dptr,a
      001105 90r00r1B         [24] 3690 	mov	dptr,#(_buffer + 0x001b)
      001108 F5 F0            [12] 3691 	mov	b,a
      00110A 12r00r00         [24] 3692 	lcall	___memcpy
                                   3693 ;	webserver.c:572: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      00110D 90r00r23         [24] 3694 	mov	dptr,#(_buffer + 0x0023)
      001110 E0               [24] 3695 	movx	a,@dptr
      001111 FE               [12] 3696 	mov	r6,a
      001112 7F 00            [12] 3697 	mov	r7,#0x00
      001114 90r00r24         [24] 3698 	mov	dptr,#(_buffer + 0x0024)
      001117 E0               [24] 3699 	movx	a,@dptr
      001118 7C 00            [12] 3700 	mov	r4,#0x00
      00111A 42 07            [12] 3701 	orl	ar7,a
      00111C EC               [12] 3702 	mov	a,r4
      00111D 42 06            [12] 3703 	orl	ar6,a
                                   3704 ;	webserver.c:574: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      00111F 90r00r25         [24] 3705 	mov	dptr,#(_buffer + 0x0025)
      001122 E0               [24] 3706 	movx	a,@dptr
      001123 FC               [12] 3707 	mov	r4,a
      001124 7D 00            [12] 3708 	mov	r5,#0x00
      001126 90r00r26         [24] 3709 	mov	dptr,#(_buffer + 0x0026)
      001129 E0               [24] 3710 	movx	a,@dptr
      00112A 7A 00            [12] 3711 	mov	r2,#0x00
      00112C 42 05            [12] 3712 	orl	ar5,a
      00112E EA               [12] 3713 	mov	a,r2
      00112F 42 04            [12] 3714 	orl	ar4,a
                                   3715 ;	webserver.c:576: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      001131 8C 03            [24] 3716 	mov	ar3,r4
      001133 90r00r23         [24] 3717 	mov	dptr,#(_buffer + 0x0023)
      001136 EB               [12] 3718 	mov	a,r3
      001137 F0               [24] 3719 	movx	@dptr,a
                                   3720 ;	webserver.c:577: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      001138 90r00r24         [24] 3721 	mov	dptr,#(_buffer + 0x0024)
      00113B ED               [12] 3722 	mov	a,r5
      00113C F0               [24] 3723 	movx	@dptr,a
                                   3724 ;	webserver.c:578: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      00113D 8E 05            [24] 3725 	mov	ar5,r6
      00113F 90r00r25         [24] 3726 	mov	dptr,#(_buffer + 0x0025)
      001142 ED               [12] 3727 	mov	a,r5
      001143 F0               [24] 3728 	movx	@dptr,a
                                   3729 ;	webserver.c:579: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      001144 90r00r26         [24] 3730 	mov	dptr,#(_buffer + 0x0026)
      001147 EF               [12] 3731 	mov	a,r7
      001148 F0               [24] 3732 	movx	@dptr,a
                                   3733 ;	webserver.c:582: uint32_t clientSeqNum = ((uint32_t)buffer[1 + TCP_SEQ_H_P] << 24)
      001149 90r00r27         [24] 3734 	mov	dptr,#(_buffer + 0x0027)
      00114C E0               [24] 3735 	movx	a,@dptr
      00114D FF               [12] 3736 	mov	r7,a
      00114E 7E 00            [12] 3737 	mov	r6,#0x00
      001150 7D 00            [12] 3738 	mov	r5,#0x00
      001152 8F 04            [24] 3739 	mov	ar4,r7
      001154 7F 00            [12] 3740 	mov	r7,#0x00
      001156 90r00r28         [24] 3741 	mov	dptr,#(_buffer + 0x0028)
      001159 E0               [24] 3742 	movx	a,@dptr
      00115A F8               [12] 3743 	mov	r0,a
      00115B 79 00            [12] 3744 	mov	r1,#0x00
      00115D 89 03            [24] 3745 	mov	ar3,r1
      00115F 88 02            [24] 3746 	mov	ar2,r0
      001161 E4               [12] 3747 	clr	a
      001162 42 07            [12] 3748 	orl	ar7,a
      001164 E9               [12] 3749 	mov	a,r1
      001165 42 06            [12] 3750 	orl	ar6,a
      001167 EA               [12] 3751 	mov	a,r2
      001168 42 05            [12] 3752 	orl	ar5,a
      00116A EB               [12] 3753 	mov	a,r3
      00116B 42 04            [12] 3754 	orl	ar4,a
      00116D 90r00r29         [24] 3755 	mov	dptr,#(_buffer + 0x0029)
      001170 E0               [24] 3756 	movx	a,@dptr
      001171 F8               [12] 3757 	mov	r0,a
      001172 79 00            [12] 3758 	mov	r1,#0x00
      001174 7A 00            [12] 3759 	mov	r2,#0x00
      001176 8A 03            [24] 3760 	mov	ar3,r2
      001178 89 02            [24] 3761 	mov	ar2,r1
      00117A 88 01            [24] 3762 	mov	ar1,r0
      00117C E4               [12] 3763 	clr	a
      00117D 42 07            [12] 3764 	orl	ar7,a
      00117F E9               [12] 3765 	mov	a,r1
      001180 42 06            [12] 3766 	orl	ar6,a
      001182 EA               [12] 3767 	mov	a,r2
      001183 42 05            [12] 3768 	orl	ar5,a
      001185 EB               [12] 3769 	mov	a,r3
      001186 42 04            [12] 3770 	orl	ar4,a
      001188 90r00r2A         [24] 3771 	mov	dptr,#(_buffer + 0x002a)
      00118B E0               [24] 3772 	movx	a,@dptr
      00118C F8               [12] 3773 	mov	r0,a
      00118D E4               [12] 3774 	clr	a
      00118E F9               [12] 3775 	mov	r1,a
      00118F FA               [12] 3776 	mov	r2,a
      001190 FB               [12] 3777 	mov	r3,a
      001191 E8               [12] 3778 	mov	a,r0
      001192 42 07            [12] 3779 	orl	ar7,a
      001194 E9               [12] 3780 	mov	a,r1
      001195 42 06            [12] 3781 	orl	ar6,a
      001197 EA               [12] 3782 	mov	a,r2
      001198 42 05            [12] 3783 	orl	ar5,a
      00119A EB               [12] 3784 	mov	a,r3
      00119B 42 04            [12] 3785 	orl	ar4,a
                                   3786 ;	webserver.c:587: uint32_t clientAckNumber = ((uint32_t)buffer[1 + TCP_ACK_H_P] << 24)
      00119D 90r00r2B         [24] 3787 	mov	dptr,#(_buffer + 0x002b)
      0011A0 E0               [24] 3788 	movx	a,@dptr
      0011A1 F8               [12] 3789 	mov	r0,a
      0011A2 79 00            [12] 3790 	mov	r1,#0x00
      0011A4 7B 00            [12] 3791 	mov	r3,#0x00
      0011A6 88*11            [24] 3792 	mov	(_makeTcpSynAck_sloc0_1_0 + 3),r0
      0011A8 8B*0E            [24] 3793 	mov	_makeTcpSynAck_sloc0_1_0,r3
      0011AA 8B*0F            [24] 3794 	mov	(_makeTcpSynAck_sloc0_1_0 + 1),r3
      0011AC 8B*10            [24] 3795 	mov	(_makeTcpSynAck_sloc0_1_0 + 2),r3
      0011AE 90r00r2C         [24] 3796 	mov	dptr,#(_buffer + 0x002c)
      0011B1 E0               [24] 3797 	movx	a,@dptr
      0011B2 F8               [12] 3798 	mov	r0,a
      0011B3 89 03            [24] 3799 	mov	ar3,r1
      0011B5 88 02            [24] 3800 	mov	ar2,r0
      0011B7 E4               [12] 3801 	clr	a
      0011B8 42*0E            [12] 3802 	orl	_makeTcpSynAck_sloc0_1_0,a
      0011BA E9               [12] 3803 	mov	a,r1
      0011BB 42*0F            [12] 3804 	orl	(_makeTcpSynAck_sloc0_1_0 + 1),a
      0011BD EA               [12] 3805 	mov	a,r2
      0011BE 42*10            [12] 3806 	orl	(_makeTcpSynAck_sloc0_1_0 + 2),a
      0011C0 EB               [12] 3807 	mov	a,r3
      0011C1 42*11            [12] 3808 	orl	(_makeTcpSynAck_sloc0_1_0 + 3),a
      0011C3 90r00r2D         [24] 3809 	mov	dptr,#(_buffer + 0x002d)
      0011C6 E0               [24] 3810 	movx	a,@dptr
      0011C7 F8               [12] 3811 	mov	r0,a
      0011C8 79 00            [12] 3812 	mov	r1,#0x00
      0011CA 7A 00            [12] 3813 	mov	r2,#0x00
      0011CC 8A 03            [24] 3814 	mov	ar3,r2
      0011CE 89 02            [24] 3815 	mov	ar2,r1
      0011D0 88 01            [24] 3816 	mov	ar1,r0
      0011D2 E4               [12] 3817 	clr	a
      0011D3 42*0E            [12] 3818 	orl	_makeTcpSynAck_sloc0_1_0,a
      0011D5 E9               [12] 3819 	mov	a,r1
      0011D6 42*0F            [12] 3820 	orl	(_makeTcpSynAck_sloc0_1_0 + 1),a
      0011D8 EA               [12] 3821 	mov	a,r2
      0011D9 42*10            [12] 3822 	orl	(_makeTcpSynAck_sloc0_1_0 + 2),a
      0011DB EB               [12] 3823 	mov	a,r3
      0011DC 42*11            [12] 3824 	orl	(_makeTcpSynAck_sloc0_1_0 + 3),a
      0011DE 90r00r2E         [24] 3825 	mov	dptr,#(_buffer + 0x002e)
      0011E1 E0               [24] 3826 	movx	a,@dptr
      0011E2 F8               [12] 3827 	mov	r0,a
      0011E3 E4               [12] 3828 	clr	a
      0011E4 F9               [12] 3829 	mov	r1,a
      0011E5 FA               [12] 3830 	mov	r2,a
      0011E6 FB               [12] 3831 	mov	r3,a
      0011E7 E5*0F            [12] 3832 	mov	a,(_makeTcpSynAck_sloc0_1_0 + 1)
      0011E9 42 01            [12] 3833 	orl	ar1,a
      0011EB E5*10            [12] 3834 	mov	a,(_makeTcpSynAck_sloc0_1_0 + 2)
      0011ED 42 02            [12] 3835 	orl	ar2,a
      0011EF E5*11            [12] 3836 	mov	a,(_makeTcpSynAck_sloc0_1_0 + 3)
      0011F1 42 03            [12] 3837 	orl	ar3,a
                                   3838 ;	webserver.c:593: uint32_t ackNum = clientSeqNum + 1;
      0011F3 74 01            [12] 3839 	mov	a,#0x01
      0011F5 2F               [12] 3840 	add	a, r7
      0011F6 F5*0E            [12] 3841 	mov	_makeTcpSynAck_sloc0_1_0,a
      0011F8 E4               [12] 3842 	clr	a
      0011F9 3E               [12] 3843 	addc	a, r6
      0011FA F5*0F            [12] 3844 	mov	(_makeTcpSynAck_sloc0_1_0 + 1),a
      0011FC E4               [12] 3845 	clr	a
      0011FD 3D               [12] 3846 	addc	a, r5
      0011FE F5*10            [12] 3847 	mov	(_makeTcpSynAck_sloc0_1_0 + 2),a
      001200 E4               [12] 3848 	clr	a
      001201 3C               [12] 3849 	addc	a, r4
      001202 F5*11            [12] 3850 	mov	(_makeTcpSynAck_sloc0_1_0 + 3),a
                                   3851 ;	webserver.c:595: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      001204 8B 07            [24] 3852 	mov	ar7,r3
      001206 90r00r27         [24] 3853 	mov	dptr,#(_buffer + 0x0027)
      001209 EF               [12] 3854 	mov	a,r7
      00120A F0               [24] 3855 	movx	@dptr,a
                                   3856 ;	webserver.c:596: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      00120B 8A 07            [24] 3857 	mov	ar7,r2
      00120D 90r00r28         [24] 3858 	mov	dptr,#(_buffer + 0x0028)
      001210 EF               [12] 3859 	mov	a,r7
      001211 F0               [24] 3860 	movx	@dptr,a
                                   3861 ;	webserver.c:597: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      001212 89 07            [24] 3862 	mov	ar7,r1
      001214 90r00r29         [24] 3863 	mov	dptr,#(_buffer + 0x0029)
      001217 EF               [12] 3864 	mov	a,r7
      001218 F0               [24] 3865 	movx	@dptr,a
                                   3866 ;	webserver.c:598: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      001219 90r00r2A         [24] 3867 	mov	dptr,#(_buffer + 0x002a)
      00121C E8               [12] 3868 	mov	a,r0
      00121D F0               [24] 3869 	movx	@dptr,a
                                   3870 ;	webserver.c:599: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      00121E AF*11            [24] 3871 	mov	r7,(_makeTcpSynAck_sloc0_1_0 + 3)
      001220 90r00r2B         [24] 3872 	mov	dptr,#(_buffer + 0x002b)
      001223 EF               [12] 3873 	mov	a,r7
      001224 F0               [24] 3874 	movx	@dptr,a
                                   3875 ;	webserver.c:600: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      001225 AF*10            [24] 3876 	mov	r7,(_makeTcpSynAck_sloc0_1_0 + 2)
      001227 90r00r2C         [24] 3877 	mov	dptr,#(_buffer + 0x002c)
      00122A EF               [12] 3878 	mov	a,r7
      00122B F0               [24] 3879 	movx	@dptr,a
                                   3880 ;	webserver.c:601: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      00122C AF*0F            [24] 3881 	mov	r7,(_makeTcpSynAck_sloc0_1_0 + 1)
      00122E 90r00r2D         [24] 3882 	mov	dptr,#(_buffer + 0x002d)
      001231 EF               [12] 3883 	mov	a,r7
      001232 F0               [24] 3884 	movx	@dptr,a
                                   3885 ;	webserver.c:602: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      001233 AF*0E            [24] 3886 	mov	r7,_makeTcpSynAck_sloc0_1_0
      001235 90r00r2E         [24] 3887 	mov	dptr,#(_buffer + 0x002e)
      001238 EF               [12] 3888 	mov	a,r7
      001239 F0               [24] 3889 	movx	@dptr,a
                                   3890 ;	webserver.c:606: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      00123A 90r00r11         [24] 3891 	mov	dptr,#(_buffer + 0x0011)
      00123D E4               [12] 3892 	clr	a
      00123E F0               [24] 3893 	movx	@dptr,a
                                   3894 ;	webserver.c:607: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      00123F 90r00r12         [24] 3895 	mov	dptr,#(_buffer + 0x0012)
      001242 74 28            [12] 3896 	mov	a,#0x28
      001244 F0               [24] 3897 	movx	@dptr,a
                                   3898 ;	webserver.c:610: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_SYN | TCP_FLAG_ACK;
      001245 90r00r30         [24] 3899 	mov	dptr,#(_buffer + 0x0030)
      001248 74 12            [12] 3900 	mov	a,#0x12
      00124A F0               [24] 3901 	movx	@dptr,a
                                   3902 ;	webserver.c:611: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      00124B 90r00r31         [24] 3903 	mov	dptr,#(_buffer + 0x0031)
      00124E 74 FF            [12] 3904 	mov	a,#0xff
      001250 F0               [24] 3905 	movx	@dptr,a
                                   3906 ;	webserver.c:612: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      001251 90r00r32         [24] 3907 	mov	dptr,#(_buffer + 0x0032)
      001254 F0               [24] 3908 	movx	@dptr,a
                                   3909 ;	webserver.c:613: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      001255 90r00r2F         [24] 3910 	mov	dptr,#(_buffer + 0x002f)
      001258 74 50            [12] 3911 	mov	a,#0x50
      00125A F0               [24] 3912 	movx	@dptr,a
                                   3913 ;	webserver.c:616: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      00125B 90r00r01         [24] 3914 	mov	dptr,#(_buffer + 0x0001)
      00125E 75 F0 00         [24] 3915 	mov	b, #0x00
      001261 12r03r97         [24] 3916 	lcall	_calculateIPChecksum
                                   3917 ;	webserver.c:617: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      001264 90r00r01         [24] 3918 	mov	dptr,#(_buffer + 0x0001)
      001267 75 F0 00         [24] 3919 	mov	b, #0x00
      00126A 12r05r01         [24] 3920 	lcall	_calculateTcpChecksum
                                   3921 ;	webserver.c:621: transmit_tcp_packet(buffer, 1 + 54);
      00126D 90r00r00         [24] 3922 	mov	dptr,#_transmit_tcp_packet_PARM_2
      001270 74 37            [12] 3923 	mov	a,#0x37
      001272 F0               [24] 3924 	movx	@dptr,a
      001273 E4               [12] 3925 	clr	a
      001274 A3               [24] 3926 	inc	dptr
      001275 F0               [24] 3927 	movx	@dptr,a
      001276 90r00r00         [24] 3928 	mov	dptr,#_buffer
      001279 F5 F0            [12] 3929 	mov	b,a
      00127B 12r00r00         [24] 3930 	lcall	_transmit_tcp_packet
                                   3931 ;	webserver.c:624: connectionState = SYN_RECEIVED;
      00127E 90r00r00         [24] 3932 	mov	dptr,#_connectionState
      001281 74 01            [12] 3933 	mov	a,#0x01
      001283 F0               [24] 3934 	movx	@dptr,a
                                   3935 ;	webserver.c:625: }
      001284 22               [24] 3936 	ret
                                   3937 ;------------------------------------------------------------
                                   3938 ;Allocation info for local variables in function 'makeHttpResponse'
                                   3939 ;------------------------------------------------------------
                                   3940 ;sloc0                     Allocated with name '_makeHttpResponse_sloc0_1_0'
                                   3941 ;sloc1                     Allocated with name '_makeHttpResponse_sloc1_1_0'
                                   3942 ;sloc2                     Allocated with name '_makeHttpResponse_sloc2_1_0'
                                   3943 ;sloc3                     Allocated with name '_makeHttpResponse_sloc3_1_0'
                                   3944 ;sloc4                     Allocated with name '_makeHttpResponse_sloc4_1_0'
                                   3945 ;sloc5                     Allocated with name '_makeHttpResponse_sloc5_1_0'
                                   3946 ;device_mac                Allocated with name '_makeHttpResponse_device_mac_10000_140'
                                   3947 ;target_mac                Allocated with name '_makeHttpResponse_target_mac_10000_140'
                                   3948 ;device_ip                 Allocated with name '_makeHttpResponse_device_ip_10000_140'
                                   3949 ;target_ip                 Allocated with name '_makeHttpResponse_target_ip_10000_140'
                                   3950 ;ethernetHeaderSize        Allocated with name '_makeHttpResponse_ethernetHeaderSize_10001_141'
                                   3951 ;ipHeaderSize              Allocated with name '_makeHttpResponse_ipHeaderSize_10001_141'
                                   3952 ;tcpHeaderSize             Allocated with name '_makeHttpResponse_tcpHeaderSize_10001_141'
                                   3953 ;headerSize                Allocated with name '_makeHttpResponse_headerSize_10001_141'
                                   3954 ;httpResponse              Allocated with name '_makeHttpResponse_httpResponse_10001_141'
                                   3955 ;responseLen               Allocated with name '_makeHttpResponse_responseLen_10001_141'
                                   3956 ;totalLength               Allocated with name '_makeHttpResponse_totalLength_10002_142'
                                   3957 ;ipHeader                  Allocated with name '_makeHttpResponse_ipHeader_10002_142'
                                   3958 ;srcPort                   Allocated with name '_makeHttpResponse_srcPort_10003_143'
                                   3959 ;dstPort                   Allocated with name '_makeHttpResponse_dstPort_10003_143'
                                   3960 ;seqNum                    Allocated with name '_makeHttpResponse_seqNum_10003_143'
                                   3961 ;seqPart1                  Allocated with name '_makeHttpResponse_seqPart1_10003_143'
                                   3962 ;seqPart2                  Allocated with name '_makeHttpResponse_seqPart2_10003_143'
                                   3963 ;seqPart3                  Allocated with name '_makeHttpResponse_seqPart3_10003_143'
                                   3964 ;seqPart4                  Allocated with name '_makeHttpResponse_seqPart4_10003_143'
                                   3965 ;ackNum                    Allocated with name '_makeHttpResponse_ackNum_10003_143'
                                   3966 ;tcpHeader                 Allocated with name '_makeHttpResponse_tcpHeader_10004_144'
                                   3967 ;------------------------------------------------------------
                                   3968 ;	webserver.c:640: void makeHttpResponse(void) 
                                   3969 ;	-----------------------------------------
                                   3970 ;	 function makeHttpResponse
                                   3971 ;	-----------------------------------------
      001285                       3972 _makeHttpResponse:
                                   3973 ;	webserver.c:642: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      001285 90r06r83         [24] 3974 	mov	dptr,#_makeHttpResponse_device_mac_10000_140
      001288 74 02            [12] 3975 	mov	a,#0x02
      00128A F0               [24] 3976 	movx	@dptr,a
      00128B 90r06r84         [24] 3977 	mov	dptr,#(_makeHttpResponse_device_mac_10000_140 + 0x0001)
      00128E 23               [12] 3978 	rl	a
      00128F F0               [24] 3979 	movx	@dptr,a
      001290 90r06r85         [24] 3980 	mov	dptr,#(_makeHttpResponse_device_mac_10000_140 + 0x0002)
      001293 74 A3            [12] 3981 	mov	a,#0xa3
      001295 F0               [24] 3982 	movx	@dptr,a
      001296 90r06r86         [24] 3983 	mov	dptr,#(_makeHttpResponse_device_mac_10000_140 + 0x0003)
      001299 74 3C            [12] 3984 	mov	a,#0x3c
      00129B F0               [24] 3985 	movx	@dptr,a
      00129C 90r06r87         [24] 3986 	mov	dptr,#(_makeHttpResponse_device_mac_10000_140 + 0x0004)
      00129F 74 4D            [12] 3987 	mov	a,#0x4d
      0012A1 F0               [24] 3988 	movx	@dptr,a
      0012A2 90r06r88         [24] 3989 	mov	dptr,#(_makeHttpResponse_device_mac_10000_140 + 0x0005)
      0012A5 74 50            [12] 3990 	mov	a,#0x50
      0012A7 F0               [24] 3991 	movx	@dptr,a
                                   3992 ;	webserver.c:643: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      0012A8 90r06r89         [24] 3993 	mov	dptr,#_makeHttpResponse_target_mac_10000_140
      0012AB 74 FF            [12] 3994 	mov	a,#0xff
      0012AD F0               [24] 3995 	movx	@dptr,a
      0012AE 90r06r8A         [24] 3996 	mov	dptr,#(_makeHttpResponse_target_mac_10000_140 + 0x0001)
      0012B1 F0               [24] 3997 	movx	@dptr,a
      0012B2 90r06r8B         [24] 3998 	mov	dptr,#(_makeHttpResponse_target_mac_10000_140 + 0x0002)
      0012B5 F0               [24] 3999 	movx	@dptr,a
      0012B6 90r06r8C         [24] 4000 	mov	dptr,#(_makeHttpResponse_target_mac_10000_140 + 0x0003)
      0012B9 F0               [24] 4001 	movx	@dptr,a
      0012BA 90r06r8D         [24] 4002 	mov	dptr,#(_makeHttpResponse_target_mac_10000_140 + 0x0004)
      0012BD F0               [24] 4003 	movx	@dptr,a
      0012BE 90r06r8E         [24] 4004 	mov	dptr,#(_makeHttpResponse_target_mac_10000_140 + 0x0005)
      0012C1 F0               [24] 4005 	movx	@dptr,a
                                   4006 ;	webserver.c:644: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      0012C2 90r06r8F         [24] 4007 	mov	dptr,#_makeHttpResponse_device_ip_10000_140
      0012C5 74 C0            [12] 4008 	mov	a,#0xc0
      0012C7 F0               [24] 4009 	movx	@dptr,a
      0012C8 90r06r90         [24] 4010 	mov	dptr,#(_makeHttpResponse_device_ip_10000_140 + 0x0001)
      0012CB 74 A8            [12] 4011 	mov	a,#0xa8
      0012CD F0               [24] 4012 	movx	@dptr,a
      0012CE 90r06r91         [24] 4013 	mov	dptr,#(_makeHttpResponse_device_ip_10000_140 + 0x0002)
      0012D1 74 01            [12] 4014 	mov	a,#0x01
      0012D3 F0               [24] 4015 	movx	@dptr,a
      0012D4 90r06r92         [24] 4016 	mov	dptr,#(_makeHttpResponse_device_ip_10000_140 + 0x0003)
      0012D7 74 64            [12] 4017 	mov	a,#0x64
      0012D9 F0               [24] 4018 	movx	@dptr,a
                                   4019 ;	webserver.c:645: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      0012DA 90r06r93         [24] 4020 	mov	dptr,#_makeHttpResponse_target_ip_10000_140
      0012DD 74 C0            [12] 4021 	mov	a,#0xc0
      0012DF F0               [24] 4022 	movx	@dptr,a
      0012E0 90r06r94         [24] 4023 	mov	dptr,#(_makeHttpResponse_target_ip_10000_140 + 0x0001)
      0012E3 74 A8            [12] 4024 	mov	a,#0xa8
      0012E5 F0               [24] 4025 	movx	@dptr,a
      0012E6 90r06r95         [24] 4026 	mov	dptr,#(_makeHttpResponse_target_ip_10000_140 + 0x0002)
      0012E9 74 01            [12] 4027 	mov	a,#0x01
      0012EB F0               [24] 4028 	movx	@dptr,a
      0012EC 90r06r96         [24] 4029 	mov	dptr,#(_makeHttpResponse_target_ip_10000_140 + 0x0003)
      0012EF F0               [24] 4030 	movx	@dptr,a
                                   4031 ;	webserver.c:647: printf("httpresponse\n\r");
      0012F0 74r15            [12] 4032 	mov	a,#___str_6
      0012F2 C0 E0            [24] 4033 	push	acc
      0012F4 74s06            [12] 4034 	mov	a,#(___str_6 >> 8)
      0012F6 C0 E0            [24] 4035 	push	acc
      0012F8 74 80            [12] 4036 	mov	a,#0x80
      0012FA C0 E0            [24] 4037 	push	acc
      0012FC 12r00r00         [24] 4038 	lcall	_printf
      0012FF 15 81            [12] 4039 	dec	sp
      001301 15 81            [12] 4040 	dec	sp
      001303 15 81            [12] 4041 	dec	sp
                                   4042 ;	webserver.c:657: const char *httpResponse = "HTTP/1.1 200 OK\r\n"
                                   4043 ;	webserver.c:678: uint16_t responseLen = strlen(httpResponse);
      001305 90r03rBB         [24] 4044 	mov	dptr,#___str_5
      001308 75 F0 80         [24] 4045 	mov	b, #0x80
      00130B 12r00r00         [24] 4046 	lcall	_strlen
      00130E AE 82            [24] 4047 	mov	r6, dpl
      001310 AF 83            [24] 4048 	mov	r7, dph
                                   4049 ;	webserver.c:681: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      001312 90r00r00         [24] 4050 	mov	dptr,#_memmove_PARM_2
      001315 74r00            [12] 4051 	mov	a,#_buffer
      001317 F0               [24] 4052 	movx	@dptr,a
      001318 74s00            [12] 4053 	mov	a,#(_buffer >> 8)
      00131A A3               [24] 4054 	inc	dptr
      00131B F0               [24] 4055 	movx	@dptr,a
      00131C E4               [12] 4056 	clr	a
      00131D A3               [24] 4057 	inc	dptr
      00131E F0               [24] 4058 	movx	@dptr,a
      00131F 90r00r00         [24] 4059 	mov	dptr,#_memmove_PARM_3
      001322 74 36            [12] 4060 	mov	a,#0x36
      001324 F0               [24] 4061 	movx	@dptr,a
      001325 E4               [12] 4062 	clr	a
      001326 A3               [24] 4063 	inc	dptr
      001327 F0               [24] 4064 	movx	@dptr,a
      001328 90r00r01         [24] 4065 	mov	dptr,#(_buffer + 0x0001)
      00132B F5 F0            [12] 4066 	mov	b,a
      00132D C0 07            [24] 4067 	push	ar7
      00132F C0 06            [24] 4068 	push	ar6
      001331 12r00r00         [24] 4069 	lcall	_memmove
                                   4070 ;	webserver.c:682: buffer[0] = 0x0E;
      001334 90r00r00         [24] 4071 	mov	dptr,#_buffer
      001337 74 0E            [12] 4072 	mov	a,#0x0e
      001339 F0               [24] 4073 	movx	@dptr,a
                                   4074 ;	webserver.c:685: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6); // Swap MACs
      00133A 90r00r00         [24] 4075 	mov	dptr,#___memcpy_PARM_2
      00133D 74r07            [12] 4076 	mov	a,#(_buffer + 0x0007)
      00133F F0               [24] 4077 	movx	@dptr,a
      001340 74s00            [12] 4078 	mov	a,#((_buffer + 0x0007) >> 8)
      001342 A3               [24] 4079 	inc	dptr
      001343 F0               [24] 4080 	movx	@dptr,a
      001344 E4               [12] 4081 	clr	a
      001345 A3               [24] 4082 	inc	dptr
      001346 F0               [24] 4083 	movx	@dptr,a
      001347 90r00r00         [24] 4084 	mov	dptr,#___memcpy_PARM_3
      00134A 74 06            [12] 4085 	mov	a,#0x06
      00134C F0               [24] 4086 	movx	@dptr,a
      00134D E4               [12] 4087 	clr	a
      00134E A3               [24] 4088 	inc	dptr
      00134F F0               [24] 4089 	movx	@dptr,a
      001350 90r00r01         [24] 4090 	mov	dptr,#(_buffer + 0x0001)
      001353 F5 F0            [12] 4091 	mov	b,a
      001355 12r00r00         [24] 4092 	lcall	___memcpy
      001358 D0 06            [24] 4093 	pop	ar6
      00135A D0 07            [24] 4094 	pop	ar7
                                   4095 ;	webserver.c:686: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);           // Set device MAC
      00135C 90r00r00         [24] 4096 	mov	dptr,#___memcpy_PARM_2
      00135F 74r83            [12] 4097 	mov	a,#_makeHttpResponse_device_mac_10000_140
      001361 F0               [24] 4098 	movx	@dptr,a
      001362 74s06            [12] 4099 	mov	a,#(_makeHttpResponse_device_mac_10000_140 >> 8)
      001364 A3               [24] 4100 	inc	dptr
      001365 F0               [24] 4101 	movx	@dptr,a
      001366 E4               [12] 4102 	clr	a
      001367 A3               [24] 4103 	inc	dptr
      001368 F0               [24] 4104 	movx	@dptr,a
      001369 90r00r00         [24] 4105 	mov	dptr,#___memcpy_PARM_3
      00136C 74 06            [12] 4106 	mov	a,#0x06
      00136E F0               [24] 4107 	movx	@dptr,a
      00136F E4               [12] 4108 	clr	a
      001370 A3               [24] 4109 	inc	dptr
      001371 F0               [24] 4110 	movx	@dptr,a
      001372 90r00r07         [24] 4111 	mov	dptr,#(_buffer + 0x0007)
      001375 F5 F0            [12] 4112 	mov	b,a
      001377 C0 07            [24] 4113 	push	ar7
      001379 C0 06            [24] 4114 	push	ar6
      00137B 12r00r00         [24] 4115 	lcall	___memcpy
      00137E D0 06            [24] 4116 	pop	ar6
      001380 D0 07            [24] 4117 	pop	ar7
                                   4118 ;	webserver.c:687: buffer[1 + ETH_TYPE_H_P] = (ETH_TYPE_IP >> 8) & 0xFF; // Set EtherType to IPv4
      001382 90r00r0D         [24] 4119 	mov	dptr,#(_buffer + 0x000d)
      001385 74 08            [12] 4120 	mov	a,#0x08
      001387 F0               [24] 4121 	movx	@dptr,a
                                   4122 ;	webserver.c:688: buffer[1 + ETH_TYPE_L_P] = ETH_TYPE_IP & 0xFF;
      001388 90r00r0E         [24] 4123 	mov	dptr,#(_buffer + 0x000e)
      00138B E4               [12] 4124 	clr	a
      00138C F0               [24] 4125 	movx	@dptr,a
                                   4126 ;	webserver.c:691: uint16_t totalLength = ipHeaderSize + tcpHeaderSize + responseLen;
      00138D 74 28            [12] 4127 	mov	a,#0x28
      00138F 2E               [12] 4128 	add	a, r6
      001390 FC               [12] 4129 	mov	r4,a
      001391 E4               [12] 4130 	clr	a
      001392 3F               [12] 4131 	addc	a, r7
      001393 FD               [12] 4132 	mov	r5,a
                                   4133 ;	webserver.c:692: uint8_t *ipHeader = &buffer[1 + ethernetHeaderSize];
                                   4134 ;	webserver.c:693: ipHeader[0] = 0x45; // Version and header length
      001394 90r00r0F         [24] 4135 	mov	dptr,#(_buffer + 0x000f)
      001397 74 45            [12] 4136 	mov	a,#0x45
      001399 F0               [24] 4137 	movx	@dptr,a
                                   4138 ;	webserver.c:694: ipHeader[1] = 0x00; // Differentiated services
      00139A 90r00r10         [24] 4139 	mov	dptr,#(_buffer + 0x0010)
      00139D E4               [12] 4140 	clr	a
      00139E F5 F0            [12] 4141 	mov	b,a
      0013A0 12r00r00         [24] 4142 	lcall	__gptrput
                                   4143 ;	webserver.c:695: ipHeader[2] = (totalLength >> 8) & 0xFF; // Total length high byte
      0013A3 8D 03            [24] 4144 	mov	ar3,r5
      0013A5 90r00r11         [24] 4145 	mov	dptr,#(_buffer + 0x0011)
      0013A8 F5 F0            [12] 4146 	mov	b,a
      0013AA EB               [12] 4147 	mov	a,r3
      0013AB 12r00r00         [24] 4148 	lcall	__gptrput
                                   4149 ;	webserver.c:696: ipHeader[3] = totalLength & 0xFF;        // Total length low byte
      0013AE 90r00r12         [24] 4150 	mov	dptr,#(_buffer + 0x0012)
      0013B1 EC               [12] 4151 	mov	a,r4
      0013B2 12r00r00         [24] 4152 	lcall	__gptrput
                                   4153 ;	webserver.c:697: ipHeader[4] = 0x00; // Identification
      0013B5 90r00r13         [24] 4154 	mov	dptr,#(_buffer + 0x0013)
      0013B8 E4               [12] 4155 	clr	a
      0013B9 12r00r00         [24] 4156 	lcall	__gptrput
                                   4157 ;	webserver.c:698: ipHeader[5] = 0x00;
      0013BC 90r00r14         [24] 4158 	mov	dptr,#(_buffer + 0x0014)
      0013BF F5 F0            [12] 4159 	mov	b,a
      0013C1 12r00r00         [24] 4160 	lcall	__gptrput
                                   4161 ;	webserver.c:699: ipHeader[6] = 0x40; // Flags and Fragment Offset (Don't Fragment)
      0013C4 90r00r15         [24] 4162 	mov	dptr,#(_buffer + 0x0015)
      0013C7 F5 F0            [12] 4163 	mov	b,a
      0013C9 74 40            [12] 4164 	mov	a,#0x40
      0013CB 12r00r00         [24] 4165 	lcall	__gptrput
                                   4166 ;	webserver.c:700: ipHeader[7] = 0x00;
      0013CE 90r00r16         [24] 4167 	mov	dptr,#(_buffer + 0x0016)
      0013D1 E4               [12] 4168 	clr	a
      0013D2 12r00r00         [24] 4169 	lcall	__gptrput
                                   4170 ;	webserver.c:701: ipHeader[8] = 64;   // Time to Live
      0013D5 90r00r17         [24] 4171 	mov	dptr,#(_buffer + 0x0017)
      0013D8 F5 F0            [12] 4172 	mov	b,a
      0013DA 74 40            [12] 4173 	mov	a,#0x40
      0013DC 12r00r00         [24] 4174 	lcall	__gptrput
                                   4175 ;	webserver.c:702: ipHeader[9] = IP_PROTO_TCP; // Protocol: TCP
      0013DF 90r00r18         [24] 4176 	mov	dptr,#(_buffer + 0x0018)
      0013E2 74 06            [12] 4177 	mov	a,#0x06
      0013E4 12r00r00         [24] 4178 	lcall	__gptrput
                                   4179 ;	webserver.c:703: ipHeader[10] = 0x00; // Header checksum (reset for calculation)
      0013E7 90r00r19         [24] 4180 	mov	dptr,#(_buffer + 0x0019)
      0013EA E4               [12] 4181 	clr	a
      0013EB 12r00r00         [24] 4182 	lcall	__gptrput
                                   4183 ;	webserver.c:704: ipHeader[11] = 0x00;
      0013EE 90r00r1A         [24] 4184 	mov	dptr,#(_buffer + 0x001a)
      0013F1 F5 F0            [12] 4185 	mov	b,a
      0013F3 12r00r00         [24] 4186 	lcall	__gptrput
                                   4187 ;	webserver.c:705: memcpy(&ipHeader[12], device_ip, 4); // Source IP
      0013F6 90r00r00         [24] 4188 	mov	dptr,#___memcpy_PARM_2
      0013F9 74r8F            [12] 4189 	mov	a,#_makeHttpResponse_device_ip_10000_140
      0013FB F0               [24] 4190 	movx	@dptr,a
      0013FC 74s06            [12] 4191 	mov	a,#(_makeHttpResponse_device_ip_10000_140 >> 8)
      0013FE A3               [24] 4192 	inc	dptr
      0013FF F0               [24] 4193 	movx	@dptr,a
      001400 E4               [12] 4194 	clr	a
      001401 A3               [24] 4195 	inc	dptr
      001402 F0               [24] 4196 	movx	@dptr,a
      001403 90r00r00         [24] 4197 	mov	dptr,#___memcpy_PARM_3
      001406 74 04            [12] 4198 	mov	a,#0x04
      001408 F0               [24] 4199 	movx	@dptr,a
      001409 E4               [12] 4200 	clr	a
      00140A A3               [24] 4201 	inc	dptr
      00140B F0               [24] 4202 	movx	@dptr,a
      00140C 90r00r1B         [24] 4203 	mov	dptr,#(_buffer + 0x001b)
      00140F F5 F0            [12] 4204 	mov	b,a
      001411 C0 07            [24] 4205 	push	ar7
      001413 C0 06            [24] 4206 	push	ar6
      001415 12r00r00         [24] 4207 	lcall	___memcpy
      001418 D0 06            [24] 4208 	pop	ar6
      00141A D0 07            [24] 4209 	pop	ar7
                                   4210 ;	webserver.c:707: memcpy(&ipHeader[16], target_ip, 4); // Destination IP
      00141C 90r00r00         [24] 4211 	mov	dptr,#___memcpy_PARM_2
      00141F 74r93            [12] 4212 	mov	a,#_makeHttpResponse_target_ip_10000_140
      001421 F0               [24] 4213 	movx	@dptr,a
      001422 74s06            [12] 4214 	mov	a,#(_makeHttpResponse_target_ip_10000_140 >> 8)
      001424 A3               [24] 4215 	inc	dptr
      001425 F0               [24] 4216 	movx	@dptr,a
      001426 E4               [12] 4217 	clr	a
      001427 A3               [24] 4218 	inc	dptr
      001428 F0               [24] 4219 	movx	@dptr,a
      001429 90r00r00         [24] 4220 	mov	dptr,#___memcpy_PARM_3
      00142C 74 04            [12] 4221 	mov	a,#0x04
      00142E F0               [24] 4222 	movx	@dptr,a
      00142F E4               [12] 4223 	clr	a
      001430 A3               [24] 4224 	inc	dptr
      001431 F0               [24] 4225 	movx	@dptr,a
      001432 90r00r1F         [24] 4226 	mov	dptr,#(_buffer + 0x001f)
      001435 F5 F0            [12] 4227 	mov	b,a
      001437 C0 07            [24] 4228 	push	ar7
      001439 C0 06            [24] 4229 	push	ar6
      00143B 12r00r00         [24] 4230 	lcall	___memcpy
                                   4231 ;	webserver.c:708: calculateIPChecksum(ipHeader);
      00143E 90r00r0F         [24] 4232 	mov	dptr,#(_buffer + 0x000f)
      001441 75 F0 00         [24] 4233 	mov	b, #0x00
      001444 12r03r97         [24] 4234 	lcall	_calculateIPChecksum
      001447 D0 06            [24] 4235 	pop	ar6
      001449 D0 07            [24] 4236 	pop	ar7
                                   4237 ;	webserver.c:711: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      00144B 90r00r23         [24] 4238 	mov	dptr,#(_buffer + 0x0023)
      00144E E0               [24] 4239 	movx	a,@dptr
      00144F FC               [12] 4240 	mov	r4,a
      001450 7D 00            [12] 4241 	mov	r5,#0x00
      001452 90r00r24         [24] 4242 	mov	dptr,#(_buffer + 0x0024)
      001455 E0               [24] 4243 	movx	a,@dptr
      001456 7A 00            [12] 4244 	mov	r2,#0x00
      001458 42 05            [12] 4245 	orl	ar5,a
      00145A EA               [12] 4246 	mov	a,r2
      00145B 42 04            [12] 4247 	orl	ar4,a
      00145D 8D*24            [24] 4248 	mov	_makeHttpResponse_sloc5_1_0,r5
      00145F 8C*25            [24] 4249 	mov	(_makeHttpResponse_sloc5_1_0 + 1),r4
                                   4250 ;	webserver.c:713: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      001461 90r00r25         [24] 4251 	mov	dptr,#(_buffer + 0x0025)
      001464 E0               [24] 4252 	movx	a,@dptr
      001465 FA               [12] 4253 	mov	r2,a
      001466 7B 00            [12] 4254 	mov	r3,#0x00
      001468 90r00r26         [24] 4255 	mov	dptr,#(_buffer + 0x0026)
      00146B E0               [24] 4256 	movx	a,@dptr
      00146C 79 00            [12] 4257 	mov	r1,#0x00
      00146E 42 03            [12] 4258 	orl	ar3,a
      001470 E9               [12] 4259 	mov	a,r1
      001471 42 02            [12] 4260 	orl	ar2,a
      001473 8B*12            [24] 4261 	mov	_makeHttpResponse_sloc0_1_0,r3
      001475 8A*13            [24] 4262 	mov	(_makeHttpResponse_sloc0_1_0 + 1),r2
                                   4263 ;	webserver.c:719: seqPart1 = (uint32_t)buffer[1 + TCP_SEQ_H_P] << 24;     // Most significant byte
      001477 90r00r27         [24] 4264 	mov	dptr,#(_buffer + 0x0027)
      00147A E0               [24] 4265 	movx	a,@dptr
      00147B F8               [12] 4266 	mov	r0,a
      00147C 79 00            [12] 4267 	mov	r1,#0x00
      00147E 7A 00            [12] 4268 	mov	r2,#0x00
      001480 7B 00            [12] 4269 	mov	r3,#0x00
      001482 88*17            [24] 4270 	mov	(_makeHttpResponse_sloc1_1_0 + 3),r0
      001484 8B*14            [24] 4271 	mov	_makeHttpResponse_sloc1_1_0,r3
      001486 8B*15            [24] 4272 	mov	(_makeHttpResponse_sloc1_1_0 + 1),r3
      001488 8B*16            [24] 4273 	mov	(_makeHttpResponse_sloc1_1_0 + 2),r3
                                   4274 ;	webserver.c:720: seqPart2 = (uint32_t)buffer[1 + TCP_SEQ_H_P + 1] << 16; // Second byte
      00148A 90r00r28         [24] 4275 	mov	dptr,#(_buffer + 0x0028)
      00148D E0               [24] 4276 	movx	a,@dptr
      00148E F8               [12] 4277 	mov	r0,a
      00148F 7B 00            [12] 4278 	mov	r3,#0x00
      001491 89*1B            [24] 4279 	mov	(_makeHttpResponse_sloc2_1_0 + 3),r1
      001493 88*1A            [24] 4280 	mov	(_makeHttpResponse_sloc2_1_0 + 2),r0
      001495 8B*18            [24] 4281 	mov	_makeHttpResponse_sloc2_1_0,r3
      001497 8B*19            [24] 4282 	mov	(_makeHttpResponse_sloc2_1_0 + 1),r3
                                   4283 ;	webserver.c:721: seqPart3 = (uint32_t)buffer[1 + TCP_SEQ_H_P + 2] << 8;  // Third byte
      001499 90r00r29         [24] 4284 	mov	dptr,#(_buffer + 0x0029)
      00149C E0               [24] 4285 	movx	a,@dptr
      00149D F8               [12] 4286 	mov	r0,a
      00149E 7B 00            [12] 4287 	mov	r3,#0x00
      0014A0 8A*1F            [24] 4288 	mov	(_makeHttpResponse_sloc3_1_0 + 3),r2
      0014A2 89*1E            [24] 4289 	mov	(_makeHttpResponse_sloc3_1_0 + 2),r1
      0014A4 88*1D            [24] 4290 	mov	(_makeHttpResponse_sloc3_1_0 + 1),r0
      0014A6 8B*1C            [24] 4291 	mov	_makeHttpResponse_sloc3_1_0,r3
                                   4292 ;	webserver.c:722: seqPart4 = (uint32_t)buffer[1 + TCP_SEQ_H_P + 3];       // Least significant byte
      0014A8 90r00r2A         [24] 4293 	mov	dptr,#(_buffer + 0x002a)
      0014AB E0               [24] 4294 	movx	a,@dptr
      0014AC FB               [12] 4295 	mov	r3,a
      0014AD 8B*20            [24] 4296 	mov	_makeHttpResponse_sloc4_1_0,r3
      0014AF 8A*21            [24] 4297 	mov	(_makeHttpResponse_sloc4_1_0 + 1),r2
      0014B1 8A*22            [24] 4298 	mov	(_makeHttpResponse_sloc4_1_0 + 2),r2
      0014B3 8A*23            [24] 4299 	mov	(_makeHttpResponse_sloc4_1_0 + 3),r2
                                   4300 ;	webserver.c:725: ackNum = seqPart1 | seqPart2 | seqPart3 | seqPart4;
      0014B5 A8*14            [24] 4301 	mov	r0,_makeHttpResponse_sloc1_1_0
      0014B7 A9*15            [24] 4302 	mov	r1,(_makeHttpResponse_sloc1_1_0 + 1)
      0014B9 E5*1A            [12] 4303 	mov	a,(_makeHttpResponse_sloc2_1_0 + 2)
      0014BB 45*16            [12] 4304 	orl	a,(_makeHttpResponse_sloc1_1_0 + 2)
      0014BD FA               [12] 4305 	mov	r2,a
      0014BE AB*17            [24] 4306 	mov	r3,(_makeHttpResponse_sloc1_1_0 + 3)
      0014C0 E5*1D            [12] 4307 	mov	a,(_makeHttpResponse_sloc3_1_0 + 1)
      0014C2 42 01            [12] 4308 	orl	ar1,a
      0014C4 E5*20            [12] 4309 	mov	a,_makeHttpResponse_sloc4_1_0
      0014C6 42 00            [12] 4310 	orl	ar0,a
                                   4311 ;	webserver.c:728: ackNum += 1;
      0014C8 08               [12] 4312 	inc	r0
      0014C9 B8 00 09         [24] 4313 	cjne	r0,#0x00,00103$
      0014CC 09               [12] 4314 	inc	r1
      0014CD B9 00 05         [24] 4315 	cjne	r1,#0x00,00103$
      0014D0 0A               [12] 4316 	inc	r2
      0014D1 BA 00 01         [24] 4317 	cjne	r2,#0x00,00103$
      0014D4 0B               [12] 4318 	inc	r3
      0014D5                       4319 00103$:
                                   4320 ;	webserver.c:730: uint8_t *tcpHeader = &buffer[1 + ethernetHeaderSize + ipHeaderSize];
                                   4321 ;	webserver.c:731: tcpHeader[0] = (dstPort >> 8) & 0xFF; // Source port high byte
      0014D5 AD*13            [24] 4322 	mov	r5,(_makeHttpResponse_sloc0_1_0 + 1)
      0014D7 90r00r23         [24] 4323 	mov	dptr,#(_buffer + 0x0023)
      0014DA ED               [12] 4324 	mov	a,r5
      0014DB F0               [24] 4325 	movx	@dptr,a
                                   4326 ;	webserver.c:732: tcpHeader[1] = dstPort & 0xFF;        // Source port low byte
      0014DC AD*12            [24] 4327 	mov	r5,_makeHttpResponse_sloc0_1_0
      0014DE 90r00r24         [24] 4328 	mov	dptr,#(_buffer + 0x0024)
      0014E1 ED               [12] 4329 	mov	a,r5
      0014E2 F0               [24] 4330 	movx	@dptr,a
                                   4331 ;	webserver.c:733: tcpHeader[2] = (srcPort >> 8) & 0xFF; // Destination port high byte
      0014E3 AD*25            [24] 4332 	mov	r5,(_makeHttpResponse_sloc5_1_0 + 1)
      0014E5 90r00r25         [24] 4333 	mov	dptr,#(_buffer + 0x0025)
      0014E8 ED               [12] 4334 	mov	a,r5
      0014E9 F0               [24] 4335 	movx	@dptr,a
                                   4336 ;	webserver.c:734: tcpHeader[3] = srcPort & 0xFF;        // Destination port low byte
      0014EA AD*24            [24] 4337 	mov	r5,_makeHttpResponse_sloc5_1_0
      0014EC 90r00r26         [24] 4338 	mov	dptr,#(_buffer + 0x0026)
      0014EF ED               [12] 4339 	mov	a,r5
      0014F0 F0               [24] 4340 	movx	@dptr,a
                                   4341 ;	webserver.c:735: tcpHeader[4] = (seqNum >> 24) & 0xFF; // Sequence number
      0014F1 90r00r27         [24] 4342 	mov	dptr,#(_buffer + 0x0027)
      0014F4 E4               [12] 4343 	clr	a
      0014F5 F0               [24] 4344 	movx	@dptr,a
                                   4345 ;	webserver.c:736: tcpHeader[5] = (seqNum >> 16) & 0xFF;
      0014F6 90r00r28         [24] 4346 	mov	dptr,#(_buffer + 0x0028)
      0014F9 F0               [24] 4347 	movx	@dptr,a
                                   4348 ;	webserver.c:737: tcpHeader[6] = (seqNum >> 8) & 0xFF;
      0014FA 90r00r29         [24] 4349 	mov	dptr,#(_buffer + 0x0029)
      0014FD 74 03            [12] 4350 	mov	a,#0x03
      0014FF F0               [24] 4351 	movx	@dptr,a
                                   4352 ;	webserver.c:738: tcpHeader[7] = seqNum & 0xFF;
      001500 90r00r2A         [24] 4353 	mov	dptr,#(_buffer + 0x002a)
      001503 74 E8            [12] 4354 	mov	a,#0xe8
      001505 F0               [24] 4355 	movx	@dptr,a
                                   4356 ;	webserver.c:739: tcpHeader[8] = (ackNum >> 24) & 0xFF; // Acknowledgment number
      001506 8B 05            [24] 4357 	mov	ar5,r3
      001508 90r00r2B         [24] 4358 	mov	dptr,#(_buffer + 0x002b)
      00150B ED               [12] 4359 	mov	a,r5
      00150C F0               [24] 4360 	movx	@dptr,a
                                   4361 ;	webserver.c:740: tcpHeader[9] = (ackNum >> 16) & 0xFF;
      00150D 8A 05            [24] 4362 	mov	ar5,r2
      00150F 90r00r2C         [24] 4363 	mov	dptr,#(_buffer + 0x002c)
      001512 ED               [12] 4364 	mov	a,r5
      001513 F0               [24] 4365 	movx	@dptr,a
                                   4366 ;	webserver.c:741: tcpHeader[10] = (ackNum >> 8) & 0xFF;
      001514 89 05            [24] 4367 	mov	ar5,r1
      001516 90r00r2D         [24] 4368 	mov	dptr,#(_buffer + 0x002d)
      001519 ED               [12] 4369 	mov	a,r5
      00151A F0               [24] 4370 	movx	@dptr,a
                                   4371 ;	webserver.c:742: tcpHeader[11] = ackNum & 0xFF;
      00151B 90r00r2E         [24] 4372 	mov	dptr,#(_buffer + 0x002e)
      00151E E8               [12] 4373 	mov	a,r0
      00151F F0               [24] 4374 	movx	@dptr,a
                                   4375 ;	webserver.c:743: tcpHeader[12] = 0x50; // Data offset (5 words) + Reserved
      001520 90r00r2F         [24] 4376 	mov	dptr,#(_buffer + 0x002f)
      001523 74 50            [12] 4377 	mov	a,#0x50
      001525 F0               [24] 4378 	movx	@dptr,a
                                   4379 ;	webserver.c:744: tcpHeader[13] = TCP_FLAG_ACK | TCP_FLAG_PUSH; // Flags
      001526 90r00r30         [24] 4380 	mov	dptr,#(_buffer + 0x0030)
      001529 74 18            [12] 4381 	mov	a,#0x18
      00152B F0               [24] 4382 	movx	@dptr,a
                                   4383 ;	webserver.c:745: tcpHeader[14] = 0xFF; // Window size high byte
      00152C 90r00r31         [24] 4384 	mov	dptr,#(_buffer + 0x0031)
      00152F 74 FF            [12] 4385 	mov	a,#0xff
      001531 F0               [24] 4386 	movx	@dptr,a
                                   4387 ;	webserver.c:746: tcpHeader[15] = 0xFF; // Window size low byte
      001532 90r00r32         [24] 4388 	mov	dptr,#(_buffer + 0x0032)
      001535 F0               [24] 4389 	movx	@dptr,a
                                   4390 ;	webserver.c:747: tcpHeader[16] = 0x00; // Checksum (reset for calculation)
      001536 90r00r33         [24] 4391 	mov	dptr,#(_buffer + 0x0033)
      001539 E4               [12] 4392 	clr	a
      00153A F0               [24] 4393 	movx	@dptr,a
                                   4394 ;	webserver.c:748: tcpHeader[17] = 0x00;
      00153B 90r00r34         [24] 4395 	mov	dptr,#(_buffer + 0x0034)
      00153E F0               [24] 4396 	movx	@dptr,a
                                   4397 ;	webserver.c:749: tcpHeader[18] = 0x00; // Urgent pointer
      00153F 90r00r35         [24] 4398 	mov	dptr,#(_buffer + 0x0035)
      001542 F0               [24] 4399 	movx	@dptr,a
                                   4400 ;	webserver.c:750: tcpHeader[19] = 0x00;
      001543 90r00r36         [24] 4401 	mov	dptr,#(_buffer + 0x0036)
      001546 F0               [24] 4402 	movx	@dptr,a
                                   4403 ;	webserver.c:751: calculateTcpChecksum(&buffer[1]);
      001547 90r00r01         [24] 4404 	mov	dptr,#(_buffer + 0x0001)
      00154A F5 F0            [12] 4405 	mov	b,a
      00154C C0 07            [24] 4406 	push	ar7
      00154E C0 06            [24] 4407 	push	ar6
      001550 12r05r01         [24] 4408 	lcall	_calculateTcpChecksum
      001553 D0 06            [24] 4409 	pop	ar6
      001555 D0 07            [24] 4410 	pop	ar7
                                   4411 ;	webserver.c:754: memcpy(&buffer[1 + headerSize], httpResponse, responseLen);
      001557 90r00r00         [24] 4412 	mov	dptr,#___memcpy_PARM_2
      00155A 74rBB            [12] 4413 	mov	a,#___str_5
      00155C F0               [24] 4414 	movx	@dptr,a
      00155D 74s03            [12] 4415 	mov	a,#(___str_5 >> 8)
      00155F A3               [24] 4416 	inc	dptr
      001560 F0               [24] 4417 	movx	@dptr,a
      001561 74 80            [12] 4418 	mov	a,#0x80
      001563 A3               [24] 4419 	inc	dptr
      001564 F0               [24] 4420 	movx	@dptr,a
      001565 90r00r00         [24] 4421 	mov	dptr,#___memcpy_PARM_3
      001568 EE               [12] 4422 	mov	a,r6
      001569 F0               [24] 4423 	movx	@dptr,a
      00156A EF               [12] 4424 	mov	a,r7
      00156B A3               [24] 4425 	inc	dptr
      00156C F0               [24] 4426 	movx	@dptr,a
      00156D 90r00r37         [24] 4427 	mov	dptr,#(_buffer + 0x0037)
      001570 75 F0 00         [24] 4428 	mov	b, #0x00
      001573 C0 07            [24] 4429 	push	ar7
      001575 C0 06            [24] 4430 	push	ar6
      001577 12r00r00         [24] 4431 	lcall	___memcpy
      00157A D0 06            [24] 4432 	pop	ar6
      00157C D0 07            [24] 4433 	pop	ar7
                                   4434 ;	webserver.c:757: transmit_tcp_packet(buffer, 1 + headerSize + responseLen);
      00157E 90r00r00         [24] 4435 	mov	dptr,#_transmit_tcp_packet_PARM_2
      001581 74 37            [12] 4436 	mov	a,#0x37
      001583 2E               [12] 4437 	add	a, r6
      001584 F0               [24] 4438 	movx	@dptr,a
      001585 E4               [12] 4439 	clr	a
      001586 3F               [12] 4440 	addc	a, r7
      001587 A3               [24] 4441 	inc	dptr
      001588 F0               [24] 4442 	movx	@dptr,a
      001589 90r00r00         [24] 4443 	mov	dptr,#_buffer
      00158C 75 F0 00         [24] 4444 	mov	b, #0x00
                                   4445 ;	webserver.c:758: }
      00158F 02r00r00         [24] 4446 	ljmp	_transmit_tcp_packet
                                   4447 ;------------------------------------------------------------
                                   4448 ;Allocation info for local variables in function 'makeTcpAck'
                                   4449 ;------------------------------------------------------------
                                   4450 ;device_mac                Allocated with name '_makeTcpAck_device_mac_10000_146'
                                   4451 ;target_mac                Allocated with name '_makeTcpAck_target_mac_10000_146'
                                   4452 ;device_ip                 Allocated with name '_makeTcpAck_device_ip_10000_146'
                                   4453 ;target_ip                 Allocated with name '_makeTcpAck_target_ip_10000_146'
                                   4454 ;------------------------------------------------------------
                                   4455 ;	webserver.c:769: void makeTcpAck(void) 
                                   4456 ;	-----------------------------------------
                                   4457 ;	 function makeTcpAck
                                   4458 ;	-----------------------------------------
      001592                       4459 _makeTcpAck:
                                   4460 ;	webserver.c:771: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      001592 90r06r97         [24] 4461 	mov	dptr,#_makeTcpAck_device_mac_10000_146
      001595 74 02            [12] 4462 	mov	a,#0x02
      001597 F0               [24] 4463 	movx	@dptr,a
      001598 90r06r98         [24] 4464 	mov	dptr,#(_makeTcpAck_device_mac_10000_146 + 0x0001)
      00159B 23               [12] 4465 	rl	a
      00159C F0               [24] 4466 	movx	@dptr,a
      00159D 90r06r99         [24] 4467 	mov	dptr,#(_makeTcpAck_device_mac_10000_146 + 0x0002)
      0015A0 74 A3            [12] 4468 	mov	a,#0xa3
      0015A2 F0               [24] 4469 	movx	@dptr,a
      0015A3 90r06r9A         [24] 4470 	mov	dptr,#(_makeTcpAck_device_mac_10000_146 + 0x0003)
      0015A6 74 3C            [12] 4471 	mov	a,#0x3c
      0015A8 F0               [24] 4472 	movx	@dptr,a
      0015A9 90r06r9B         [24] 4473 	mov	dptr,#(_makeTcpAck_device_mac_10000_146 + 0x0004)
      0015AC 74 4D            [12] 4474 	mov	a,#0x4d
      0015AE F0               [24] 4475 	movx	@dptr,a
      0015AF 90r06r9C         [24] 4476 	mov	dptr,#(_makeTcpAck_device_mac_10000_146 + 0x0005)
      0015B2 74 50            [12] 4477 	mov	a,#0x50
      0015B4 F0               [24] 4478 	movx	@dptr,a
                                   4479 ;	webserver.c:772: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      0015B5 90r06r9D         [24] 4480 	mov	dptr,#_makeTcpAck_target_mac_10000_146
      0015B8 74 FF            [12] 4481 	mov	a,#0xff
      0015BA F0               [24] 4482 	movx	@dptr,a
      0015BB 90r06r9E         [24] 4483 	mov	dptr,#(_makeTcpAck_target_mac_10000_146 + 0x0001)
      0015BE F0               [24] 4484 	movx	@dptr,a
      0015BF 90r06r9F         [24] 4485 	mov	dptr,#(_makeTcpAck_target_mac_10000_146 + 0x0002)
      0015C2 F0               [24] 4486 	movx	@dptr,a
      0015C3 90r06rA0         [24] 4487 	mov	dptr,#(_makeTcpAck_target_mac_10000_146 + 0x0003)
      0015C6 F0               [24] 4488 	movx	@dptr,a
      0015C7 90r06rA1         [24] 4489 	mov	dptr,#(_makeTcpAck_target_mac_10000_146 + 0x0004)
      0015CA F0               [24] 4490 	movx	@dptr,a
      0015CB 90r06rA2         [24] 4491 	mov	dptr,#(_makeTcpAck_target_mac_10000_146 + 0x0005)
      0015CE F0               [24] 4492 	movx	@dptr,a
                                   4493 ;	webserver.c:773: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      0015CF 90r06rA3         [24] 4494 	mov	dptr,#_makeTcpAck_device_ip_10000_146
      0015D2 74 C0            [12] 4495 	mov	a,#0xc0
      0015D4 F0               [24] 4496 	movx	@dptr,a
      0015D5 90r06rA4         [24] 4497 	mov	dptr,#(_makeTcpAck_device_ip_10000_146 + 0x0001)
      0015D8 74 A8            [12] 4498 	mov	a,#0xa8
      0015DA F0               [24] 4499 	movx	@dptr,a
      0015DB 90r06rA5         [24] 4500 	mov	dptr,#(_makeTcpAck_device_ip_10000_146 + 0x0002)
      0015DE 74 01            [12] 4501 	mov	a,#0x01
      0015E0 F0               [24] 4502 	movx	@dptr,a
      0015E1 90r06rA6         [24] 4503 	mov	dptr,#(_makeTcpAck_device_ip_10000_146 + 0x0003)
      0015E4 74 64            [12] 4504 	mov	a,#0x64
      0015E6 F0               [24] 4505 	movx	@dptr,a
                                   4506 ;	webserver.c:774: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      0015E7 90r06rA7         [24] 4507 	mov	dptr,#_makeTcpAck_target_ip_10000_146
      0015EA 74 C0            [12] 4508 	mov	a,#0xc0
      0015EC F0               [24] 4509 	movx	@dptr,a
      0015ED 90r06rA8         [24] 4510 	mov	dptr,#(_makeTcpAck_target_ip_10000_146 + 0x0001)
      0015F0 74 A8            [12] 4511 	mov	a,#0xa8
      0015F2 F0               [24] 4512 	movx	@dptr,a
      0015F3 90r06rA9         [24] 4513 	mov	dptr,#(_makeTcpAck_target_ip_10000_146 + 0x0002)
      0015F6 74 01            [12] 4514 	mov	a,#0x01
      0015F8 F0               [24] 4515 	movx	@dptr,a
      0015F9 90r06rAA         [24] 4516 	mov	dptr,#(_makeTcpAck_target_ip_10000_146 + 0x0003)
      0015FC F0               [24] 4517 	movx	@dptr,a
                                   4518 ;	webserver.c:775: printf("tcpack\n\r");
      0015FD 74r24            [12] 4519 	mov	a,#___str_7
      0015FF C0 E0            [24] 4520 	push	acc
      001601 74s06            [12] 4521 	mov	a,#(___str_7 >> 8)
      001603 C0 E0            [24] 4522 	push	acc
      001605 74 80            [12] 4523 	mov	a,#0x80
      001607 C0 E0            [24] 4524 	push	acc
      001609 12r00r00         [24] 4525 	lcall	_printf
      00160C 15 81            [12] 4526 	dec	sp
      00160E 15 81            [12] 4527 	dec	sp
      001610 15 81            [12] 4528 	dec	sp
                                   4529 ;	webserver.c:776: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      001612 90r00r00         [24] 4530 	mov	dptr,#_memmove_PARM_2
      001615 74r00            [12] 4531 	mov	a,#_buffer
      001617 F0               [24] 4532 	movx	@dptr,a
      001618 74s00            [12] 4533 	mov	a,#(_buffer >> 8)
      00161A A3               [24] 4534 	inc	dptr
      00161B F0               [24] 4535 	movx	@dptr,a
      00161C E4               [12] 4536 	clr	a
      00161D A3               [24] 4537 	inc	dptr
      00161E F0               [24] 4538 	movx	@dptr,a
      00161F 90r00r00         [24] 4539 	mov	dptr,#_memmove_PARM_3
      001622 74 36            [12] 4540 	mov	a,#0x36
      001624 F0               [24] 4541 	movx	@dptr,a
      001625 E4               [12] 4542 	clr	a
      001626 A3               [24] 4543 	inc	dptr
      001627 F0               [24] 4544 	movx	@dptr,a
      001628 90r00r01         [24] 4545 	mov	dptr,#(_buffer + 0x0001)
      00162B F5 F0            [12] 4546 	mov	b,a
      00162D 12r00r00         [24] 4547 	lcall	_memmove
                                   4548 ;	webserver.c:779: buffer[0] = 0x0E;
      001630 90r00r00         [24] 4549 	mov	dptr,#_buffer
      001633 74 0E            [12] 4550 	mov	a,#0x0e
      001635 F0               [24] 4551 	movx	@dptr,a
                                   4552 ;	webserver.c:780: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;
      001636 90r00r30         [24] 4553 	mov	dptr,#(_buffer + 0x0030)
      001639 74 10            [12] 4554 	mov	a,#0x10
      00163B F0               [24] 4555 	movx	@dptr,a
                                   4556 ;	webserver.c:781: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P);
      00163C 90r00r00         [24] 4557 	mov	dptr,#_transmit_tcp_packet_PARM_2
      00163F 74 37            [12] 4558 	mov	a,#0x37
      001641 F0               [24] 4559 	movx	@dptr,a
      001642 E4               [12] 4560 	clr	a
      001643 A3               [24] 4561 	inc	dptr
      001644 F0               [24] 4562 	movx	@dptr,a
      001645 90r00r00         [24] 4563 	mov	dptr,#_buffer
      001648 F5 F0            [12] 4564 	mov	b,a
                                   4565 ;	webserver.c:782: }
      00164A 02r00r00         [24] 4566 	ljmp	_transmit_tcp_packet
                                   4567 ;------------------------------------------------------------
                                   4568 ;Allocation info for local variables in function 'trial_arp_request'
                                   4569 ;------------------------------------------------------------
                                   4570 ;device_mac                Allocated with name '_trial_arp_request_device_mac_10000_148'
                                   4571 ;target_mac                Allocated with name '_trial_arp_request_target_mac_10000_148'
                                   4572 ;device_ip                 Allocated with name '_trial_arp_request_device_ip_10000_148'
                                   4573 ;target_ip                 Allocated with name '_trial_arp_request_target_ip_10000_148'
                                   4574 ;arp_packet                Allocated with name '_trial_arp_request_arp_packet_10001_149'
                                   4575 ;------------------------------------------------------------
                                   4576 ;	webserver.c:794: void trial_arp_request(void) 
                                   4577 ;	-----------------------------------------
                                   4578 ;	 function trial_arp_request
                                   4579 ;	-----------------------------------------
      00164D                       4580 _trial_arp_request:
                                   4581 ;	webserver.c:796: uint8_t device_mac[6] = { 0x02, 0x04, 0xA3, 0x3C, 0x4D, 0x50 }; // Default MAC
      00164D 90r06rAB         [24] 4582 	mov	dptr,#_trial_arp_request_device_mac_10000_148
      001650 74 02            [12] 4583 	mov	a,#0x02
      001652 F0               [24] 4584 	movx	@dptr,a
      001653 90r06rAC         [24] 4585 	mov	dptr,#(_trial_arp_request_device_mac_10000_148 + 0x0001)
      001656 23               [12] 4586 	rl	a
      001657 F0               [24] 4587 	movx	@dptr,a
      001658 90r06rAD         [24] 4588 	mov	dptr,#(_trial_arp_request_device_mac_10000_148 + 0x0002)
      00165B 74 A3            [12] 4589 	mov	a,#0xa3
      00165D F0               [24] 4590 	movx	@dptr,a
      00165E 90r06rAE         [24] 4591 	mov	dptr,#(_trial_arp_request_device_mac_10000_148 + 0x0003)
      001661 74 3C            [12] 4592 	mov	a,#0x3c
      001663 F0               [24] 4593 	movx	@dptr,a
      001664 90r06rAF         [24] 4594 	mov	dptr,#(_trial_arp_request_device_mac_10000_148 + 0x0004)
      001667 74 4D            [12] 4595 	mov	a,#0x4d
      001669 F0               [24] 4596 	movx	@dptr,a
      00166A 90r06rB0         [24] 4597 	mov	dptr,#(_trial_arp_request_device_mac_10000_148 + 0x0005)
      00166D 74 50            [12] 4598 	mov	a,#0x50
      00166F F0               [24] 4599 	movx	@dptr,a
                                   4600 ;	webserver.c:797: uint8_t target_mac[6] = { 0xFF, 0XFF, 0XFF, 0xFF, 0XFF, 0XFF }; // Default MAC
      001670 90r06rB1         [24] 4601 	mov	dptr,#_trial_arp_request_target_mac_10000_148
      001673 74 FF            [12] 4602 	mov	a,#0xff
      001675 F0               [24] 4603 	movx	@dptr,a
      001676 90r06rB2         [24] 4604 	mov	dptr,#(_trial_arp_request_target_mac_10000_148 + 0x0001)
      001679 F0               [24] 4605 	movx	@dptr,a
      00167A 90r06rB3         [24] 4606 	mov	dptr,#(_trial_arp_request_target_mac_10000_148 + 0x0002)
      00167D F0               [24] 4607 	movx	@dptr,a
      00167E 90r06rB4         [24] 4608 	mov	dptr,#(_trial_arp_request_target_mac_10000_148 + 0x0003)
      001681 F0               [24] 4609 	movx	@dptr,a
      001682 90r06rB5         [24] 4610 	mov	dptr,#(_trial_arp_request_target_mac_10000_148 + 0x0004)
      001685 F0               [24] 4611 	movx	@dptr,a
      001686 90r06rB6         [24] 4612 	mov	dptr,#(_trial_arp_request_target_mac_10000_148 + 0x0005)
      001689 F0               [24] 4613 	movx	@dptr,a
                                   4614 ;	webserver.c:798: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      00168A 90r06rB7         [24] 4615 	mov	dptr,#_trial_arp_request_device_ip_10000_148
      00168D 74 C0            [12] 4616 	mov	a,#0xc0
      00168F F0               [24] 4617 	movx	@dptr,a
      001690 90r06rB8         [24] 4618 	mov	dptr,#(_trial_arp_request_device_ip_10000_148 + 0x0001)
      001693 74 A8            [12] 4619 	mov	a,#0xa8
      001695 F0               [24] 4620 	movx	@dptr,a
      001696 90r06rB9         [24] 4621 	mov	dptr,#(_trial_arp_request_device_ip_10000_148 + 0x0002)
      001699 74 01            [12] 4622 	mov	a,#0x01
      00169B F0               [24] 4623 	movx	@dptr,a
      00169C 90r06rBA         [24] 4624 	mov	dptr,#(_trial_arp_request_device_ip_10000_148 + 0x0003)
      00169F 74 64            [12] 4625 	mov	a,#0x64
      0016A1 F0               [24] 4626 	movx	@dptr,a
                                   4627 ;	webserver.c:799: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      0016A2 90r06rBB         [24] 4628 	mov	dptr,#_trial_arp_request_target_ip_10000_148
      0016A5 74 C0            [12] 4629 	mov	a,#0xc0
      0016A7 F0               [24] 4630 	movx	@dptr,a
      0016A8 90r06rBC         [24] 4631 	mov	dptr,#(_trial_arp_request_target_ip_10000_148 + 0x0001)
      0016AB 74 A8            [12] 4632 	mov	a,#0xa8
      0016AD F0               [24] 4633 	movx	@dptr,a
      0016AE 90r06rBD         [24] 4634 	mov	dptr,#(_trial_arp_request_target_ip_10000_148 + 0x0002)
      0016B1 74 01            [12] 4635 	mov	a,#0x01
      0016B3 F0               [24] 4636 	movx	@dptr,a
      0016B4 90r06rBE         [24] 4637 	mov	dptr,#(_trial_arp_request_target_ip_10000_148 + 0x0003)
      0016B7 F0               [24] 4638 	movx	@dptr,a
                                   4639 ;	webserver.c:800: printf("refresharp\n\r");
      0016B8 74r2D            [12] 4640 	mov	a,#___str_8
      0016BA C0 E0            [24] 4641 	push	acc
      0016BC 74s06            [12] 4642 	mov	a,#(___str_8 >> 8)
      0016BE C0 E0            [24] 4643 	push	acc
      0016C0 74 80            [12] 4644 	mov	a,#0x80
      0016C2 C0 E0            [24] 4645 	push	acc
      0016C4 12r00r00         [24] 4646 	lcall	_printf
      0016C7 15 81            [12] 4647 	dec	sp
      0016C9 15 81            [12] 4648 	dec	sp
      0016CB 15 81            [12] 4649 	dec	sp
                                   4650 ;	webserver.c:801: uint8_t arp_packet[43] = { 0x0E };
      0016CD 90r06rBF         [24] 4651 	mov	dptr,#_trial_arp_request_arp_packet_10001_149
      0016D0 74 0E            [12] 4652 	mov	a,#0x0e
      0016D2 F0               [24] 4653 	movx	@dptr,a
      0016D3 90r06rC0         [24] 4654 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0001)
      0016D6 E4               [12] 4655 	clr	a
      0016D7 F0               [24] 4656 	movx	@dptr,a
      0016D8 90r06rC1         [24] 4657 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0002)
      0016DB F0               [24] 4658 	movx	@dptr,a
      0016DC 90r06rC2         [24] 4659 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0003)
      0016DF F0               [24] 4660 	movx	@dptr,a
      0016E0 90r06rC3         [24] 4661 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0004)
      0016E3 F0               [24] 4662 	movx	@dptr,a
      0016E4 90r06rC4         [24] 4663 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0005)
      0016E7 F0               [24] 4664 	movx	@dptr,a
      0016E8 90r06rC5         [24] 4665 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0006)
      0016EB F0               [24] 4666 	movx	@dptr,a
      0016EC 90r06rC6         [24] 4667 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0007)
      0016EF F0               [24] 4668 	movx	@dptr,a
      0016F0 90r06rC7         [24] 4669 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0008)
      0016F3 F0               [24] 4670 	movx	@dptr,a
      0016F4 90r06rC8         [24] 4671 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0009)
      0016F7 F0               [24] 4672 	movx	@dptr,a
      0016F8 90r06rC9         [24] 4673 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000a)
      0016FB F0               [24] 4674 	movx	@dptr,a
      0016FC 90r06rCA         [24] 4675 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000b)
      0016FF F0               [24] 4676 	movx	@dptr,a
      001700 90r06rCB         [24] 4677 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000c)
      001703 F0               [24] 4678 	movx	@dptr,a
      001704 90r06rCC         [24] 4679 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000d)
      001707 F0               [24] 4680 	movx	@dptr,a
      001708 90r06rCD         [24] 4681 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000e)
      00170B F0               [24] 4682 	movx	@dptr,a
      00170C 90r06rCE         [24] 4683 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000f)
      00170F F0               [24] 4684 	movx	@dptr,a
      001710 90r06rCF         [24] 4685 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0010)
      001713 F0               [24] 4686 	movx	@dptr,a
      001714 90r06rD0         [24] 4687 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0011)
      001717 F0               [24] 4688 	movx	@dptr,a
      001718 90r06rD1         [24] 4689 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0012)
      00171B F0               [24] 4690 	movx	@dptr,a
      00171C 90r06rD2         [24] 4691 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0013)
      00171F F0               [24] 4692 	movx	@dptr,a
      001720 90r06rD3         [24] 4693 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0014)
      001723 F0               [24] 4694 	movx	@dptr,a
      001724 90r06rD4         [24] 4695 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0015)
      001727 F0               [24] 4696 	movx	@dptr,a
      001728 90r06rD5         [24] 4697 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0016)
      00172B F0               [24] 4698 	movx	@dptr,a
      00172C 90r06rD6         [24] 4699 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0017)
      00172F F0               [24] 4700 	movx	@dptr,a
      001730 90r06rD7         [24] 4701 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0018)
      001733 F0               [24] 4702 	movx	@dptr,a
      001734 90r06rD8         [24] 4703 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0019)
      001737 F0               [24] 4704 	movx	@dptr,a
      001738 90r06rD9         [24] 4705 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x001a)
      00173B F0               [24] 4706 	movx	@dptr,a
      00173C 90r06rDA         [24] 4707 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x001b)
      00173F F0               [24] 4708 	movx	@dptr,a
      001740 90r06rDB         [24] 4709 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x001c)
      001743 F0               [24] 4710 	movx	@dptr,a
      001744 90r06rDC         [24] 4711 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x001d)
      001747 F0               [24] 4712 	movx	@dptr,a
      001748 90r06rDD         [24] 4713 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x001e)
      00174B F0               [24] 4714 	movx	@dptr,a
      00174C 90r06rDE         [24] 4715 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x001f)
      00174F F0               [24] 4716 	movx	@dptr,a
      001750 90r06rDF         [24] 4717 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0020)
      001753 F0               [24] 4718 	movx	@dptr,a
      001754 90r06rE0         [24] 4719 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0021)
      001757 F0               [24] 4720 	movx	@dptr,a
      001758 90r06rE1         [24] 4721 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0022)
      00175B F0               [24] 4722 	movx	@dptr,a
      00175C 90r06rE2         [24] 4723 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0023)
      00175F F0               [24] 4724 	movx	@dptr,a
      001760 90r06rE3         [24] 4725 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0024)
      001763 F0               [24] 4726 	movx	@dptr,a
      001764 90r06rE4         [24] 4727 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0025)
      001767 F0               [24] 4728 	movx	@dptr,a
      001768 90r06rE5         [24] 4729 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0026)
      00176B F0               [24] 4730 	movx	@dptr,a
      00176C 90r06rE6         [24] 4731 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0027)
      00176F F0               [24] 4732 	movx	@dptr,a
      001770 90r06rE7         [24] 4733 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0028)
      001773 F0               [24] 4734 	movx	@dptr,a
      001774 90r06rE8         [24] 4735 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0029)
      001777 F0               [24] 4736 	movx	@dptr,a
      001778 90r06rE9         [24] 4737 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x002a)
      00177B F0               [24] 4738 	movx	@dptr,a
                                   4739 ;	webserver.c:802: memcpy(&arp_packet[1], target_mac, 6);
      00177C 90r00r00         [24] 4740 	mov	dptr,#___memcpy_PARM_2
      00177F 74rB1            [12] 4741 	mov	a,#_trial_arp_request_target_mac_10000_148
      001781 F0               [24] 4742 	movx	@dptr,a
      001782 74s06            [12] 4743 	mov	a,#(_trial_arp_request_target_mac_10000_148 >> 8)
      001784 A3               [24] 4744 	inc	dptr
      001785 F0               [24] 4745 	movx	@dptr,a
      001786 E4               [12] 4746 	clr	a
      001787 A3               [24] 4747 	inc	dptr
      001788 F0               [24] 4748 	movx	@dptr,a
      001789 90r00r00         [24] 4749 	mov	dptr,#___memcpy_PARM_3
      00178C 74 06            [12] 4750 	mov	a,#0x06
      00178E F0               [24] 4751 	movx	@dptr,a
      00178F E4               [12] 4752 	clr	a
      001790 A3               [24] 4753 	inc	dptr
      001791 F0               [24] 4754 	movx	@dptr,a
      001792 90r06rC0         [24] 4755 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0001)
      001795 F5 F0            [12] 4756 	mov	b,a
      001797 12r00r00         [24] 4757 	lcall	___memcpy
                                   4758 ;	webserver.c:803: memcpy(&arp_packet[7], device_mac, 6);
      00179A 90r00r00         [24] 4759 	mov	dptr,#___memcpy_PARM_2
      00179D 74rAB            [12] 4760 	mov	a,#_trial_arp_request_device_mac_10000_148
      00179F F0               [24] 4761 	movx	@dptr,a
      0017A0 74s06            [12] 4762 	mov	a,#(_trial_arp_request_device_mac_10000_148 >> 8)
      0017A2 A3               [24] 4763 	inc	dptr
      0017A3 F0               [24] 4764 	movx	@dptr,a
      0017A4 E4               [12] 4765 	clr	a
      0017A5 A3               [24] 4766 	inc	dptr
      0017A6 F0               [24] 4767 	movx	@dptr,a
      0017A7 90r00r00         [24] 4768 	mov	dptr,#___memcpy_PARM_3
      0017AA 74 06            [12] 4769 	mov	a,#0x06
      0017AC F0               [24] 4770 	movx	@dptr,a
      0017AD E4               [12] 4771 	clr	a
      0017AE A3               [24] 4772 	inc	dptr
      0017AF F0               [24] 4773 	movx	@dptr,a
      0017B0 90r06rC6         [24] 4774 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0007)
      0017B3 F5 F0            [12] 4775 	mov	b,a
      0017B5 12r00r00         [24] 4776 	lcall	___memcpy
                                   4777 ;	webserver.c:804: arp_packet[13] = (ETH_TYPE_ARP >> 8) & 0xFF;
      0017B8 90r06rCC         [24] 4778 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000d)
      0017BB 74 08            [12] 4779 	mov	a,#0x08
      0017BD F0               [24] 4780 	movx	@dptr,a
                                   4781 ;	webserver.c:805: arp_packet[14] = ETH_TYPE_ARP & 0xFF;
      0017BE 90r06rCD         [24] 4782 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000e)
      0017C1 74 06            [12] 4783 	mov	a,#0x06
      0017C3 F0               [24] 4784 	movx	@dptr,a
                                   4785 ;	webserver.c:806: arp_packet[15] = 0x00;
      0017C4 90r06rCE         [24] 4786 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x000f)
      0017C7 E4               [12] 4787 	clr	a
      0017C8 F0               [24] 4788 	movx	@dptr,a
                                   4789 ;	webserver.c:807: arp_packet[16] = 0x01; // Hardware type
      0017C9 90r06rCF         [24] 4790 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0010)
      0017CC 04               [12] 4791 	inc	a
      0017CD F0               [24] 4792 	movx	@dptr,a
                                   4793 ;	webserver.c:808: arp_packet[17] = 0x08;
      0017CE 90r06rD0         [24] 4794 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0011)
      0017D1 74 08            [12] 4795 	mov	a,#0x08
      0017D3 F0               [24] 4796 	movx	@dptr,a
                                   4797 ;	webserver.c:809: arp_packet[18] = 0x00; // Protocol type
      0017D4 90r06rD1         [24] 4798 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0012)
      0017D7 E4               [12] 4799 	clr	a
      0017D8 F0               [24] 4800 	movx	@dptr,a
                                   4801 ;	webserver.c:810: arp_packet[19] = 0x06; // Hardware size
      0017D9 90r06rD2         [24] 4802 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0013)
      0017DC 74 06            [12] 4803 	mov	a,#0x06
      0017DE F0               [24] 4804 	movx	@dptr,a
                                   4805 ;	webserver.c:811: arp_packet[20] = 0x04; // Protocol size
      0017DF 90r06rD3         [24] 4806 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0014)
      0017E2 74 04            [12] 4807 	mov	a,#0x04
      0017E4 F0               [24] 4808 	movx	@dptr,a
                                   4809 ;	webserver.c:812: arp_packet[21] = 0x00;
      0017E5 90r06rD4         [24] 4810 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0015)
      0017E8 E4               [12] 4811 	clr	a
      0017E9 F0               [24] 4812 	movx	@dptr,a
                                   4813 ;	webserver.c:813: arp_packet[22] = 0x01; // Operation (request)
      0017EA 90r06rD5         [24] 4814 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0016)
      0017ED 04               [12] 4815 	inc	a
      0017EE F0               [24] 4816 	movx	@dptr,a
                                   4817 ;	webserver.c:814: memcpy(&arp_packet[23], device_mac, 6);
      0017EF 90r00r00         [24] 4818 	mov	dptr,#___memcpy_PARM_2
      0017F2 74rAB            [12] 4819 	mov	a,#_trial_arp_request_device_mac_10000_148
      0017F4 F0               [24] 4820 	movx	@dptr,a
      0017F5 74s06            [12] 4821 	mov	a,#(_trial_arp_request_device_mac_10000_148 >> 8)
      0017F7 A3               [24] 4822 	inc	dptr
      0017F8 F0               [24] 4823 	movx	@dptr,a
      0017F9 E4               [12] 4824 	clr	a
      0017FA A3               [24] 4825 	inc	dptr
      0017FB F0               [24] 4826 	movx	@dptr,a
      0017FC 90r00r00         [24] 4827 	mov	dptr,#___memcpy_PARM_3
      0017FF 74 06            [12] 4828 	mov	a,#0x06
      001801 F0               [24] 4829 	movx	@dptr,a
      001802 E4               [12] 4830 	clr	a
      001803 A3               [24] 4831 	inc	dptr
      001804 F0               [24] 4832 	movx	@dptr,a
      001805 90r06rD6         [24] 4833 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0017)
      001808 F5 F0            [12] 4834 	mov	b,a
      00180A 12r00r00         [24] 4835 	lcall	___memcpy
                                   4836 ;	webserver.c:815: memcpy(&arp_packet[29], device_ip, 4);
      00180D 90r00r00         [24] 4837 	mov	dptr,#___memcpy_PARM_2
      001810 74rB7            [12] 4838 	mov	a,#_trial_arp_request_device_ip_10000_148
      001812 F0               [24] 4839 	movx	@dptr,a
      001813 74s06            [12] 4840 	mov	a,#(_trial_arp_request_device_ip_10000_148 >> 8)
      001815 A3               [24] 4841 	inc	dptr
      001816 F0               [24] 4842 	movx	@dptr,a
      001817 E4               [12] 4843 	clr	a
      001818 A3               [24] 4844 	inc	dptr
      001819 F0               [24] 4845 	movx	@dptr,a
      00181A 90r00r00         [24] 4846 	mov	dptr,#___memcpy_PARM_3
      00181D 74 04            [12] 4847 	mov	a,#0x04
      00181F F0               [24] 4848 	movx	@dptr,a
      001820 E4               [12] 4849 	clr	a
      001821 A3               [24] 4850 	inc	dptr
      001822 F0               [24] 4851 	movx	@dptr,a
      001823 90r06rDC         [24] 4852 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x001d)
      001826 F5 F0            [12] 4853 	mov	b,a
      001828 12r00r00         [24] 4854 	lcall	___memcpy
                                   4855 ;	webserver.c:816: memset(&arp_packet[33], 0, 6);
      00182B 90r00r00         [24] 4856 	mov	dptr,#_memset_PARM_2
      00182E E4               [12] 4857 	clr	a
      00182F F0               [24] 4858 	movx	@dptr,a
      001830 90r00r00         [24] 4859 	mov	dptr,#_memset_PARM_3
      001833 74 06            [12] 4860 	mov	a,#0x06
      001835 F0               [24] 4861 	movx	@dptr,a
      001836 E4               [12] 4862 	clr	a
      001837 A3               [24] 4863 	inc	dptr
      001838 F0               [24] 4864 	movx	@dptr,a
      001839 90r06rE0         [24] 4865 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0021)
      00183C F5 F0            [12] 4866 	mov	b,a
      00183E 12r00r00         [24] 4867 	lcall	_memset
                                   4868 ;	webserver.c:817: memcpy(&arp_packet[39], target_ip, 4);
      001841 90r00r00         [24] 4869 	mov	dptr,#___memcpy_PARM_2
      001844 74rBB            [12] 4870 	mov	a,#_trial_arp_request_target_ip_10000_148
      001846 F0               [24] 4871 	movx	@dptr,a
      001847 74s06            [12] 4872 	mov	a,#(_trial_arp_request_target_ip_10000_148 >> 8)
      001849 A3               [24] 4873 	inc	dptr
      00184A F0               [24] 4874 	movx	@dptr,a
      00184B E4               [12] 4875 	clr	a
      00184C A3               [24] 4876 	inc	dptr
      00184D F0               [24] 4877 	movx	@dptr,a
      00184E 90r00r00         [24] 4878 	mov	dptr,#___memcpy_PARM_3
      001851 74 04            [12] 4879 	mov	a,#0x04
      001853 F0               [24] 4880 	movx	@dptr,a
      001854 E4               [12] 4881 	clr	a
      001855 A3               [24] 4882 	inc	dptr
      001856 F0               [24] 4883 	movx	@dptr,a
      001857 90r06rE6         [24] 4884 	mov	dptr,#(_trial_arp_request_arp_packet_10001_149 + 0x0027)
      00185A F5 F0            [12] 4885 	mov	b,a
      00185C 12r00r00         [24] 4886 	lcall	___memcpy
                                   4887 ;	webserver.c:818: transmit_tcp_packet(arp_packet, 43);
      00185F 90r00r00         [24] 4888 	mov	dptr,#_transmit_tcp_packet_PARM_2
      001862 74 2B            [12] 4889 	mov	a,#0x2b
      001864 F0               [24] 4890 	movx	@dptr,a
      001865 E4               [12] 4891 	clr	a
      001866 A3               [24] 4892 	inc	dptr
      001867 F0               [24] 4893 	movx	@dptr,a
      001868 90r06rBF         [24] 4894 	mov	dptr,#_trial_arp_request_arp_packet_10001_149
      00186B F5 F0            [12] 4895 	mov	b,a
                                   4896 ;	webserver.c:819: }
      00186D 02r00r00         [24] 4897 	ljmp	_transmit_tcp_packet
                                   4898 ;------------------------------------------------------------
                                   4899 ;Allocation info for local variables in function 'packetLoop'
                                   4900 ;------------------------------------------------------------
                                   4901 ;plen                      Allocated with name '_packetLoop_plen_10000_151'
                                   4902 ;ethType                   Allocated with name '_packetLoop_ethType_20000_152'
                                   4903 ;tcpFlags                  Allocated with name '_packetLoop_tcpFlags_30000_155'
                                   4904 ;------------------------------------------------------------
                                   4905 ;	webserver.c:832: void packetLoop(void) 
                                   4906 ;	-----------------------------------------
                                   4907 ;	 function packetLoop
                                   4908 ;	-----------------------------------------
      001870                       4909 _packetLoop:
                                   4910 ;	webserver.c:834: uint16_t plen = packetReceive();
      001870 12r00r00         [24] 4911 	lcall	_packetReceive
      001873 AE 82            [24] 4912 	mov	r6, dpl
      001875 AF 83            [24] 4913 	mov	r7, dph
                                   4914 ;	webserver.c:837: if (plen > 0) {
      001877 EE               [12] 4915 	mov	a,r6
      001878 4F               [12] 4916 	orl	a,r7
      001879 70 01            [24] 4917 	jnz	00219$
      00187B 22               [24] 4918 	ret
      00187C                       4919 00219$:
                                   4920 ;	webserver.c:838: uint16_t ethType = (buffer[ETH_TYPE_H_P] << 8) | buffer[ETH_TYPE_L_P];
      00187C 90r00r0C         [24] 4921 	mov	dptr,#(_buffer + 0x000c)
      00187F E0               [24] 4922 	movx	a,@dptr
      001880 FC               [12] 4923 	mov	r4,a
      001881 7D 00            [12] 4924 	mov	r5,#0x00
      001883 90r00r0D         [24] 4925 	mov	dptr,#(_buffer + 0x000d)
      001886 E0               [24] 4926 	movx	a,@dptr
      001887 FB               [12] 4927 	mov	r3,a
      001888 7A 00            [12] 4928 	mov	r2,#0x00
      00188A 42 05            [12] 4929 	orl	ar5,a
      00188C EA               [12] 4930 	mov	a,r2
      00188D 42 04            [12] 4931 	orl	ar4,a
                                   4932 ;	webserver.c:839: if (ethType == ETH_TYPE_ARP) {
      00188F BD 06 0F         [24] 4933 	cjne	r5,#0x06,00104$
      001892 BC 08 0C         [24] 4934 	cjne	r4,#0x08,00104$
                                   4935 ;	webserver.c:840: if (buffer[21] == 0x01) {
      001895 90r00r15         [24] 4936 	mov	dptr,#(_buffer + 0x0015)
      001898 E0               [24] 4937 	movx	a,@dptr
      001899 FB               [12] 4938 	mov	r3,a
      00189A BB 01 03         [24] 4939 	cjne	r3,#0x01,00102$
                                   4940 ;	webserver.c:841: makeArpReply();
                                   4941 ;	webserver.c:843: return;
      00189D 02r02r28         [24] 4942 	ljmp	_makeArpReply
      0018A0                       4943 00102$:
      0018A0 22               [24] 4944 	ret
      0018A1                       4945 00104$:
                                   4946 ;	webserver.c:846: if (ethType == ETH_TYPE_IP && buffer[IP_PROTO_P] == IP_PROTO_TCP) {
      0018A1 BD 00 05         [24] 4947 	cjne	r5,#0x00,00224$
      0018A4 BC 08 02         [24] 4948 	cjne	r4,#0x08,00224$
      0018A7 80 01            [24] 4949 	sjmp	00225$
      0018A9                       4950 00224$:
      0018A9 22               [24] 4951 	ret
      0018AA                       4952 00225$:
      0018AA 90r00r17         [24] 4953 	mov	dptr,#(_buffer + 0x0017)
      0018AD E0               [24] 4954 	movx	a,@dptr
      0018AE FD               [12] 4955 	mov	r5,a
      0018AF BD 06 02         [24] 4956 	cjne	r5,#0x06,00226$
      0018B2 80 01            [24] 4957 	sjmp	00227$
      0018B4                       4958 00226$:
      0018B4 22               [24] 4959 	ret
      0018B5                       4960 00227$:
                                   4961 ;	webserver.c:847: uint8_t tcpFlags = buffer[TCP_FLAGS_P];
      0018B5 90r00r2F         [24] 4962 	mov	dptr,#(_buffer + 0x002f)
      0018B8 E0               [24] 4963 	movx	a,@dptr
                                   4964 ;	webserver.c:850: if ((tcpFlags & TCP_FLAG_ACK) && (tcpFlags & TCP_FLAG_FIN)) {
      0018B9 FD               [12] 4965 	mov	r5,a
      0018BA 30 E4 23         [24] 4966 	jnb	acc.4,00106$
      0018BD ED               [12] 4967 	mov	a,r5
      0018BE 30 E0 1F         [24] 4968 	jnb	acc.0,00106$
                                   4969 ;	webserver.c:851: printf("TCP(ACK_FIN) packet detected\n\r");
      0018C1 74r3A            [12] 4970 	mov	a,#___str_9
      0018C3 C0 E0            [24] 4971 	push	acc
      0018C5 74s06            [12] 4972 	mov	a,#(___str_9 >> 8)
      0018C7 C0 E0            [24] 4973 	push	acc
      0018C9 74 80            [12] 4974 	mov	a,#0x80
      0018CB C0 E0            [24] 4975 	push	acc
      0018CD 12r00r00         [24] 4976 	lcall	_printf
      0018D0 15 81            [12] 4977 	dec	sp
      0018D2 15 81            [12] 4978 	dec	sp
      0018D4 15 81            [12] 4979 	dec	sp
                                   4980 ;	webserver.c:852: makeTcpAck3(); // Send an acknowledgment
      0018D6 12r0Ar4F         [24] 4981 	lcall	_makeTcpAck3
                                   4982 ;	webserver.c:853: connectionState = CLOSED;
      0018D9 90r00r00         [24] 4983 	mov	dptr,#_connectionState
      0018DC 74 04            [12] 4984 	mov	a,#0x04
      0018DE F0               [24] 4985 	movx	@dptr,a
                                   4986 ;	webserver.c:855: return;
      0018DF 22               [24] 4987 	ret
      0018E0                       4988 00106$:
                                   4989 ;	webserver.c:857: if ((tcpFlags & TCP_FLAG_SYN)) {
      0018E0 ED               [12] 4990 	mov	a,r5
      0018E1 30 E1 26         [24] 4991 	jnb	acc.1,00109$
                                   4992 ;	webserver.c:858: printf("TCP(SYN) packet detected\n\r");
      0018E4 C0 07            [24] 4993 	push	ar7
      0018E6 C0 06            [24] 4994 	push	ar6
      0018E8 C0 05            [24] 4995 	push	ar5
      0018EA 74r59            [12] 4996 	mov	a,#___str_10
      0018EC C0 E0            [24] 4997 	push	acc
      0018EE 74s06            [12] 4998 	mov	a,#(___str_10 >> 8)
      0018F0 C0 E0            [24] 4999 	push	acc
      0018F2 74 80            [12] 5000 	mov	a,#0x80
      0018F4 C0 E0            [24] 5001 	push	acc
      0018F6 12r00r00         [24] 5002 	lcall	_printf
      0018F9 15 81            [12] 5003 	dec	sp
      0018FB 15 81            [12] 5004 	dec	sp
      0018FD 15 81            [12] 5005 	dec	sp
      0018FF D0 05            [24] 5006 	pop	ar5
      001901 D0 06            [24] 5007 	pop	ar6
      001903 D0 07            [24] 5008 	pop	ar7
                                   5009 ;	webserver.c:860: connectionState = LISTEN;
      001905 90r00r00         [24] 5010 	mov	dptr,#_connectionState
      001908 E4               [12] 5011 	clr	a
      001909 F0               [24] 5012 	movx	@dptr,a
      00190A                       5013 00109$:
                                   5014 ;	webserver.c:863: switch (connectionState) {
      00190A 90r00r00         [24] 5015 	mov	dptr,#_connectionState
      00190D E0               [24] 5016 	movx	a,@dptr
      00190E FC               [12] 5017 	mov  r4,a
      00190F 24 FA            [12] 5018 	add	a,#0xff - 0x05
      001911 50 01            [24] 5019 	jnc	00231$
      001913 22               [24] 5020 	ret
      001914                       5021 00231$:
      001914 EC               [12] 5022 	mov	a,r4
      001915 2C               [12] 5023 	add	a,r4
      001916 2C               [12] 5024 	add	a,r4
      001917 90r19r1B         [24] 5025 	mov	dptr,#00232$
      00191A 73               [24] 5026 	jmp	@a+dptr
      00191B                       5027 00232$:
      00191B 02r19r2D         [24] 5028 	ljmp	00110$
      00191E 02r19r4E         [24] 5029 	ljmp	00113$
      001921 02r19r72         [24] 5030 	ljmp	00116$
      001924 02r19rAC         [24] 5031 	ljmp	00122$
      001927 02r19rD9         [24] 5032 	ljmp	00133$
      00192A 02r19rD0         [24] 5033 	ljmp	00125$
                                   5034 ;	webserver.c:864: case LISTEN:
      00192D                       5035 00110$:
                                   5036 ;	webserver.c:865: printf("listen\n\r");
      00192D C0 05            [24] 5037 	push	ar5
      00192F 74r74            [12] 5038 	mov	a,#___str_11
      001931 C0 E0            [24] 5039 	push	acc
      001933 74s06            [12] 5040 	mov	a,#(___str_11 >> 8)
      001935 C0 E0            [24] 5041 	push	acc
      001937 74 80            [12] 5042 	mov	a,#0x80
      001939 C0 E0            [24] 5043 	push	acc
      00193B 12r00r00         [24] 5044 	lcall	_printf
      00193E 15 81            [12] 5045 	dec	sp
      001940 15 81            [12] 5046 	dec	sp
      001942 15 81            [12] 5047 	dec	sp
      001944 D0 05            [24] 5048 	pop	ar5
                                   5049 ;	webserver.c:866: if (tcpFlags & TCP_FLAG_SYN)
      001946 ED               [12] 5050 	mov	a,r5
      001947 20 E1 01         [24] 5051 	jb	acc.1,00233$
      00194A 22               [24] 5052 	ret
      00194B                       5053 00233$:
                                   5054 ;	webserver.c:867: makeTcpSynAck();
                                   5055 ;	webserver.c:868: break;
      00194B 02r0FrF1         [24] 5056 	ljmp	_makeTcpSynAck
                                   5057 ;	webserver.c:869: case SYN_RECEIVED:
      00194E                       5058 00113$:
                                   5059 ;	webserver.c:870: printf("syn received\n\r");
      00194E C0 05            [24] 5060 	push	ar5
      001950 74r7D            [12] 5061 	mov	a,#___str_12
      001952 C0 E0            [24] 5062 	push	acc
      001954 74s06            [12] 5063 	mov	a,#(___str_12 >> 8)
      001956 C0 E0            [24] 5064 	push	acc
      001958 74 80            [12] 5065 	mov	a,#0x80
      00195A C0 E0            [24] 5066 	push	acc
      00195C 12r00r00         [24] 5067 	lcall	_printf
      00195F 15 81            [12] 5068 	dec	sp
      001961 15 81            [12] 5069 	dec	sp
      001963 15 81            [12] 5070 	dec	sp
      001965 D0 05            [24] 5071 	pop	ar5
                                   5072 ;	webserver.c:871: if (tcpFlags & TCP_FLAG_ACK)
      001967 ED               [12] 5073 	mov	a,r5
      001968 30 E4 6E         [24] 5074 	jnb	acc.4,00133$
                                   5075 ;	webserver.c:872: connectionState = ESTABLISHED;
      00196B 90r00r00         [24] 5076 	mov	dptr,#_connectionState
      00196E 74 02            [12] 5077 	mov	a,#0x02
      001970 F0               [24] 5078 	movx	@dptr,a
                                   5079 ;	webserver.c:873: break;
                                   5080 ;	webserver.c:874: case ESTABLISHED:
      001971 22               [24] 5081 	ret
      001972                       5082 00116$:
                                   5083 ;	webserver.c:875: printf("established\n\r");
      001972 C0 07            [24] 5084 	push	ar7
      001974 C0 06            [24] 5085 	push	ar6
      001976 C0 05            [24] 5086 	push	ar5
      001978 74r8C            [12] 5087 	mov	a,#___str_13
      00197A C0 E0            [24] 5088 	push	acc
      00197C 74s06            [12] 5089 	mov	a,#(___str_13 >> 8)
      00197E C0 E0            [24] 5090 	push	acc
      001980 74 80            [12] 5091 	mov	a,#0x80
      001982 C0 E0            [24] 5092 	push	acc
      001984 12r00r00         [24] 5093 	lcall	_printf
      001987 15 81            [12] 5094 	dec	sp
      001989 15 81            [12] 5095 	dec	sp
      00198B 15 81            [12] 5096 	dec	sp
      00198D D0 05            [24] 5097 	pop	ar5
      00198F D0 06            [24] 5098 	pop	ar6
      001991 D0 07            [24] 5099 	pop	ar7
                                   5100 ;	webserver.c:876: if (tcpFlags & TCP_FLAG_FIN) {
      001993 ED               [12] 5101 	mov	a,r5
      001994 30 E0 0A         [24] 5102 	jnb	acc.0,00120$
                                   5103 ;	webserver.c:877: makeTcpAck();
      001997 12r15r92         [24] 5104 	lcall	_makeTcpAck
                                   5105 ;	webserver.c:878: connectionState = FIN_WAIT;
      00199A 90r00r00         [24] 5106 	mov	dptr,#_connectionState
      00199D 74 03            [12] 5107 	mov	a,#0x03
      00199F F0               [24] 5108 	movx	@dptr,a
      0019A0 22               [24] 5109 	ret
      0019A1                       5110 00120$:
                                   5111 ;	webserver.c:879: } else if (plen > TCP_DATA_START_P) {
      0019A1 C3               [12] 5112 	clr	c
      0019A2 74 36            [12] 5113 	mov	a,#0x36
      0019A4 9E               [12] 5114 	subb	a,r6
      0019A5 E4               [12] 5115 	clr	a
      0019A6 9F               [12] 5116 	subb	a,r7
      0019A7 50 30            [24] 5117 	jnc	00133$
                                   5118 ;	webserver.c:880: makeTcpAck2();
                                   5119 ;	webserver.c:883: break;
                                   5120 ;	webserver.c:884: case FIN_WAIT:
      0019A9 02r0Dr03         [24] 5121 	ljmp	_makeTcpAck2
      0019AC                       5122 00122$:
                                   5123 ;	webserver.c:885: printf("fin wait\n\r");
      0019AC C0 05            [24] 5124 	push	ar5
      0019AE 74r9A            [12] 5125 	mov	a,#___str_14
      0019B0 C0 E0            [24] 5126 	push	acc
      0019B2 74s06            [12] 5127 	mov	a,#(___str_14 >> 8)
      0019B4 C0 E0            [24] 5128 	push	acc
      0019B6 74 80            [12] 5129 	mov	a,#0x80
      0019B8 C0 E0            [24] 5130 	push	acc
      0019BA 12r00r00         [24] 5131 	lcall	_printf
      0019BD 15 81            [12] 5132 	dec	sp
      0019BF 15 81            [12] 5133 	dec	sp
      0019C1 15 81            [12] 5134 	dec	sp
      0019C3 D0 05            [24] 5135 	pop	ar5
                                   5136 ;	webserver.c:886: if (tcpFlags & TCP_FLAG_ACK)
      0019C5 ED               [12] 5137 	mov	a,r5
      0019C6 30 E4 10         [24] 5138 	jnb	acc.4,00133$
                                   5139 ;	webserver.c:887: connectionState = CLOSED;
      0019C9 90r00r00         [24] 5140 	mov	dptr,#_connectionState
      0019CC 74 04            [12] 5141 	mov	a,#0x04
      0019CE F0               [24] 5142 	movx	@dptr,a
                                   5143 ;	webserver.c:888: break;
                                   5144 ;	webserver.c:889: case ACK_SENT:
      0019CF 22               [24] 5145 	ret
      0019D0                       5146 00125$:
                                   5147 ;	webserver.c:890: makeTcpFinPshAck();
      0019D0 12r07rEA         [24] 5148 	lcall	_makeTcpFinPshAck
                                   5149 ;	webserver.c:891: connectionState = CLOSED;
      0019D3 90r00r00         [24] 5150 	mov	dptr,#_connectionState
      0019D6 74 04            [12] 5151 	mov	a,#0x04
      0019D8 F0               [24] 5152 	movx	@dptr,a
                                   5153 ;	webserver.c:895: }
      0019D9                       5154 00133$:
                                   5155 ;	webserver.c:898: }
      0019D9 22               [24] 5156 	ret
                                   5157 	.area CSEG    (CODE)
                                   5158 	.area CONST   (CODE)
                                   5159 	.area CONST   (CODE)
      000000                       5160 ___str_0:
      000000 74 72 69 61 6C 61 72  5161 	.ascii "trialarpreply"
             70 72 65 70 6C 79
      00000D 0A                    5162 	.db 0x0a
      00000E 0D                    5163 	.db 0x0d
      00000F 00                    5164 	.db 0x00
                                   5165 	.area CSEG    (CODE)
                                   5166 	.area CONST   (CODE)
      000010                       5167 ___str_1:
      000010 48 54 54 50 2F 31 2E  5168 	.ascii "HTTP/1.1 200 OK"
             31 20 32 30 30 20 4F
             4B
      00001F 0D                    5169 	.db 0x0d
      000020 0A                    5170 	.db 0x0a
      000021 43 6F 6E 74 65 6E 74  5171 	.ascii "Content-Type: text/html"
             2D 54 79 70 65 3A 20
             74 65 78 74 2F 68 74
             6D 6C
      000038 0D                    5172 	.db 0x0d
      000039 0A                    5173 	.db 0x0a
      00003A 43 6F 6E 74 65 6E 74  5174 	.ascii "Content-Length: 530"
             2D 4C 65 6E 67 74 68
             3A 20 35 33 30
      00004D 0D                    5175 	.db 0x0d
      00004E 0A                    5176 	.db 0x0a
      00004F 0D                    5177 	.db 0x0d
      000050 0A                    5178 	.db 0x0a
      000051 3C 21 44 4F 43 54 59  5179 	.ascii "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><"
             50 45 20 68 74 6D 6C
             3E 3C 68 74 6D 6C 20
             6C 61 6E 67 3D 27 65
             6E 27 3E 3C 68 65 61
             64 3E 3C 6D 65 74 61
             20 63 68 61 72 73 65
             74 3D 27 55 54 46 2D
             38 27 3E 3C
      00008D 6D 65 74 61 20 6E 61  5180 	.ascii "meta name='viewport' content='width=device-width, initial-sc"
             6D 65 3D 27 76 69 65
             77 70 6F 72 74 27 20
             63 6F 6E 74 65 6E 74
             3D 27 77 69 64 74 68
             3D 64 65 76 69 63 65
             2D 77 69 64 74 68 2C
             20 69 6E 69 74 69 61
             6C 2D 73 63
      0000C9 61 6C 65 3D 31 2E 30  5181 	.ascii "ale=1.0'><title>Ethernet Web Server</title><style>body {font"
             27 3E 3C 74 69 74 6C
             65 3E 45 74 68 65 72
             6E 65 74 20 57 65 62
             20 53 65 72 76 65 72
             3C 2F 74 69 74 6C 65
             3E 3C 73 74 79 6C 65
             3E 62 6F 64 79 20 7B
             66 6F 6E 74
      000105 2D 66 61 6D 69 6C 79  5182 	.ascii "-family: Arial, sans-serif; background-color: #f0f0f0; text-"
             3A 20 41 72 69 61 6C
             2C 20 73 61 6E 73 2D
             73 65 72 69 66 3B 20
             62 61 63 6B 67 72 6F
             75 6E 64 2D 63 6F 6C
             6F 72 3A 20 23 66 30
             66 30 66 30 3B 20 74
             65 78 74 2D
      000141 61 6C 69 67 6E 3A 20  5183 	.ascii "align: center; padding: 20px;}h1 {color: #333333;}p {color: "
             63 65 6E 74 65 72 3B
             20 70 61 64 64 69 6E
             67 3A 20 32 30 70 78
             3B 7D 68 31 20 7B 63
             6F 6C 6F 72 3A 20 23
             33 33 33 33 33 33 3B
             7D 70 20 7B 63 6F 6C
             6F 72 3A 20
      00017D 23 36 36 36 36 36 36  5184 	.ascii "#666666;}</style></head><body><h1>ESD FALL 2024</h1><p>Ether"
             3B 7D 3C 2F 73 74 79
             6C 65 3E 3C 2F 68 65
             61 64 3E 3C 62 6F 64
             79 3E 3C 68 31 3E 45
             53 44 20 46 41 4C 4C
             20 32 30 32 34 3C 2F
             68 31 3E 3C 70 3E 45
             74 68 65 72
      0001B9 6E 65 74 20 62 61 73  5185 	.ascii "net based Web Server for Embedded Systems - NADGIR and KOPPA"
             65 64 20 57 65 62 20
             53 65 72 76 65 72 20
             66 6F 72 20 45 6D 62
             65 64 64 65 64 20 53
             79 73 74 65 6D 73 20
             2D 20 4E 41 44 47 49
             52 20 61 6E 64 20 4B
             4F 50 50 41
      0001F5 20 6D 61 64 65 20 69  5186 	.ascii " made itttt, lessgoooo!!! This web server showcases the powe"
             74 74 74 74 2C 20 6C
             65 73 73 67 6F 6F 6F
             6F 21 21 21 20 54 68
             69 73 20 77 65 62 20
             73 65 72 76 65 72 20
             73 68 6F 77 63 61 73
             65 73 20 74 68 65 20
             70 6F 77 65
      000231 72 20 6F 66 20 6D 69  5187 	.ascii "r of microcontrollers and Ethernet communication. By leverag"
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 73
             20 61 6E 64 20 45 74
             68 65 72 6E 65 74 20
             63 6F 6D 6D 75 6E 69
             63 61 74 69 6F 6E 2E
             20 42 79 20 6C 65 76
             65 72 61 67
      00026D 69 6E 67 20 74 68 65  5188 	.ascii "ing the AT89C51RC2 microcontroller and the ENC28J60 Ethernet"
             20 41 54 38 39 43 35
             31 52 43 32 20 6D 69
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 20
             61 6E 64 20 74 68 65
             20 45 4E 43 32 38 4A
             36 30 20 45 74 68 65
             72 6E 65 74
      0002A9 20 63 6F 6E 74 72 6F  5189 	.ascii " controller, we can serve dynamic web pages and control embe"
             6C 6C 65 72 2C 20 77
             65 20 63 61 6E 20 73
             65 72 76 65 20 64 79
             6E 61 6D 69 63 20 77
             65 62 20 70 61 67 65
             73 20 61 6E 64 20 63
             6F 6E 74 72 6F 6C 20
             65 6D 62 65
      0002E5 64 64 65 64 20 64 65  5190 	.ascii "dded devices remotely. The server allows seamless communicat"
             76 69 63 65 73 20 72
             65 6D 6F 74 65 6C 79
             2E 20 54 68 65 20 73
             65 72 76 65 72 20 61
             6C 6C 6F 77 73 20 73
             65 61 6D 6C 65 73 73
             20 63 6F 6D 6D 75 6E
             69 63 61 74
      000321 69 6F 6E 20 62 65 74  5191 	.ascii "ion between hardware and software, enabling real-time data e"
             77 65 65 6E 20 68 61
             72 64 77 61 72 65 20
             61 6E 64 20 73 6F 66
             74 77 61 72 65 2C 20
             65 6E 61 62 6C 69 6E
             67 20 72 65 61 6C 2D
             74 69 6D 65 20 64 61
             74 61 20 65
      00035D 78 63 68 61 6E 67 65  5192 	.ascii "xchange across the network.</p></body></html>"
             20 61 63 72 6F 73 73
             20 74 68 65 20 6E 65
             74 77 6F 72 6B 2E 3C
             2F 70 3E 3C 2F 62 6F
             64 79 3E 3C 2F 68 74
             6D 6C 3E
      00038A 00                    5193 	.db 0x00
                                   5194 	.area CSEG    (CODE)
                                   5195 	.area CONST   (CODE)
      00038B                       5196 ___str_2:
      00038B 6D 61 6B 65 54 63 70  5197 	.ascii "makeTcpFinPshAck"
             46 69 6E 50 73 68 41
             63 6B
      00039B 0A                    5198 	.db 0x0a
      00039C 0D                    5199 	.db 0x0d
      00039D 00                    5200 	.db 0x00
                                   5201 	.area CSEG    (CODE)
                                   5202 	.area CONST   (CODE)
      00039E                       5203 ___str_3:
      00039E 6D 61 6B 65 54 63 70  5204 	.ascii "makeTcpAck"
             41 63 6B
      0003A8 0A                    5205 	.db 0x0a
      0003A9 0D                    5206 	.db 0x0d
      0003AA 00                    5207 	.db 0x00
                                   5208 	.area CSEG    (CODE)
                                   5209 	.area CONST   (CODE)
      0003AB                       5210 ___str_4:
      0003AB 6D 61 6B 65 54 63 70  5211 	.ascii "makeTcpSynAck"
             53 79 6E 41 63 6B
      0003B8 0A                    5212 	.db 0x0a
      0003B9 0D                    5213 	.db 0x0d
      0003BA 00                    5214 	.db 0x00
                                   5215 	.area CSEG    (CODE)
                                   5216 	.area CONST   (CODE)
      0003BB                       5217 ___str_5:
      0003BB 48 54 54 50 2F 31 2E  5218 	.ascii "HTTP/1.1 200 OK"
             31 20 32 30 30 20 4F
             4B
      0003CA 0D                    5219 	.db 0x0d
      0003CB 0A                    5220 	.db 0x0a
      0003CC 43 6F 6E 74 65 6E 74  5221 	.ascii "Content-Type: text/html"
             2D 54 79 70 65 3A 20
             74 65 78 74 2F 68 74
             6D 6C
      0003E3 0D                    5222 	.db 0x0d
      0003E4 0A                    5223 	.db 0x0a
      0003E5 43 6F 6E 74 65 6E 74  5224 	.ascii "Content-Length: 530"
             2D 4C 65 6E 67 74 68
             3A 20 35 33 30
      0003F8 0D                    5225 	.db 0x0d
      0003F9 0A                    5226 	.db 0x0a
      0003FA 0D                    5227 	.db 0x0d
      0003FB 0A                    5228 	.db 0x0a
      0003FC 3C 21 44 4F 43 54 59  5229 	.ascii "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><"
             50 45 20 68 74 6D 6C
             3E 3C 68 74 6D 6C 20
             6C 61 6E 67 3D 27 65
             6E 27 3E 3C 68 65 61
             64 3E 3C 6D 65 74 61
             20 63 68 61 72 73 65
             74 3D 27 55 54 46 2D
             38 27 3E 3C
      000438 6D 65 74 61 20 6E 61  5230 	.ascii "meta name='viewport' content='width=device-width, initial-sc"
             6D 65 3D 27 76 69 65
             77 70 6F 72 74 27 20
             63 6F 6E 74 65 6E 74
             3D 27 77 69 64 74 68
             3D 64 65 76 69 63 65
             2D 77 69 64 74 68 2C
             20 69 6E 69 74 69 61
             6C 2D 73 63
      000474 61 6C 65 3D 31 2E 30  5231 	.ascii "ale=1.0'><title>Electronics Tree</title><style>body {font-fa"
             27 3E 3C 74 69 74 6C
             65 3E 45 6C 65 63 74
             72 6F 6E 69 63 73 20
             54 72 65 65 3C 2F 74
             69 74 6C 65 3E 3C 73
             74 79 6C 65 3E 62 6F
             64 79 20 7B 66 6F 6E
             74 2D 66 61
      0004B0 6D 69 6C 79 3A 20 41  5232 	.ascii "mily: Arial, sans-serif; background-color: #f0f0f0; text-ali"
             72 69 61 6C 2C 20 73
             61 6E 73 2D 73 65 72
             69 66 3B 20 62 61 63
             6B 67 72 6F 75 6E 64
             2D 63 6F 6C 6F 72 3A
             20 23 66 30 66 30 66
             30 3B 20 74 65 78 74
             2D 61 6C 69
      0004EC 67 6E 3A 20 63 65 6E  5233 	.ascii "gn: center; padding: 20px;}h1 {color: #333333;}p {color: #66"
             74 65 72 3B 20 70 61
             64 64 69 6E 67 3A 20
             32 30 70 78 3B 7D 68
             31 20 7B 63 6F 6C 6F
             72 3A 20 23 33 33 33
             33 33 33 3B 7D 70 20
             7B 63 6F 6C 6F 72 3A
             20 23 36 36
      000528 36 36 36 36 3B 7D 3C  5234 	.ascii "6666;}</style></head><body><h1>ESD FALL 2024</h1><p>Welcome "
             2F 73 74 79 6C 65 3E
             3C 2F 68 65 61 64 3E
             3C 62 6F 64 79 3E 3C
             68 31 3E 45 53 44 20
             46 41 4C 4C 20 32 30
             32 34 3C 2F 68 31 3E
             3C 70 3E 57 65 6C 63
             6F 6D 65 20
      000564 74 6F 20 45 6C 65 63  5235 	.ascii "to Electronics Tree, where our name isn't just a title"
             74 72 6F 6E 69 63 73
             20 54 72 65 65 2C 20
             77 68 65 72 65 20 6F
             75 72 20 6E 61 6D 65
             20 69 73 6E 27 74 20
             6A 75 73 74 20 61 20
             74 69 74 6C 65
      00059A EF                    5236 	.db 0xef
      00059B BF                    5237 	.db 0xbf
      00059C BD                    5238 	.db 0xbd
      00059D 69 74 27 73 20 61 20  5239 	.ascii "it's a commitment to practical growth in your knowledge and "
             63 6F 6D 6D 69 74 6D
             65 6E 74 20 74 6F 20
             70 72 61 63 74 69 63
             61 6C 20 67 72 6F 77
             74 68 20 69 6E 20 79
             6F 75 72 20 6B 6E 6F
             77 6C 65 64 67 65 20
             61 6E 64 20
      0005D9 73 6B 69 6C 6C 73 2E  5240 	.ascii "skills. Think of it like planting a seed.</p></body></html>"
             20 54 68 69 6E 6B 20
             6F 66 20 69 74 20 6C
             69 6B 65 20 70 6C 61
             6E 74 69 6E 67 20 61
             20 73 65 65 64 2E 3C
             2F 70 3E 3C 2F 62 6F
             64 79 3E 3C 2F 68 74
             6D 6C 3E
      000614 00                    5241 	.db 0x00
                                   5242 	.area CSEG    (CODE)
                                   5243 	.area CONST   (CODE)
      000615                       5244 ___str_6:
      000615 68 74 74 70 72 65 73  5245 	.ascii "httpresponse"
             70 6F 6E 73 65
      000621 0A                    5246 	.db 0x0a
      000622 0D                    5247 	.db 0x0d
      000623 00                    5248 	.db 0x00
                                   5249 	.area CSEG    (CODE)
                                   5250 	.area CONST   (CODE)
      000624                       5251 ___str_7:
      000624 74 63 70 61 63 6B     5252 	.ascii "tcpack"
      00062A 0A                    5253 	.db 0x0a
      00062B 0D                    5254 	.db 0x0d
      00062C 00                    5255 	.db 0x00
                                   5256 	.area CSEG    (CODE)
                                   5257 	.area CONST   (CODE)
      00062D                       5258 ___str_8:
      00062D 72 65 66 72 65 73 68  5259 	.ascii "refresharp"
             61 72 70
      000637 0A                    5260 	.db 0x0a
      000638 0D                    5261 	.db 0x0d
      000639 00                    5262 	.db 0x00
                                   5263 	.area CSEG    (CODE)
                                   5264 	.area CONST   (CODE)
      00063A                       5265 ___str_9:
      00063A 54 43 50 28 41 43 4B  5266 	.ascii "TCP(ACK_FIN) packet detected"
             5F 46 49 4E 29 20 70
             61 63 6B 65 74 20 64
             65 74 65 63 74 65 64
      000656 0A                    5267 	.db 0x0a
      000657 0D                    5268 	.db 0x0d
      000658 00                    5269 	.db 0x00
                                   5270 	.area CSEG    (CODE)
                                   5271 	.area CONST   (CODE)
      000659                       5272 ___str_10:
      000659 54 43 50 28 53 59 4E  5273 	.ascii "TCP(SYN) packet detected"
             29 20 70 61 63 6B 65
             74 20 64 65 74 65 63
             74 65 64
      000671 0A                    5274 	.db 0x0a
      000672 0D                    5275 	.db 0x0d
      000673 00                    5276 	.db 0x00
                                   5277 	.area CSEG    (CODE)
                                   5278 	.area CONST   (CODE)
      000674                       5279 ___str_11:
      000674 6C 69 73 74 65 6E     5280 	.ascii "listen"
      00067A 0A                    5281 	.db 0x0a
      00067B 0D                    5282 	.db 0x0d
      00067C 00                    5283 	.db 0x00
                                   5284 	.area CSEG    (CODE)
                                   5285 	.area CONST   (CODE)
      00067D                       5286 ___str_12:
      00067D 73 79 6E 20 72 65 63  5287 	.ascii "syn received"
             65 69 76 65 64
      000689 0A                    5288 	.db 0x0a
      00068A 0D                    5289 	.db 0x0d
      00068B 00                    5290 	.db 0x00
                                   5291 	.area CSEG    (CODE)
                                   5292 	.area CONST   (CODE)
      00068C                       5293 ___str_13:
      00068C 65 73 74 61 62 6C 69  5294 	.ascii "established"
             73 68 65 64
      000697 0A                    5295 	.db 0x0a
      000698 0D                    5296 	.db 0x0d
      000699 00                    5297 	.db 0x00
                                   5298 	.area CSEG    (CODE)
                                   5299 	.area CONST   (CODE)
      00069A                       5300 ___str_14:
      00069A 66 69 6E 20 77 61 69  5301 	.ascii "fin wait"
             74
      0006A2 0A                    5302 	.db 0x0a
      0006A3 0D                    5303 	.db 0x0d
      0006A4 00                    5304 	.db 0x00
                                   5305 	.area CSEG    (CODE)
                                   5306 	.area XINIT   (CODE)
      000000                       5307 __xinit__connectionState:
      000000 00                    5308 	.db #0x00	; 0
                                   5309 	.area CABS    (ABS,CODE)
