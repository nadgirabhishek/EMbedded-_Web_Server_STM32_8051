                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module trial_webserver
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _makeTcpFinPshAck
                                     12 	.globl _makeTcpAck
                                     13 	.globl _makeTcpSynAck
                                     14 	.globl _makeTcpAck2
                                     15 	.globl _makeTcpAck3
                                     16 	.globl _makeArpReply
                                     17 	.globl _spi_control_write
                                     18 	.globl _eth_spi_read
                                     19 	.globl _spi_buffer_read
                                     20 	.globl _mac_spi_read
                                     21 	.globl _calculateTcpChecksum
                                     22 	.globl _calculateIPChecksum
                                     23 	.globl _transmit_tcp_packet
                                     24 	.globl _printf
                                     25 	.globl ___memcpy
                                     26 	.globl _strlen
                                     27 	.globl _memmove
                                     28 	.globl _TF1
                                     29 	.globl _TR1
                                     30 	.globl _TF0
                                     31 	.globl _TR0
                                     32 	.globl _IE1
                                     33 	.globl _IT1
                                     34 	.globl _IE0
                                     35 	.globl _IT0
                                     36 	.globl _SM0
                                     37 	.globl _SM1
                                     38 	.globl _SM2
                                     39 	.globl _REN
                                     40 	.globl _TB8
                                     41 	.globl _RB8
                                     42 	.globl _TI
                                     43 	.globl _RI
                                     44 	.globl _CY
                                     45 	.globl _AC
                                     46 	.globl _F0
                                     47 	.globl _RS1
                                     48 	.globl _RS0
                                     49 	.globl _OV
                                     50 	.globl _F1
                                     51 	.globl _P
                                     52 	.globl _RD
                                     53 	.globl _WR
                                     54 	.globl _T1
                                     55 	.globl _T0
                                     56 	.globl _INT1
                                     57 	.globl _INT0
                                     58 	.globl _TXD0
                                     59 	.globl _TXD
                                     60 	.globl _RXD0
                                     61 	.globl _RXD
                                     62 	.globl _P3_7
                                     63 	.globl _P3_6
                                     64 	.globl _P3_5
                                     65 	.globl _P3_4
                                     66 	.globl _P3_3
                                     67 	.globl _P3_2
                                     68 	.globl _P3_1
                                     69 	.globl _P3_0
                                     70 	.globl _P2_7
                                     71 	.globl _P2_6
                                     72 	.globl _P2_5
                                     73 	.globl _P2_4
                                     74 	.globl _P2_3
                                     75 	.globl _P2_2
                                     76 	.globl _P2_1
                                     77 	.globl _P2_0
                                     78 	.globl _P1_7
                                     79 	.globl _P1_6
                                     80 	.globl _P1_5
                                     81 	.globl _P1_4
                                     82 	.globl _P1_3
                                     83 	.globl _P1_2
                                     84 	.globl _P1_1
                                     85 	.globl _P1_0
                                     86 	.globl _P0_7
                                     87 	.globl _P0_6
                                     88 	.globl _P0_5
                                     89 	.globl _P0_4
                                     90 	.globl _P0_3
                                     91 	.globl _P0_2
                                     92 	.globl _P0_1
                                     93 	.globl _P0_0
                                     94 	.globl _PS
                                     95 	.globl _PT1
                                     96 	.globl _PX1
                                     97 	.globl _PT0
                                     98 	.globl _PX0
                                     99 	.globl _EA
                                    100 	.globl _ES
                                    101 	.globl _ET1
                                    102 	.globl _EX1
                                    103 	.globl _ET0
                                    104 	.globl _EX0
                                    105 	.globl _BREG_F7
                                    106 	.globl _BREG_F6
                                    107 	.globl _BREG_F5
                                    108 	.globl _BREG_F4
                                    109 	.globl _BREG_F3
                                    110 	.globl _BREG_F2
                                    111 	.globl _BREG_F1
                                    112 	.globl _BREG_F0
                                    113 	.globl _P5_7
                                    114 	.globl _P5_6
                                    115 	.globl _P5_5
                                    116 	.globl _P5_4
                                    117 	.globl _P5_3
                                    118 	.globl _P5_2
                                    119 	.globl _P5_1
                                    120 	.globl _P5_0
                                    121 	.globl _P4_7
                                    122 	.globl _P4_6
                                    123 	.globl _P4_5
                                    124 	.globl _P4_4
                                    125 	.globl _P4_3
                                    126 	.globl _P4_2
                                    127 	.globl _P4_1
                                    128 	.globl _P4_0
                                    129 	.globl _PX0L
                                    130 	.globl _PT0L
                                    131 	.globl _PX1L
                                    132 	.globl _PT1L
                                    133 	.globl _PSL
                                    134 	.globl _PT2L
                                    135 	.globl _PPCL
                                    136 	.globl _EC
                                    137 	.globl _CCF0
                                    138 	.globl _CCF1
                                    139 	.globl _CCF2
                                    140 	.globl _CCF3
                                    141 	.globl _CCF4
                                    142 	.globl _CR
                                    143 	.globl _CF
                                    144 	.globl _TF2
                                    145 	.globl _EXF2
                                    146 	.globl _RCLK
                                    147 	.globl _TCLK
                                    148 	.globl _EXEN2
                                    149 	.globl _TR2
                                    150 	.globl _C_T2
                                    151 	.globl _CP_RL2
                                    152 	.globl _T2CON_7
                                    153 	.globl _T2CON_6
                                    154 	.globl _T2CON_5
                                    155 	.globl _T2CON_4
                                    156 	.globl _T2CON_3
                                    157 	.globl _T2CON_2
                                    158 	.globl _T2CON_1
                                    159 	.globl _T2CON_0
                                    160 	.globl _PT2
                                    161 	.globl _ET2
                                    162 	.globl _TMOD
                                    163 	.globl _TL1
                                    164 	.globl _TL0
                                    165 	.globl _TH1
                                    166 	.globl _TH0
                                    167 	.globl _TCON
                                    168 	.globl _SP
                                    169 	.globl _SCON
                                    170 	.globl _SBUF0
                                    171 	.globl _SBUF
                                    172 	.globl _PSW
                                    173 	.globl _PCON
                                    174 	.globl _P3
                                    175 	.globl _P2
                                    176 	.globl _P1
                                    177 	.globl _P0
                                    178 	.globl _IP
                                    179 	.globl _IE
                                    180 	.globl _DP0L
                                    181 	.globl _DPL
                                    182 	.globl _DP0H
                                    183 	.globl _DPH
                                    184 	.globl _B
                                    185 	.globl _ACC
                                    186 	.globl _EECON
                                    187 	.globl _KBF
                                    188 	.globl _KBE
                                    189 	.globl _KBLS
                                    190 	.globl _BRL
                                    191 	.globl _BDRCON
                                    192 	.globl _T2MOD
                                    193 	.globl _SPDAT
                                    194 	.globl _SPSTA
                                    195 	.globl _SPCON
                                    196 	.globl _SADEN
                                    197 	.globl _SADDR
                                    198 	.globl _WDTPRG
                                    199 	.globl _WDTRST
                                    200 	.globl _P5
                                    201 	.globl _P4
                                    202 	.globl _IPH1
                                    203 	.globl _IPL1
                                    204 	.globl _IPH0
                                    205 	.globl _IPL0
                                    206 	.globl _IEN1
                                    207 	.globl _IEN0
                                    208 	.globl _CMOD
                                    209 	.globl _CL
                                    210 	.globl _CH
                                    211 	.globl _CCON
                                    212 	.globl _CCAPM4
                                    213 	.globl _CCAPM3
                                    214 	.globl _CCAPM2
                                    215 	.globl _CCAPM1
                                    216 	.globl _CCAPM0
                                    217 	.globl _CCAP4L
                                    218 	.globl _CCAP3L
                                    219 	.globl _CCAP2L
                                    220 	.globl _CCAP1L
                                    221 	.globl _CCAP0L
                                    222 	.globl _CCAP4H
                                    223 	.globl _CCAP3H
                                    224 	.globl _CCAP2H
                                    225 	.globl _CCAP1H
                                    226 	.globl _CCAP0H
                                    227 	.globl _CKCON1
                                    228 	.globl _CKCON0
                                    229 	.globl _CKRL
                                    230 	.globl _AUXR1
                                    231 	.globl _AUXR
                                    232 	.globl _TH2
                                    233 	.globl _TL2
                                    234 	.globl _RCAP2H
                                    235 	.globl _RCAP2L
                                    236 	.globl _T2CON
                                    237 	.globl _connectionState
                                    238 	.globl _buffer
                                    239 	.globl _prevAck
                                    240 	.globl _prevSeq
                                    241 	.globl _packetReceive
                                    242 	.globl _packetLoop
                                    243 ;--------------------------------------------------------
                                    244 ; special function registers
                                    245 ;--------------------------------------------------------
                                    246 	.area RSEG    (ABS,DATA)
      000000                        247 	.org 0x0000
                           0000C8   248 _T2CON	=	0x00c8
                           0000CA   249 _RCAP2L	=	0x00ca
                           0000CB   250 _RCAP2H	=	0x00cb
                           0000CC   251 _TL2	=	0x00cc
                           0000CD   252 _TH2	=	0x00cd
                           00008E   253 _AUXR	=	0x008e
                           0000A2   254 _AUXR1	=	0x00a2
                           000097   255 _CKRL	=	0x0097
                           00008F   256 _CKCON0	=	0x008f
                           0000AF   257 _CKCON1	=	0x00af
                           0000FA   258 _CCAP0H	=	0x00fa
                           0000FB   259 _CCAP1H	=	0x00fb
                           0000FC   260 _CCAP2H	=	0x00fc
                           0000FD   261 _CCAP3H	=	0x00fd
                           0000FE   262 _CCAP4H	=	0x00fe
                           0000EA   263 _CCAP0L	=	0x00ea
                           0000EB   264 _CCAP1L	=	0x00eb
                           0000EC   265 _CCAP2L	=	0x00ec
                           0000ED   266 _CCAP3L	=	0x00ed
                           0000EE   267 _CCAP4L	=	0x00ee
                           0000DA   268 _CCAPM0	=	0x00da
                           0000DB   269 _CCAPM1	=	0x00db
                           0000DC   270 _CCAPM2	=	0x00dc
                           0000DD   271 _CCAPM3	=	0x00dd
                           0000DE   272 _CCAPM4	=	0x00de
                           0000D8   273 _CCON	=	0x00d8
                           0000F9   274 _CH	=	0x00f9
                           0000E9   275 _CL	=	0x00e9
                           0000D9   276 _CMOD	=	0x00d9
                           0000A8   277 _IEN0	=	0x00a8
                           0000B1   278 _IEN1	=	0x00b1
                           0000B8   279 _IPL0	=	0x00b8
                           0000B7   280 _IPH0	=	0x00b7
                           0000B2   281 _IPL1	=	0x00b2
                           0000B3   282 _IPH1	=	0x00b3
                           0000C0   283 _P4	=	0x00c0
                           0000E8   284 _P5	=	0x00e8
                           0000A6   285 _WDTRST	=	0x00a6
                           0000A7   286 _WDTPRG	=	0x00a7
                           0000A9   287 _SADDR	=	0x00a9
                           0000B9   288 _SADEN	=	0x00b9
                           0000C3   289 _SPCON	=	0x00c3
                           0000C4   290 _SPSTA	=	0x00c4
                           0000C5   291 _SPDAT	=	0x00c5
                           0000C9   292 _T2MOD	=	0x00c9
                           00009B   293 _BDRCON	=	0x009b
                           00009A   294 _BRL	=	0x009a
                           00009C   295 _KBLS	=	0x009c
                           00009D   296 _KBE	=	0x009d
                           00009E   297 _KBF	=	0x009e
                           0000D2   298 _EECON	=	0x00d2
                           0000E0   299 _ACC	=	0x00e0
                           0000F0   300 _B	=	0x00f0
                           000083   301 _DPH	=	0x0083
                           000083   302 _DP0H	=	0x0083
                           000082   303 _DPL	=	0x0082
                           000082   304 _DP0L	=	0x0082
                           0000A8   305 _IE	=	0x00a8
                           0000B8   306 _IP	=	0x00b8
                           000080   307 _P0	=	0x0080
                           000090   308 _P1	=	0x0090
                           0000A0   309 _P2	=	0x00a0
                           0000B0   310 _P3	=	0x00b0
                           000087   311 _PCON	=	0x0087
                           0000D0   312 _PSW	=	0x00d0
                           000099   313 _SBUF	=	0x0099
                           000099   314 _SBUF0	=	0x0099
                           000098   315 _SCON	=	0x0098
                           000081   316 _SP	=	0x0081
                           000088   317 _TCON	=	0x0088
                           00008C   318 _TH0	=	0x008c
                           00008D   319 _TH1	=	0x008d
                           00008A   320 _TL0	=	0x008a
                           00008B   321 _TL1	=	0x008b
                           000089   322 _TMOD	=	0x0089
                                    323 ;--------------------------------------------------------
                                    324 ; special function bits
                                    325 ;--------------------------------------------------------
                                    326 	.area RSEG    (ABS,DATA)
      000000                        327 	.org 0x0000
                           0000AD   328 _ET2	=	0x00ad
                           0000BD   329 _PT2	=	0x00bd
                           0000C8   330 _T2CON_0	=	0x00c8
                           0000C9   331 _T2CON_1	=	0x00c9
                           0000CA   332 _T2CON_2	=	0x00ca
                           0000CB   333 _T2CON_3	=	0x00cb
                           0000CC   334 _T2CON_4	=	0x00cc
                           0000CD   335 _T2CON_5	=	0x00cd
                           0000CE   336 _T2CON_6	=	0x00ce
                           0000CF   337 _T2CON_7	=	0x00cf
                           0000C8   338 _CP_RL2	=	0x00c8
                           0000C9   339 _C_T2	=	0x00c9
                           0000CA   340 _TR2	=	0x00ca
                           0000CB   341 _EXEN2	=	0x00cb
                           0000CC   342 _TCLK	=	0x00cc
                           0000CD   343 _RCLK	=	0x00cd
                           0000CE   344 _EXF2	=	0x00ce
                           0000CF   345 _TF2	=	0x00cf
                           0000DF   346 _CF	=	0x00df
                           0000DE   347 _CR	=	0x00de
                           0000DC   348 _CCF4	=	0x00dc
                           0000DB   349 _CCF3	=	0x00db
                           0000DA   350 _CCF2	=	0x00da
                           0000D9   351 _CCF1	=	0x00d9
                           0000D8   352 _CCF0	=	0x00d8
                           0000AE   353 _EC	=	0x00ae
                           0000BE   354 _PPCL	=	0x00be
                           0000BD   355 _PT2L	=	0x00bd
                           0000BC   356 _PSL	=	0x00bc
                           0000BB   357 _PT1L	=	0x00bb
                           0000BA   358 _PX1L	=	0x00ba
                           0000B9   359 _PT0L	=	0x00b9
                           0000B8   360 _PX0L	=	0x00b8
                           0000C0   361 _P4_0	=	0x00c0
                           0000C1   362 _P4_1	=	0x00c1
                           0000C2   363 _P4_2	=	0x00c2
                           0000C3   364 _P4_3	=	0x00c3
                           0000C4   365 _P4_4	=	0x00c4
                           0000C5   366 _P4_5	=	0x00c5
                           0000C6   367 _P4_6	=	0x00c6
                           0000C7   368 _P4_7	=	0x00c7
                           0000E8   369 _P5_0	=	0x00e8
                           0000E9   370 _P5_1	=	0x00e9
                           0000EA   371 _P5_2	=	0x00ea
                           0000EB   372 _P5_3	=	0x00eb
                           0000EC   373 _P5_4	=	0x00ec
                           0000ED   374 _P5_5	=	0x00ed
                           0000EE   375 _P5_6	=	0x00ee
                           0000EF   376 _P5_7	=	0x00ef
                           0000F0   377 _BREG_F0	=	0x00f0
                           0000F1   378 _BREG_F1	=	0x00f1
                           0000F2   379 _BREG_F2	=	0x00f2
                           0000F3   380 _BREG_F3	=	0x00f3
                           0000F4   381 _BREG_F4	=	0x00f4
                           0000F5   382 _BREG_F5	=	0x00f5
                           0000F6   383 _BREG_F6	=	0x00f6
                           0000F7   384 _BREG_F7	=	0x00f7
                           0000A8   385 _EX0	=	0x00a8
                           0000A9   386 _ET0	=	0x00a9
                           0000AA   387 _EX1	=	0x00aa
                           0000AB   388 _ET1	=	0x00ab
                           0000AC   389 _ES	=	0x00ac
                           0000AF   390 _EA	=	0x00af
                           0000B8   391 _PX0	=	0x00b8
                           0000B9   392 _PT0	=	0x00b9
                           0000BA   393 _PX1	=	0x00ba
                           0000BB   394 _PT1	=	0x00bb
                           0000BC   395 _PS	=	0x00bc
                           000080   396 _P0_0	=	0x0080
                           000081   397 _P0_1	=	0x0081
                           000082   398 _P0_2	=	0x0082
                           000083   399 _P0_3	=	0x0083
                           000084   400 _P0_4	=	0x0084
                           000085   401 _P0_5	=	0x0085
                           000086   402 _P0_6	=	0x0086
                           000087   403 _P0_7	=	0x0087
                           000090   404 _P1_0	=	0x0090
                           000091   405 _P1_1	=	0x0091
                           000092   406 _P1_2	=	0x0092
                           000093   407 _P1_3	=	0x0093
                           000094   408 _P1_4	=	0x0094
                           000095   409 _P1_5	=	0x0095
                           000096   410 _P1_6	=	0x0096
                           000097   411 _P1_7	=	0x0097
                           0000A0   412 _P2_0	=	0x00a0
                           0000A1   413 _P2_1	=	0x00a1
                           0000A2   414 _P2_2	=	0x00a2
                           0000A3   415 _P2_3	=	0x00a3
                           0000A4   416 _P2_4	=	0x00a4
                           0000A5   417 _P2_5	=	0x00a5
                           0000A6   418 _P2_6	=	0x00a6
                           0000A7   419 _P2_7	=	0x00a7
                           0000B0   420 _P3_0	=	0x00b0
                           0000B1   421 _P3_1	=	0x00b1
                           0000B2   422 _P3_2	=	0x00b2
                           0000B3   423 _P3_3	=	0x00b3
                           0000B4   424 _P3_4	=	0x00b4
                           0000B5   425 _P3_5	=	0x00b5
                           0000B6   426 _P3_6	=	0x00b6
                           0000B7   427 _P3_7	=	0x00b7
                           0000B0   428 _RXD	=	0x00b0
                           0000B0   429 _RXD0	=	0x00b0
                           0000B1   430 _TXD	=	0x00b1
                           0000B1   431 _TXD0	=	0x00b1
                           0000B2   432 _INT0	=	0x00b2
                           0000B3   433 _INT1	=	0x00b3
                           0000B4   434 _T0	=	0x00b4
                           0000B5   435 _T1	=	0x00b5
                           0000B6   436 _WR	=	0x00b6
                           0000B7   437 _RD	=	0x00b7
                           0000D0   438 _P	=	0x00d0
                           0000D1   439 _F1	=	0x00d1
                           0000D2   440 _OV	=	0x00d2
                           0000D3   441 _RS0	=	0x00d3
                           0000D4   442 _RS1	=	0x00d4
                           0000D5   443 _F0	=	0x00d5
                           0000D6   444 _AC	=	0x00d6
                           0000D7   445 _CY	=	0x00d7
                           000098   446 _RI	=	0x0098
                           000099   447 _TI	=	0x0099
                           00009A   448 _RB8	=	0x009a
                           00009B   449 _TB8	=	0x009b
                           00009C   450 _REN	=	0x009c
                           00009D   451 _SM2	=	0x009d
                           00009E   452 _SM1	=	0x009e
                           00009F   453 _SM0	=	0x009f
                           000088   454 _IT0	=	0x0088
                           000089   455 _IE0	=	0x0089
                           00008A   456 _IT1	=	0x008a
                           00008B   457 _IE1	=	0x008b
                           00008C   458 _TR0	=	0x008c
                           00008D   459 _TF0	=	0x008d
                           00008E   460 _TR1	=	0x008e
                           00008F   461 _TF1	=	0x008f
                                    462 ;--------------------------------------------------------
                                    463 ; overlayable register banks
                                    464 ;--------------------------------------------------------
                                    465 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        466 	.ds 8
                                    467 ;--------------------------------------------------------
                                    468 ; internal ram data
                                    469 ;--------------------------------------------------------
                                    470 	.area DSEG    (DATA)
      000000                        471 _makeTcpAck3_sloc0_1_0:
      000000                        472 	.ds 4
      000004                        473 _makeTcpAck2_sloc0_1_0:
      000004                        474 	.ds 2
      000006                        475 _makeTcpAck2_sloc1_1_0:
      000006                        476 	.ds 4
      00000A                        477 _makeTcpAck2_sloc2_1_0:
      00000A                        478 	.ds 4
                                    479 ;--------------------------------------------------------
                                    480 ; overlayable items in internal ram
                                    481 ;--------------------------------------------------------
                                    482 ;--------------------------------------------------------
                                    483 ; indirectly addressable internal ram data
                                    484 ;--------------------------------------------------------
                                    485 	.area ISEG    (DATA)
                                    486 ;--------------------------------------------------------
                                    487 ; absolute internal ram data
                                    488 ;--------------------------------------------------------
                                    489 	.area IABS    (ABS,DATA)
                                    490 	.area IABS    (ABS,DATA)
                                    491 ;--------------------------------------------------------
                                    492 ; bit data
                                    493 ;--------------------------------------------------------
                                    494 	.area BSEG    (BIT)
                                    495 ;--------------------------------------------------------
                                    496 ; paged external ram data
                                    497 ;--------------------------------------------------------
                                    498 	.area PSEG    (PAG,XDATA)
                                    499 ;--------------------------------------------------------
                                    500 ; uninitialized external ram data
                                    501 ;--------------------------------------------------------
                                    502 	.area XSEG    (XDATA)
      000000                        503 _prevSeq::
      000000                        504 	.ds 4
      000004                        505 _prevAck::
      000004                        506 	.ds 4
      000008                        507 _buffer::
      000008                        508 	.ds 1500
      0005E4                        509 _makeArpReply_device_mac_10000_120:
      0005E4                        510 	.ds 6
      0005EA                        511 _makeArpReply_target_mac_10000_120:
      0005EA                        512 	.ds 6
      0005F0                        513 _makeArpReply_device_ip_10000_120:
      0005F0                        514 	.ds 4
      0005F4                        515 _makeArpReply_target_ip_10000_120:
      0005F4                        516 	.ds 4
      0005F8                        517 _makeTcpAck3_device_mac_10000_121:
      0005F8                        518 	.ds 6
      0005FE                        519 _makeTcpAck3_target_mac_10000_121:
      0005FE                        520 	.ds 6
      000604                        521 _makeTcpAck3_device_ip_10000_121:
      000604                        522 	.ds 4
      000608                        523 _makeTcpAck3_target_ip_10000_121:
      000608                        524 	.ds 4
      00060C                        525 _makeTcpAck2_device_mac_10000_125:
      00060C                        526 	.ds 6
      000612                        527 _makeTcpAck2_target_mac_10000_125:
      000612                        528 	.ds 6
      000618                        529 _makeTcpAck2_device_ip_10000_125:
      000618                        530 	.ds 4
      00061C                        531 _makeTcpAck2_target_ip_10000_125:
      00061C                        532 	.ds 4
      000620                        533 _makeTcpSynAck_device_mac_10000_129:
      000620                        534 	.ds 6
      000626                        535 _makeTcpSynAck_target_mac_10000_129:
      000626                        536 	.ds 6
      00062C                        537 _makeTcpSynAck_device_ip_10000_129:
      00062C                        538 	.ds 4
      000630                        539 _makeTcpSynAck_target_ip_10000_129:
      000630                        540 	.ds 4
      000634                        541 _makeTcpAck_device_mac_10000_134:
      000634                        542 	.ds 6
      00063A                        543 _makeTcpAck_target_mac_10000_134:
      00063A                        544 	.ds 6
      000640                        545 _makeTcpAck_device_ip_10000_134:
      000640                        546 	.ds 4
      000644                        547 _makeTcpAck_target_ip_10000_134:
      000644                        548 	.ds 4
      000648                        549 _makeTcpFinPshAck_device_mac_10000_135:
      000648                        550 	.ds 6
      00064E                        551 _makeTcpFinPshAck_target_mac_10000_135:
      00064E                        552 	.ds 6
      000654                        553 _makeTcpFinPshAck_device_ip_10000_135:
      000654                        554 	.ds 4
      000658                        555 _makeTcpFinPshAck_target_ip_10000_135:
      000658                        556 	.ds 4
      00065C                        557 _makeTcpFinPshAck_serverSeqNum_10002_137:
      00065C                        558 	.ds 4
      000660                        559 _makeTcpFinPshAck_ackNum_10002_137:
      000660                        560 	.ds 4
      000664                        561 _packetReceive_gNextPacketPtr_10000_139:
      000664                        562 	.ds 2
      000666                        563 _packetReceive_unreleasedPacket_10000_139:
      000666                        564 	.ds 1
      000667                        565 _packetReceive_len_10000_139:
      000667                        566 	.ds 2
      000669                        567 _packetReceive_header_20002_145:
      000669                        568 	.ds 6
      00066F                        569 _packetReceive_start_20003_146:
      00066F                        570 	.ds 2
                                    571 ;--------------------------------------------------------
                                    572 ; absolute external ram data
                                    573 ;--------------------------------------------------------
                                    574 	.area XABS    (ABS,XDATA)
                                    575 ;--------------------------------------------------------
                                    576 ; initialized external ram data
                                    577 ;--------------------------------------------------------
                                    578 	.area XISEG   (XDATA)
      000000                        579 _connectionState::
      000000                        580 	.ds 1
                                    581 	.area HOME    (CODE)
                                    582 	.area GSINIT0 (CODE)
                                    583 	.area GSINIT1 (CODE)
                                    584 	.area GSINIT2 (CODE)
                                    585 	.area GSINIT3 (CODE)
                                    586 	.area GSINIT4 (CODE)
                                    587 	.area GSINIT5 (CODE)
                                    588 	.area GSINIT  (CODE)
                                    589 	.area GSFINAL (CODE)
                                    590 	.area CSEG    (CODE)
                                    591 ;--------------------------------------------------------
                                    592 ; global & static initialisations
                                    593 ;--------------------------------------------------------
                                    594 	.area HOME    (CODE)
                                    595 	.area GSINIT  (CODE)
                                    596 	.area GSFINAL (CODE)
                                    597 	.area GSINIT  (CODE)
                                    598 ;------------------------------------------------------------
                                    599 ;Allocation info for local variables in function 'packetReceive'
                                    600 ;------------------------------------------------------------
                                    601 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_139'
                                    602 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_139'
                                    603 ;len                       Allocated with name '_packetReceive_len_10000_139'
                                    604 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_141'
                                    605 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_143'
                                    606 ;header                    Allocated with name '_packetReceive_header_20002_145'
                                    607 ;start                     Allocated with name '_packetReceive_start_20003_146'
                                    608 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_147'
                                    609 ;------------------------------------------------------------
                                    610 ;	trial_webserver.c:417: static uint16_t gNextPacketPtr = RX_BUFFER_START;
      000000 90r06r64         [24]  611 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000003 E4               [12]  612 	clr	a
      000004 F0               [24]  613 	movx	@dptr,a
      000005 A3               [24]  614 	inc	dptr
      000006 F0               [24]  615 	movx	@dptr,a
                                    616 ;	trial_webserver.c:418: static bool unreleasedPacket = false;
      000007 90r06r66         [24]  617 	mov	dptr,#_packetReceive_unreleasedPacket_10000_139
      00000A F0               [24]  618 	movx	@dptr,a
                                    619 ;--------------------------------------------------------
                                    620 ; Home
                                    621 ;--------------------------------------------------------
                                    622 	.area HOME    (CODE)
                                    623 	.area HOME    (CODE)
                                    624 ;--------------------------------------------------------
                                    625 ; code
                                    626 ;--------------------------------------------------------
                                    627 	.area CSEG    (CODE)
                                    628 ;------------------------------------------------------------
                                    629 ;Allocation info for local variables in function 'makeArpReply'
                                    630 ;------------------------------------------------------------
                                    631 ;device_mac                Allocated with name '_makeArpReply_device_mac_10000_120'
                                    632 ;target_mac                Allocated with name '_makeArpReply_target_mac_10000_120'
                                    633 ;device_ip                 Allocated with name '_makeArpReply_device_ip_10000_120'
                                    634 ;target_ip                 Allocated with name '_makeArpReply_target_ip_10000_120'
                                    635 ;------------------------------------------------------------
                                    636 ;	trial_webserver.c:21: void makeArpReply()
                                    637 ;	-----------------------------------------
                                    638 ;	 function makeArpReply
                                    639 ;	-----------------------------------------
      000000                        640 _makeArpReply:
                           000007   641 	ar7 = 0x07
                           000006   642 	ar6 = 0x06
                           000005   643 	ar5 = 0x05
                           000004   644 	ar4 = 0x04
                           000003   645 	ar3 = 0x03
                           000002   646 	ar2 = 0x02
                           000001   647 	ar1 = 0x01
                           000000   648 	ar0 = 0x00
                                    649 ;	trial_webserver.c:23: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      000000 90r05rE4         [24]  650 	mov	dptr,#_makeArpReply_device_mac_10000_120
      000003 74 02            [12]  651 	mov	a,#0x02
      000005 F0               [24]  652 	movx	@dptr,a
      000006 90r05rE5         [24]  653 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0001)
      000009 74 11            [12]  654 	mov	a,#0x11
      00000B F0               [24]  655 	movx	@dptr,a
      00000C 90r05rE6         [24]  656 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0002)
      00000F 23               [12]  657 	rl	a
      000010 F0               [24]  658 	movx	@dptr,a
      000011 90r05rE7         [24]  659 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0003)
      000014 74 33            [12]  660 	mov	a,#0x33
      000016 F0               [24]  661 	movx	@dptr,a
      000017 90r05rE8         [24]  662 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0004)
      00001A 74 44            [12]  663 	mov	a,#0x44
      00001C F0               [24]  664 	movx	@dptr,a
      00001D 90r05rE9         [24]  665 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0005)
      000020 74 55            [12]  666 	mov	a,#0x55
      000022 F0               [24]  667 	movx	@dptr,a
                                    668 ;	trial_webserver.c:24: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      000023 90r05rEA         [24]  669 	mov	dptr,#_makeArpReply_target_mac_10000_120
      000026 74 F8            [12]  670 	mov	a,#0xf8
      000028 F0               [24]  671 	movx	@dptr,a
      000029 90r05rEB         [24]  672 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0001)
      00002C 74 75            [12]  673 	mov	a,#0x75
      00002E F0               [24]  674 	movx	@dptr,a
      00002F 90r05rEC         [24]  675 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0002)
      000032 74 A4            [12]  676 	mov	a,#0xa4
      000034 F0               [24]  677 	movx	@dptr,a
      000035 90r05rED         [24]  678 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0003)
      000038 74 8C            [12]  679 	mov	a,#0x8c
      00003A F0               [24]  680 	movx	@dptr,a
      00003B 90r05rEE         [24]  681 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0004)
      00003E 74 41            [12]  682 	mov	a,#0x41
      000040 F0               [24]  683 	movx	@dptr,a
      000041 90r05rEF         [24]  684 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0005)
      000044 74 31            [12]  685 	mov	a,#0x31
      000046 F0               [24]  686 	movx	@dptr,a
                                    687 ;	trial_webserver.c:25: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000047 90r05rF0         [24]  688 	mov	dptr,#_makeArpReply_device_ip_10000_120
      00004A 74 C0            [12]  689 	mov	a,#0xc0
      00004C F0               [24]  690 	movx	@dptr,a
      00004D 90r05rF1         [24]  691 	mov	dptr,#(_makeArpReply_device_ip_10000_120 + 0x0001)
      000050 74 A8            [12]  692 	mov	a,#0xa8
      000052 F0               [24]  693 	movx	@dptr,a
      000053 90r05rF2         [24]  694 	mov	dptr,#(_makeArpReply_device_ip_10000_120 + 0x0002)
      000056 74 01            [12]  695 	mov	a,#0x01
      000058 F0               [24]  696 	movx	@dptr,a
      000059 90r05rF3         [24]  697 	mov	dptr,#(_makeArpReply_device_ip_10000_120 + 0x0003)
      00005C 74 64            [12]  698 	mov	a,#0x64
      00005E F0               [24]  699 	movx	@dptr,a
                                    700 ;	trial_webserver.c:26: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      00005F 90r05rF4         [24]  701 	mov	dptr,#_makeArpReply_target_ip_10000_120
      000062 74 C0            [12]  702 	mov	a,#0xc0
      000064 F0               [24]  703 	movx	@dptr,a
      000065 90r05rF5         [24]  704 	mov	dptr,#(_makeArpReply_target_ip_10000_120 + 0x0001)
      000068 74 A8            [12]  705 	mov	a,#0xa8
      00006A F0               [24]  706 	movx	@dptr,a
      00006B 90r05rF6         [24]  707 	mov	dptr,#(_makeArpReply_target_ip_10000_120 + 0x0002)
      00006E 74 01            [12]  708 	mov	a,#0x01
      000070 F0               [24]  709 	movx	@dptr,a
      000071 90r05rF7         [24]  710 	mov	dptr,#(_makeArpReply_target_ip_10000_120 + 0x0003)
      000074 F0               [24]  711 	movx	@dptr,a
                                    712 ;	trial_webserver.c:27: printf("trialarpreply\n\r");
      000075 74r00            [12]  713 	mov	a,#___str_0
      000077 C0 E0            [24]  714 	push	acc
      000079 74s00            [12]  715 	mov	a,#(___str_0 >> 8)
      00007B C0 E0            [24]  716 	push	acc
      00007D 74 80            [12]  717 	mov	a,#0x80
      00007F C0 E0            [24]  718 	push	acc
      000081 12r00r00         [24]  719 	lcall	_printf
      000084 15 81            [12]  720 	dec	sp
      000086 15 81            [12]  721 	dec	sp
      000088 15 81            [12]  722 	dec	sp
                                    723 ;	trial_webserver.c:29: memmove(&buffer[1], &buffer[0], 42);
      00008A 90r00r00         [24]  724 	mov	dptr,#_memmove_PARM_2
      00008D 74r08            [12]  725 	mov	a,#_buffer
      00008F F0               [24]  726 	movx	@dptr,a
      000090 74s00            [12]  727 	mov	a,#(_buffer >> 8)
      000092 A3               [24]  728 	inc	dptr
      000093 F0               [24]  729 	movx	@dptr,a
      000094 E4               [12]  730 	clr	a
      000095 A3               [24]  731 	inc	dptr
      000096 F0               [24]  732 	movx	@dptr,a
      000097 90r00r00         [24]  733 	mov	dptr,#_memmove_PARM_3
      00009A 74 2A            [12]  734 	mov	a,#0x2a
      00009C F0               [24]  735 	movx	@dptr,a
      00009D E4               [12]  736 	clr	a
      00009E A3               [24]  737 	inc	dptr
      00009F F0               [24]  738 	movx	@dptr,a
      0000A0 90r00r09         [24]  739 	mov	dptr,#(_buffer + 0x0001)
      0000A3 F5 F0            [12]  740 	mov	b,a
      0000A5 12r00r00         [24]  741 	lcall	_memmove
                                    742 ;	trial_webserver.c:32: buffer[0] = 0x0E;
      0000A8 90r00r08         [24]  743 	mov	dptr,#_buffer
      0000AB 74 0E            [12]  744 	mov	a,#0x0e
      0000AD F0               [24]  745 	movx	@dptr,a
                                    746 ;	trial_webserver.c:35: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6); // Destination MAC
      0000AE 90r00r00         [24]  747 	mov	dptr,#___memcpy_PARM_2
      0000B1 74r0F            [12]  748 	mov	a,#(_buffer + 0x0007)
      0000B3 F0               [24]  749 	movx	@dptr,a
      0000B4 74s00            [12]  750 	mov	a,#((_buffer + 0x0007) >> 8)
      0000B6 A3               [24]  751 	inc	dptr
      0000B7 F0               [24]  752 	movx	@dptr,a
      0000B8 E4               [12]  753 	clr	a
      0000B9 A3               [24]  754 	inc	dptr
      0000BA F0               [24]  755 	movx	@dptr,a
      0000BB 90r00r00         [24]  756 	mov	dptr,#___memcpy_PARM_3
      0000BE 74 06            [12]  757 	mov	a,#0x06
      0000C0 F0               [24]  758 	movx	@dptr,a
      0000C1 E4               [12]  759 	clr	a
      0000C2 A3               [24]  760 	inc	dptr
      0000C3 F0               [24]  761 	movx	@dptr,a
      0000C4 90r00r09         [24]  762 	mov	dptr,#(_buffer + 0x0001)
      0000C7 F5 F0            [12]  763 	mov	b,a
      0000C9 12r00r00         [24]  764 	lcall	___memcpy
                                    765 ;	trial_webserver.c:38: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6); // Source MAC
      0000CC 90r00r00         [24]  766 	mov	dptr,#___memcpy_PARM_2
      0000CF 74rE4            [12]  767 	mov	a,#_makeArpReply_device_mac_10000_120
      0000D1 F0               [24]  768 	movx	@dptr,a
      0000D2 74s05            [12]  769 	mov	a,#(_makeArpReply_device_mac_10000_120 >> 8)
      0000D4 A3               [24]  770 	inc	dptr
      0000D5 F0               [24]  771 	movx	@dptr,a
      0000D6 E4               [12]  772 	clr	a
      0000D7 A3               [24]  773 	inc	dptr
      0000D8 F0               [24]  774 	movx	@dptr,a
      0000D9 90r00r00         [24]  775 	mov	dptr,#___memcpy_PARM_3
      0000DC 74 06            [12]  776 	mov	a,#0x06
      0000DE F0               [24]  777 	movx	@dptr,a
      0000DF E4               [12]  778 	clr	a
      0000E0 A3               [24]  779 	inc	dptr
      0000E1 F0               [24]  780 	movx	@dptr,a
      0000E2 90r00r0F         [24]  781 	mov	dptr,#(_buffer + 0x0007)
      0000E5 F5 F0            [12]  782 	mov	b,a
      0000E7 12r00r00         [24]  783 	lcall	___memcpy
                                    784 ;	trial_webserver.c:41: buffer[1 + 21] = 0x02; // ARP Reply opcode
      0000EA 90r00r1E         [24]  785 	mov	dptr,#(_buffer + 0x0016)
      0000ED 74 02            [12]  786 	mov	a,#0x02
      0000EF F0               [24]  787 	movx	@dptr,a
                                    788 ;	trial_webserver.c:44: memcpy(&buffer[1 + 32], &buffer[1 + 22], 6); // Target MAC = Sender MAC from request
      0000F0 90r00r00         [24]  789 	mov	dptr,#___memcpy_PARM_2
      0000F3 74r1F            [12]  790 	mov	a,#(_buffer + 0x0017)
      0000F5 F0               [24]  791 	movx	@dptr,a
      0000F6 74s00            [12]  792 	mov	a,#((_buffer + 0x0017) >> 8)
      0000F8 A3               [24]  793 	inc	dptr
      0000F9 F0               [24]  794 	movx	@dptr,a
      0000FA E4               [12]  795 	clr	a
      0000FB A3               [24]  796 	inc	dptr
      0000FC F0               [24]  797 	movx	@dptr,a
      0000FD 90r00r00         [24]  798 	mov	dptr,#___memcpy_PARM_3
      000100 74 06            [12]  799 	mov	a,#0x06
      000102 F0               [24]  800 	movx	@dptr,a
      000103 E4               [12]  801 	clr	a
      000104 A3               [24]  802 	inc	dptr
      000105 F0               [24]  803 	movx	@dptr,a
      000106 90r00r29         [24]  804 	mov	dptr,#(_buffer + 0x0021)
      000109 F5 F0            [12]  805 	mov	b,a
      00010B 12r00r00         [24]  806 	lcall	___memcpy
                                    807 ;	trial_webserver.c:45: memcpy(&buffer[1 + 38], &buffer[1 + 28], 4); // Target IP = Sender IP from request
      00010E 90r00r00         [24]  808 	mov	dptr,#___memcpy_PARM_2
      000111 74r25            [12]  809 	mov	a,#(_buffer + 0x001d)
      000113 F0               [24]  810 	movx	@dptr,a
      000114 74s00            [12]  811 	mov	a,#((_buffer + 0x001d) >> 8)
      000116 A3               [24]  812 	inc	dptr
      000117 F0               [24]  813 	movx	@dptr,a
      000118 E4               [12]  814 	clr	a
      000119 A3               [24]  815 	inc	dptr
      00011A F0               [24]  816 	movx	@dptr,a
      00011B 90r00r00         [24]  817 	mov	dptr,#___memcpy_PARM_3
      00011E 74 04            [12]  818 	mov	a,#0x04
      000120 F0               [24]  819 	movx	@dptr,a
      000121 E4               [12]  820 	clr	a
      000122 A3               [24]  821 	inc	dptr
      000123 F0               [24]  822 	movx	@dptr,a
      000124 90r00r2F         [24]  823 	mov	dptr,#(_buffer + 0x0027)
      000127 F5 F0            [12]  824 	mov	b,a
      000129 12r00r00         [24]  825 	lcall	___memcpy
                                    826 ;	trial_webserver.c:48: memcpy(&buffer[1 + 22], device_mac, 6); // Sender MAC = device MAC
      00012C 90r00r00         [24]  827 	mov	dptr,#___memcpy_PARM_2
      00012F 74rE4            [12]  828 	mov	a,#_makeArpReply_device_mac_10000_120
      000131 F0               [24]  829 	movx	@dptr,a
      000132 74s05            [12]  830 	mov	a,#(_makeArpReply_device_mac_10000_120 >> 8)
      000134 A3               [24]  831 	inc	dptr
      000135 F0               [24]  832 	movx	@dptr,a
      000136 E4               [12]  833 	clr	a
      000137 A3               [24]  834 	inc	dptr
      000138 F0               [24]  835 	movx	@dptr,a
      000139 90r00r00         [24]  836 	mov	dptr,#___memcpy_PARM_3
      00013C 74 06            [12]  837 	mov	a,#0x06
      00013E F0               [24]  838 	movx	@dptr,a
      00013F E4               [12]  839 	clr	a
      000140 A3               [24]  840 	inc	dptr
      000141 F0               [24]  841 	movx	@dptr,a
      000142 90r00r1F         [24]  842 	mov	dptr,#(_buffer + 0x0017)
      000145 F5 F0            [12]  843 	mov	b,a
      000147 12r00r00         [24]  844 	lcall	___memcpy
                                    845 ;	trial_webserver.c:49: memcpy(&buffer[1 + 28], device_ip, 4);  // Sender IP = device IP
      00014A 90r00r00         [24]  846 	mov	dptr,#___memcpy_PARM_2
      00014D 74rF0            [12]  847 	mov	a,#_makeArpReply_device_ip_10000_120
      00014F F0               [24]  848 	movx	@dptr,a
      000150 74s05            [12]  849 	mov	a,#(_makeArpReply_device_ip_10000_120 >> 8)
      000152 A3               [24]  850 	inc	dptr
      000153 F0               [24]  851 	movx	@dptr,a
      000154 E4               [12]  852 	clr	a
      000155 A3               [24]  853 	inc	dptr
      000156 F0               [24]  854 	movx	@dptr,a
      000157 90r00r00         [24]  855 	mov	dptr,#___memcpy_PARM_3
      00015A 74 04            [12]  856 	mov	a,#0x04
      00015C F0               [24]  857 	movx	@dptr,a
      00015D E4               [12]  858 	clr	a
      00015E A3               [24]  859 	inc	dptr
      00015F F0               [24]  860 	movx	@dptr,a
      000160 90r00r25         [24]  861 	mov	dptr,#(_buffer + 0x001d)
      000163 F5 F0            [12]  862 	mov	b,a
      000165 12r00r00         [24]  863 	lcall	___memcpy
                                    864 ;	trial_webserver.c:52: transmit_tcp_packet(buffer, 43);
      000168 90r00r00         [24]  865 	mov	dptr,#_transmit_tcp_packet_PARM_2
      00016B 74 2B            [12]  866 	mov	a,#0x2b
      00016D F0               [24]  867 	movx	@dptr,a
      00016E E4               [12]  868 	clr	a
      00016F A3               [24]  869 	inc	dptr
      000170 F0               [24]  870 	movx	@dptr,a
      000171 90r00r08         [24]  871 	mov	dptr,#_buffer
      000174 F5 F0            [12]  872 	mov	b,a
                                    873 ;	trial_webserver.c:53: }
      000176 02r00r00         [24]  874 	ljmp	_transmit_tcp_packet
                                    875 ;------------------------------------------------------------
                                    876 ;Allocation info for local variables in function 'makeTcpAck3'
                                    877 ;------------------------------------------------------------
                                    878 ;sloc0                     Allocated with name '_makeTcpAck3_sloc0_1_0'
                                    879 ;device_mac                Allocated with name '_makeTcpAck3_device_mac_10000_121'
                                    880 ;target_mac                Allocated with name '_makeTcpAck3_target_mac_10000_121'
                                    881 ;device_ip                 Allocated with name '_makeTcpAck3_device_ip_10000_121'
                                    882 ;target_ip                 Allocated with name '_makeTcpAck3_target_ip_10000_121'
                                    883 ;srcPort                   Allocated with name '_makeTcpAck3_srcPort_10001_122'
                                    884 ;dstPort                   Allocated with name '_makeTcpAck3_dstPort_10001_122'
                                    885 ;clientSeqNum              Allocated with name '_makeTcpAck3_clientSeqNum_10002_123'
                                    886 ;clientAckNum              Allocated with name '_makeTcpAck3_clientAckNum_10002_123'
                                    887 ;serverSeqNum              Allocated with name '_makeTcpAck3_serverSeqNum_10002_123'
                                    888 ;ackNum                    Allocated with name '_makeTcpAck3_ackNum_10002_123'
                                    889 ;totalLength               Allocated with name '_makeTcpAck3_totalLength_10003_124'
                                    890 ;------------------------------------------------------------
                                    891 ;	trial_webserver.c:58: void makeTcpAck3() {
                                    892 ;	-----------------------------------------
                                    893 ;	 function makeTcpAck3
                                    894 ;	-----------------------------------------
      000179                        895 _makeTcpAck3:
                                    896 ;	trial_webserver.c:59: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      000179 90r05rF8         [24]  897 	mov	dptr,#_makeTcpAck3_device_mac_10000_121
      00017C 74 02            [12]  898 	mov	a,#0x02
      00017E F0               [24]  899 	movx	@dptr,a
      00017F 90r05rF9         [24]  900 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0001)
      000182 74 11            [12]  901 	mov	a,#0x11
      000184 F0               [24]  902 	movx	@dptr,a
      000185 90r05rFA         [24]  903 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0002)
      000188 23               [12]  904 	rl	a
      000189 F0               [24]  905 	movx	@dptr,a
      00018A 90r05rFB         [24]  906 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0003)
      00018D 74 33            [12]  907 	mov	a,#0x33
      00018F F0               [24]  908 	movx	@dptr,a
      000190 90r05rFC         [24]  909 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0004)
      000193 74 44            [12]  910 	mov	a,#0x44
      000195 F0               [24]  911 	movx	@dptr,a
      000196 90r05rFD         [24]  912 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0005)
      000199 74 55            [12]  913 	mov	a,#0x55
      00019B F0               [24]  914 	movx	@dptr,a
                                    915 ;	trial_webserver.c:60: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      00019C 90r05rFE         [24]  916 	mov	dptr,#_makeTcpAck3_target_mac_10000_121
      00019F 74 F8            [12]  917 	mov	a,#0xf8
      0001A1 F0               [24]  918 	movx	@dptr,a
      0001A2 90r05rFF         [24]  919 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0001)
      0001A5 74 75            [12]  920 	mov	a,#0x75
      0001A7 F0               [24]  921 	movx	@dptr,a
      0001A8 90r06r00         [24]  922 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0002)
      0001AB 74 A4            [12]  923 	mov	a,#0xa4
      0001AD F0               [24]  924 	movx	@dptr,a
      0001AE 90r06r01         [24]  925 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0003)
      0001B1 74 8C            [12]  926 	mov	a,#0x8c
      0001B3 F0               [24]  927 	movx	@dptr,a
      0001B4 90r06r02         [24]  928 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0004)
      0001B7 74 41            [12]  929 	mov	a,#0x41
      0001B9 F0               [24]  930 	movx	@dptr,a
      0001BA 90r06r03         [24]  931 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0005)
      0001BD 74 31            [12]  932 	mov	a,#0x31
      0001BF F0               [24]  933 	movx	@dptr,a
                                    934 ;	trial_webserver.c:61: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      0001C0 90r06r04         [24]  935 	mov	dptr,#_makeTcpAck3_device_ip_10000_121
      0001C3 74 C0            [12]  936 	mov	a,#0xc0
      0001C5 F0               [24]  937 	movx	@dptr,a
      0001C6 90r06r05         [24]  938 	mov	dptr,#(_makeTcpAck3_device_ip_10000_121 + 0x0001)
      0001C9 74 A8            [12]  939 	mov	a,#0xa8
      0001CB F0               [24]  940 	movx	@dptr,a
      0001CC 90r06r06         [24]  941 	mov	dptr,#(_makeTcpAck3_device_ip_10000_121 + 0x0002)
      0001CF 74 01            [12]  942 	mov	a,#0x01
      0001D1 F0               [24]  943 	movx	@dptr,a
      0001D2 90r06r07         [24]  944 	mov	dptr,#(_makeTcpAck3_device_ip_10000_121 + 0x0003)
      0001D5 74 64            [12]  945 	mov	a,#0x64
      0001D7 F0               [24]  946 	movx	@dptr,a
                                    947 ;	trial_webserver.c:62: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      0001D8 90r06r08         [24]  948 	mov	dptr,#_makeTcpAck3_target_ip_10000_121
      0001DB 74 C0            [12]  949 	mov	a,#0xc0
      0001DD F0               [24]  950 	movx	@dptr,a
      0001DE 90r06r09         [24]  951 	mov	dptr,#(_makeTcpAck3_target_ip_10000_121 + 0x0001)
      0001E1 74 A8            [12]  952 	mov	a,#0xa8
      0001E3 F0               [24]  953 	movx	@dptr,a
      0001E4 90r06r0A         [24]  954 	mov	dptr,#(_makeTcpAck3_target_ip_10000_121 + 0x0002)
      0001E7 74 01            [12]  955 	mov	a,#0x01
      0001E9 F0               [24]  956 	movx	@dptr,a
      0001EA 90r06r0B         [24]  957 	mov	dptr,#(_makeTcpAck3_target_ip_10000_121 + 0x0003)
      0001ED F0               [24]  958 	movx	@dptr,a
                                    959 ;	trial_webserver.c:63: printf("makeTcpAck\n\r");
      0001EE 74r10            [12]  960 	mov	a,#___str_1
      0001F0 C0 E0            [24]  961 	push	acc
      0001F2 74s00            [12]  962 	mov	a,#(___str_1 >> 8)
      0001F4 C0 E0            [24]  963 	push	acc
      0001F6 74 80            [12]  964 	mov	a,#0x80
      0001F8 C0 E0            [24]  965 	push	acc
      0001FA 12r00r00         [24]  966 	lcall	_printf
      0001FD 15 81            [12]  967 	dec	sp
      0001FF 15 81            [12]  968 	dec	sp
      000201 15 81            [12]  969 	dec	sp
                                    970 ;	trial_webserver.c:66: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000203 90r00r00         [24]  971 	mov	dptr,#_memmove_PARM_2
      000206 74r08            [12]  972 	mov	a,#_buffer
      000208 F0               [24]  973 	movx	@dptr,a
      000209 74s00            [12]  974 	mov	a,#(_buffer >> 8)
      00020B A3               [24]  975 	inc	dptr
      00020C F0               [24]  976 	movx	@dptr,a
      00020D E4               [12]  977 	clr	a
      00020E A3               [24]  978 	inc	dptr
      00020F F0               [24]  979 	movx	@dptr,a
      000210 90r00r00         [24]  980 	mov	dptr,#_memmove_PARM_3
      000213 74 36            [12]  981 	mov	a,#0x36
      000215 F0               [24]  982 	movx	@dptr,a
      000216 E4               [12]  983 	clr	a
      000217 A3               [24]  984 	inc	dptr
      000218 F0               [24]  985 	movx	@dptr,a
      000219 90r00r09         [24]  986 	mov	dptr,#(_buffer + 0x0001)
      00021C F5 F0            [12]  987 	mov	b,a
      00021E 12r00r00         [24]  988 	lcall	_memmove
                                    989 ;	trial_webserver.c:67: buffer[0] = 0x0E;
      000221 90r00r08         [24]  990 	mov	dptr,#_buffer
      000224 74 0E            [12]  991 	mov	a,#0x0e
      000226 F0               [24]  992 	movx	@dptr,a
                                    993 ;	trial_webserver.c:70: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      000227 90r00r00         [24]  994 	mov	dptr,#___memcpy_PARM_2
      00022A 74r0F            [12]  995 	mov	a,#(_buffer + 0x0007)
      00022C F0               [24]  996 	movx	@dptr,a
      00022D 74s00            [12]  997 	mov	a,#((_buffer + 0x0007) >> 8)
      00022F A3               [24]  998 	inc	dptr
      000230 F0               [24]  999 	movx	@dptr,a
      000231 E4               [12] 1000 	clr	a
      000232 A3               [24] 1001 	inc	dptr
      000233 F0               [24] 1002 	movx	@dptr,a
      000234 90r00r00         [24] 1003 	mov	dptr,#___memcpy_PARM_3
      000237 74 06            [12] 1004 	mov	a,#0x06
      000239 F0               [24] 1005 	movx	@dptr,a
      00023A E4               [12] 1006 	clr	a
      00023B A3               [24] 1007 	inc	dptr
      00023C F0               [24] 1008 	movx	@dptr,a
      00023D 90r00r09         [24] 1009 	mov	dptr,#(_buffer + 0x0001)
      000240 F5 F0            [12] 1010 	mov	b,a
      000242 12r00r00         [24] 1011 	lcall	___memcpy
                                   1012 ;	trial_webserver.c:71: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      000245 90r00r00         [24] 1013 	mov	dptr,#___memcpy_PARM_2
      000248 74rF8            [12] 1014 	mov	a,#_makeTcpAck3_device_mac_10000_121
      00024A F0               [24] 1015 	movx	@dptr,a
      00024B 74s05            [12] 1016 	mov	a,#(_makeTcpAck3_device_mac_10000_121 >> 8)
      00024D A3               [24] 1017 	inc	dptr
      00024E F0               [24] 1018 	movx	@dptr,a
      00024F E4               [12] 1019 	clr	a
      000250 A3               [24] 1020 	inc	dptr
      000251 F0               [24] 1021 	movx	@dptr,a
      000252 90r00r00         [24] 1022 	mov	dptr,#___memcpy_PARM_3
      000255 74 06            [12] 1023 	mov	a,#0x06
      000257 F0               [24] 1024 	movx	@dptr,a
      000258 E4               [12] 1025 	clr	a
      000259 A3               [24] 1026 	inc	dptr
      00025A F0               [24] 1027 	movx	@dptr,a
      00025B 90r00r0F         [24] 1028 	mov	dptr,#(_buffer + 0x0007)
      00025E F5 F0            [12] 1029 	mov	b,a
      000260 12r00r00         [24] 1030 	lcall	___memcpy
                                   1031 ;	trial_webserver.c:74: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000263 90r00r00         [24] 1032 	mov	dptr,#___memcpy_PARM_2
      000266 74r23            [12] 1033 	mov	a,#(_buffer + 0x001b)
      000268 F0               [24] 1034 	movx	@dptr,a
      000269 74s00            [12] 1035 	mov	a,#((_buffer + 0x001b) >> 8)
      00026B A3               [24] 1036 	inc	dptr
      00026C F0               [24] 1037 	movx	@dptr,a
      00026D E4               [12] 1038 	clr	a
      00026E A3               [24] 1039 	inc	dptr
      00026F F0               [24] 1040 	movx	@dptr,a
      000270 90r00r00         [24] 1041 	mov	dptr,#___memcpy_PARM_3
      000273 74 04            [12] 1042 	mov	a,#0x04
      000275 F0               [24] 1043 	movx	@dptr,a
      000276 E4               [12] 1044 	clr	a
      000277 A3               [24] 1045 	inc	dptr
      000278 F0               [24] 1046 	movx	@dptr,a
      000279 90r00r27         [24] 1047 	mov	dptr,#(_buffer + 0x001f)
      00027C F5 F0            [12] 1048 	mov	b,a
      00027E 12r00r00         [24] 1049 	lcall	___memcpy
                                   1050 ;	trial_webserver.c:75: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000281 90r00r00         [24] 1051 	mov	dptr,#___memcpy_PARM_2
      000284 74r04            [12] 1052 	mov	a,#_makeTcpAck3_device_ip_10000_121
      000286 F0               [24] 1053 	movx	@dptr,a
      000287 74s06            [12] 1054 	mov	a,#(_makeTcpAck3_device_ip_10000_121 >> 8)
      000289 A3               [24] 1055 	inc	dptr
      00028A F0               [24] 1056 	movx	@dptr,a
      00028B E4               [12] 1057 	clr	a
      00028C A3               [24] 1058 	inc	dptr
      00028D F0               [24] 1059 	movx	@dptr,a
      00028E 90r00r00         [24] 1060 	mov	dptr,#___memcpy_PARM_3
      000291 74 04            [12] 1061 	mov	a,#0x04
      000293 F0               [24] 1062 	movx	@dptr,a
      000294 E4               [12] 1063 	clr	a
      000295 A3               [24] 1064 	inc	dptr
      000296 F0               [24] 1065 	movx	@dptr,a
      000297 90r00r23         [24] 1066 	mov	dptr,#(_buffer + 0x001b)
      00029A F5 F0            [12] 1067 	mov	b,a
      00029C 12r00r00         [24] 1068 	lcall	___memcpy
                                   1069 ;	trial_webserver.c:78: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      00029F 90r00r2B         [24] 1070 	mov	dptr,#(_buffer + 0x0023)
      0002A2 E0               [24] 1071 	movx	a,@dptr
      0002A3 FE               [12] 1072 	mov	r6,a
      0002A4 7F 00            [12] 1073 	mov	r7,#0x00
      0002A6 90r00r2C         [24] 1074 	mov	dptr,#(_buffer + 0x0024)
      0002A9 E0               [24] 1075 	movx	a,@dptr
      0002AA 7C 00            [12] 1076 	mov	r4,#0x00
      0002AC 42 07            [12] 1077 	orl	ar7,a
      0002AE EC               [12] 1078 	mov	a,r4
      0002AF 42 06            [12] 1079 	orl	ar6,a
                                   1080 ;	trial_webserver.c:80: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      0002B1 90r00r2D         [24] 1081 	mov	dptr,#(_buffer + 0x0025)
      0002B4 E0               [24] 1082 	movx	a,@dptr
      0002B5 FC               [12] 1083 	mov	r4,a
      0002B6 7D 00            [12] 1084 	mov	r5,#0x00
      0002B8 90r00r2E         [24] 1085 	mov	dptr,#(_buffer + 0x0026)
      0002BB E0               [24] 1086 	movx	a,@dptr
      0002BC 7A 00            [12] 1087 	mov	r2,#0x00
      0002BE 42 05            [12] 1088 	orl	ar5,a
      0002C0 EA               [12] 1089 	mov	a,r2
      0002C1 42 04            [12] 1090 	orl	ar4,a
                                   1091 ;	trial_webserver.c:82: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      0002C3 8C 03            [24] 1092 	mov	ar3,r4
      0002C5 90r00r2B         [24] 1093 	mov	dptr,#(_buffer + 0x0023)
      0002C8 EB               [12] 1094 	mov	a,r3
      0002C9 F0               [24] 1095 	movx	@dptr,a
                                   1096 ;	trial_webserver.c:83: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      0002CA 90r00r2C         [24] 1097 	mov	dptr,#(_buffer + 0x0024)
      0002CD ED               [12] 1098 	mov	a,r5
      0002CE F0               [24] 1099 	movx	@dptr,a
                                   1100 ;	trial_webserver.c:84: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      0002CF 8E 05            [24] 1101 	mov	ar5,r6
      0002D1 90r00r2D         [24] 1102 	mov	dptr,#(_buffer + 0x0025)
      0002D4 ED               [12] 1103 	mov	a,r5
      0002D5 F0               [24] 1104 	movx	@dptr,a
                                   1105 ;	trial_webserver.c:85: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      0002D6 90r00r2E         [24] 1106 	mov	dptr,#(_buffer + 0x0026)
      0002D9 EF               [12] 1107 	mov	a,r7
      0002DA F0               [24] 1108 	movx	@dptr,a
                                   1109 ;	trial_webserver.c:97: uint32_t clientSeqNum = (buffer[1 + TCP_SEQ_H_P] << 24)
      0002DB 90r00r31         [24] 1110 	mov	dptr,#(_buffer + 0x0029)
      0002DE E0               [24] 1111 	movx	a,@dptr
      0002DF FE               [12] 1112 	mov	r6,a
      0002E0 7F 00            [12] 1113 	mov	r7,#0x00
      0002E2 90r00r32         [24] 1114 	mov	dptr,#(_buffer + 0x002a)
      0002E5 E0               [24] 1115 	movx	a,@dptr
      0002E6 7C 00            [12] 1116 	mov	r4,#0x00
      0002E8 42 07            [12] 1117 	orl	ar7,a
      0002EA EC               [12] 1118 	mov	a,r4
      0002EB 42 06            [12] 1119 	orl	ar6,a
      0002ED EE               [12] 1120 	mov	a,r6
      0002EE 33               [12] 1121 	rlc	a
      0002EF 95 E0            [12] 1122 	subb	a,acc
      0002F1 FD               [12] 1123 	mov	r5,a
      0002F2 FC               [12] 1124 	mov	r4,a
                                   1125 ;	trial_webserver.c:100: uint32_t clientAckNum = (buffer[1 + TCP_ACK_H_P] << 24)
      0002F3 90r00r35         [24] 1126 	mov	dptr,#(_buffer + 0x002d)
      0002F6 E0               [24] 1127 	movx	a,@dptr
      0002F7 FA               [12] 1128 	mov	r2,a
      0002F8 7B 00            [12] 1129 	mov	r3,#0x00
      0002FA 90r00r36         [24] 1130 	mov	dptr,#(_buffer + 0x002e)
      0002FD E0               [24] 1131 	movx	a,@dptr
      0002FE 79 00            [12] 1132 	mov	r1,#0x00
      000300 42 03            [12] 1133 	orl	ar3,a
      000302 E9               [12] 1134 	mov	a,r1
      000303 42 02            [12] 1135 	orl	ar2,a
      000305 8B 00            [24] 1136 	mov	ar0,r3
      000307 EA               [12] 1137 	mov	a,r2
      000308 F9               [12] 1138 	mov	r1,a
      000309 33               [12] 1139 	rlc	a
      00030A 95 E0            [12] 1140 	subb	a,acc
      00030C FA               [12] 1141 	mov	r2,a
      00030D FB               [12] 1142 	mov	r3,a
                                   1143 ;	trial_webserver.c:104: uint32_t ackNum = clientSeqNum + 1;
      00030E 74 01            [12] 1144 	mov	a,#0x01
      000310 2F               [12] 1145 	add	a, r7
      000311 F5*00            [12] 1146 	mov	_makeTcpAck3_sloc0_1_0,a
      000313 E4               [12] 1147 	clr	a
      000314 3E               [12] 1148 	addc	a, r6
      000315 F5*01            [12] 1149 	mov	(_makeTcpAck3_sloc0_1_0 + 1),a
      000317 E4               [12] 1150 	clr	a
      000318 3D               [12] 1151 	addc	a, r5
      000319 F5*02            [12] 1152 	mov	(_makeTcpAck3_sloc0_1_0 + 2),a
      00031B E4               [12] 1153 	clr	a
      00031C 3C               [12] 1154 	addc	a, r4
      00031D F5*03            [12] 1155 	mov	(_makeTcpAck3_sloc0_1_0 + 3),a
                                   1156 ;	trial_webserver.c:105: prevSeq = serverSeqNum;
      00031F 90r00r00         [24] 1157 	mov	dptr,#_prevSeq
      000322 E8               [12] 1158 	mov	a,r0
      000323 F0               [24] 1159 	movx	@dptr,a
      000324 E9               [12] 1160 	mov	a,r1
      000325 A3               [24] 1161 	inc	dptr
      000326 F0               [24] 1162 	movx	@dptr,a
      000327 EA               [12] 1163 	mov	a,r2
      000328 A3               [24] 1164 	inc	dptr
      000329 F0               [24] 1165 	movx	@dptr,a
      00032A EB               [12] 1166 	mov	a,r3
      00032B A3               [24] 1167 	inc	dptr
      00032C F0               [24] 1168 	movx	@dptr,a
                                   1169 ;	trial_webserver.c:106: prevAck = ackNum;
      00032D 90r00r04         [24] 1170 	mov	dptr,#_prevAck
      000330 E5*00            [12] 1171 	mov	a,_makeTcpAck3_sloc0_1_0
      000332 F0               [24] 1172 	movx	@dptr,a
      000333 E5*01            [12] 1173 	mov	a,(_makeTcpAck3_sloc0_1_0 + 1)
      000335 A3               [24] 1174 	inc	dptr
      000336 F0               [24] 1175 	movx	@dptr,a
      000337 E5*02            [12] 1176 	mov	a,(_makeTcpAck3_sloc0_1_0 + 2)
      000339 A3               [24] 1177 	inc	dptr
      00033A F0               [24] 1178 	movx	@dptr,a
      00033B E5*03            [12] 1179 	mov	a,(_makeTcpAck3_sloc0_1_0 + 3)
      00033D A3               [24] 1180 	inc	dptr
      00033E F0               [24] 1181 	movx	@dptr,a
                                   1182 ;	trial_webserver.c:109: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      00033F 8B 07            [24] 1183 	mov	ar7,r3
      000341 90r00r2F         [24] 1184 	mov	dptr,#(_buffer + 0x0027)
      000344 EF               [12] 1185 	mov	a,r7
      000345 F0               [24] 1186 	movx	@dptr,a
                                   1187 ;	trial_webserver.c:110: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      000346 8A 07            [24] 1188 	mov	ar7,r2
      000348 90r00r30         [24] 1189 	mov	dptr,#(_buffer + 0x0028)
      00034B EF               [12] 1190 	mov	a,r7
      00034C F0               [24] 1191 	movx	@dptr,a
                                   1192 ;	trial_webserver.c:111: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      00034D 89 07            [24] 1193 	mov	ar7,r1
      00034F 90r00r31         [24] 1194 	mov	dptr,#(_buffer + 0x0029)
      000352 EF               [12] 1195 	mov	a,r7
      000353 F0               [24] 1196 	movx	@dptr,a
                                   1197 ;	trial_webserver.c:112: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      000354 90r00r32         [24] 1198 	mov	dptr,#(_buffer + 0x002a)
      000357 E8               [12] 1199 	mov	a,r0
      000358 F0               [24] 1200 	movx	@dptr,a
                                   1201 ;	trial_webserver.c:113: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      000359 AF*03            [24] 1202 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 3)
      00035B 90r00r33         [24] 1203 	mov	dptr,#(_buffer + 0x002b)
      00035E EF               [12] 1204 	mov	a,r7
      00035F F0               [24] 1205 	movx	@dptr,a
                                   1206 ;	trial_webserver.c:114: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      000360 AF*02            [24] 1207 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 2)
      000362 90r00r34         [24] 1208 	mov	dptr,#(_buffer + 0x002c)
      000365 EF               [12] 1209 	mov	a,r7
      000366 F0               [24] 1210 	movx	@dptr,a
                                   1211 ;	trial_webserver.c:115: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      000367 AF*01            [24] 1212 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 1)
      000369 90r00r35         [24] 1213 	mov	dptr,#(_buffer + 0x002d)
      00036C EF               [12] 1214 	mov	a,r7
      00036D F0               [24] 1215 	movx	@dptr,a
                                   1216 ;	trial_webserver.c:116: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      00036E AF*00            [24] 1217 	mov	r7,_makeTcpAck3_sloc0_1_0
      000370 90r00r36         [24] 1218 	mov	dptr,#(_buffer + 0x002e)
      000373 EF               [12] 1219 	mov	a,r7
      000374 F0               [24] 1220 	movx	@dptr,a
                                   1221 ;	trial_webserver.c:120: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000375 90r00r19         [24] 1222 	mov	dptr,#(_buffer + 0x0011)
      000378 E4               [12] 1223 	clr	a
      000379 F0               [24] 1224 	movx	@dptr,a
                                   1225 ;	trial_webserver.c:121: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      00037A 90r00r1A         [24] 1226 	mov	dptr,#(_buffer + 0x0012)
      00037D 74 28            [12] 1227 	mov	a,#0x28
      00037F F0               [24] 1228 	movx	@dptr,a
                                   1229 ;	trial_webserver.c:124: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      000380 90r00r38         [24] 1230 	mov	dptr,#(_buffer + 0x0030)
      000383 74 10            [12] 1231 	mov	a,#0x10
      000385 F0               [24] 1232 	movx	@dptr,a
                                   1233 ;	trial_webserver.c:125: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      000386 90r00r39         [24] 1234 	mov	dptr,#(_buffer + 0x0031)
      000389 74 FF            [12] 1235 	mov	a,#0xff
      00038B F0               [24] 1236 	movx	@dptr,a
                                   1237 ;	trial_webserver.c:126: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      00038C 90r00r3A         [24] 1238 	mov	dptr,#(_buffer + 0x0032)
      00038F F0               [24] 1239 	movx	@dptr,a
                                   1240 ;	trial_webserver.c:127: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000390 90r00r37         [24] 1241 	mov	dptr,#(_buffer + 0x002f)
      000393 74 50            [12] 1242 	mov	a,#0x50
      000395 F0               [24] 1243 	movx	@dptr,a
                                   1244 ;	trial_webserver.c:130: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000396 90r00r09         [24] 1245 	mov	dptr,#(_buffer + 0x0001)
      000399 75 F0 00         [24] 1246 	mov	b, #0x00
      00039C 12r00r00         [24] 1247 	lcall	_calculateIPChecksum
                                   1248 ;	trial_webserver.c:131: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      00039F 90r00r09         [24] 1249 	mov	dptr,#(_buffer + 0x0001)
      0003A2 75 F0 00         [24] 1250 	mov	b, #0x00
      0003A5 12r00r00         [24] 1251 	lcall	_calculateTcpChecksum
                                   1252 ;	trial_webserver.c:135: transmit_tcp_packet(buffer, 1 + 54);
      0003A8 90r00r00         [24] 1253 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0003AB 74 37            [12] 1254 	mov	a,#0x37
      0003AD F0               [24] 1255 	movx	@dptr,a
      0003AE E4               [12] 1256 	clr	a
      0003AF A3               [24] 1257 	inc	dptr
      0003B0 F0               [24] 1258 	movx	@dptr,a
      0003B1 90r00r08         [24] 1259 	mov	dptr,#_buffer
      0003B4 F5 F0            [12] 1260 	mov	b,a
      0003B6 12r00r00         [24] 1261 	lcall	_transmit_tcp_packet
                                   1262 ;	trial_webserver.c:138: connectionState = ACK_SENT;
      0003B9 90r00r00         [24] 1263 	mov	dptr,#_connectionState
      0003BC 74 05            [12] 1264 	mov	a,#0x05
      0003BE F0               [24] 1265 	movx	@dptr,a
                                   1266 ;	trial_webserver.c:139: }
      0003BF 22               [24] 1267 	ret
                                   1268 ;------------------------------------------------------------
                                   1269 ;Allocation info for local variables in function 'makeTcpAck2'
                                   1270 ;------------------------------------------------------------
                                   1271 ;sloc0                     Allocated with name '_makeTcpAck2_sloc0_1_0'
                                   1272 ;sloc1                     Allocated with name '_makeTcpAck2_sloc1_1_0'
                                   1273 ;sloc2                     Allocated with name '_makeTcpAck2_sloc2_1_0'
                                   1274 ;device_mac                Allocated with name '_makeTcpAck2_device_mac_10000_125'
                                   1275 ;target_mac                Allocated with name '_makeTcpAck2_target_mac_10000_125'
                                   1276 ;device_ip                 Allocated with name '_makeTcpAck2_device_ip_10000_125'
                                   1277 ;target_ip                 Allocated with name '_makeTcpAck2_target_ip_10000_125'
                                   1278 ;totalLength1              Allocated with name '_makeTcpAck2_totalLength1_10000_125'
                                   1279 ;receivedPayloadLength     Allocated with name '_makeTcpAck2_receivedPayloadLength_10000_125'
                                   1280 ;srcPort                   Allocated with name '_makeTcpAck2_srcPort_10001_126'
                                   1281 ;dstPort                   Allocated with name '_makeTcpAck2_dstPort_10001_126'
                                   1282 ;clientSeqNum              Allocated with name '_makeTcpAck2_clientSeqNum_10002_127'
                                   1283 ;clientAckNum              Allocated with name '_makeTcpAck2_clientAckNum_10002_127'
                                   1284 ;serverSeqNum              Allocated with name '_makeTcpAck2_serverSeqNum_10002_127'
                                   1285 ;ackNum                    Allocated with name '_makeTcpAck2_ackNum_10002_127'
                                   1286 ;totalLength               Allocated with name '_makeTcpAck2_totalLength_10003_128'
                                   1287 ;------------------------------------------------------------
                                   1288 ;	trial_webserver.c:141: void makeTcpAck2() {
                                   1289 ;	-----------------------------------------
                                   1290 ;	 function makeTcpAck2
                                   1291 ;	-----------------------------------------
      0003C0                       1292 _makeTcpAck2:
                                   1293 ;	trial_webserver.c:142: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      0003C0 90r06r0C         [24] 1294 	mov	dptr,#_makeTcpAck2_device_mac_10000_125
      0003C3 74 02            [12] 1295 	mov	a,#0x02
      0003C5 F0               [24] 1296 	movx	@dptr,a
      0003C6 90r06r0D         [24] 1297 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0001)
      0003C9 74 11            [12] 1298 	mov	a,#0x11
      0003CB F0               [24] 1299 	movx	@dptr,a
      0003CC 90r06r0E         [24] 1300 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0002)
      0003CF 23               [12] 1301 	rl	a
      0003D0 F0               [24] 1302 	movx	@dptr,a
      0003D1 90r06r0F         [24] 1303 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0003)
      0003D4 74 33            [12] 1304 	mov	a,#0x33
      0003D6 F0               [24] 1305 	movx	@dptr,a
      0003D7 90r06r10         [24] 1306 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0004)
      0003DA 74 44            [12] 1307 	mov	a,#0x44
      0003DC F0               [24] 1308 	movx	@dptr,a
      0003DD 90r06r11         [24] 1309 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0005)
      0003E0 74 55            [12] 1310 	mov	a,#0x55
      0003E2 F0               [24] 1311 	movx	@dptr,a
                                   1312 ;	trial_webserver.c:143: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      0003E3 90r06r12         [24] 1313 	mov	dptr,#_makeTcpAck2_target_mac_10000_125
      0003E6 74 F8            [12] 1314 	mov	a,#0xf8
      0003E8 F0               [24] 1315 	movx	@dptr,a
      0003E9 90r06r13         [24] 1316 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0001)
      0003EC 74 75            [12] 1317 	mov	a,#0x75
      0003EE F0               [24] 1318 	movx	@dptr,a
      0003EF 90r06r14         [24] 1319 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0002)
      0003F2 74 A4            [12] 1320 	mov	a,#0xa4
      0003F4 F0               [24] 1321 	movx	@dptr,a
      0003F5 90r06r15         [24] 1322 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0003)
      0003F8 74 8C            [12] 1323 	mov	a,#0x8c
      0003FA F0               [24] 1324 	movx	@dptr,a
      0003FB 90r06r16         [24] 1325 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0004)
      0003FE 74 41            [12] 1326 	mov	a,#0x41
      000400 F0               [24] 1327 	movx	@dptr,a
      000401 90r06r17         [24] 1328 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0005)
      000404 74 31            [12] 1329 	mov	a,#0x31
      000406 F0               [24] 1330 	movx	@dptr,a
                                   1331 ;	trial_webserver.c:144: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000407 90r06r18         [24] 1332 	mov	dptr,#_makeTcpAck2_device_ip_10000_125
      00040A 74 C0            [12] 1333 	mov	a,#0xc0
      00040C F0               [24] 1334 	movx	@dptr,a
      00040D 90r06r19         [24] 1335 	mov	dptr,#(_makeTcpAck2_device_ip_10000_125 + 0x0001)
      000410 74 A8            [12] 1336 	mov	a,#0xa8
      000412 F0               [24] 1337 	movx	@dptr,a
      000413 90r06r1A         [24] 1338 	mov	dptr,#(_makeTcpAck2_device_ip_10000_125 + 0x0002)
      000416 74 01            [12] 1339 	mov	a,#0x01
      000418 F0               [24] 1340 	movx	@dptr,a
      000419 90r06r1B         [24] 1341 	mov	dptr,#(_makeTcpAck2_device_ip_10000_125 + 0x0003)
      00041C 74 64            [12] 1342 	mov	a,#0x64
      00041E F0               [24] 1343 	movx	@dptr,a
                                   1344 ;	trial_webserver.c:145: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      00041F 90r06r1C         [24] 1345 	mov	dptr,#_makeTcpAck2_target_ip_10000_125
      000422 74 C0            [12] 1346 	mov	a,#0xc0
      000424 F0               [24] 1347 	movx	@dptr,a
      000425 90r06r1D         [24] 1348 	mov	dptr,#(_makeTcpAck2_target_ip_10000_125 + 0x0001)
      000428 74 A8            [12] 1349 	mov	a,#0xa8
      00042A F0               [24] 1350 	movx	@dptr,a
      00042B 90r06r1E         [24] 1351 	mov	dptr,#(_makeTcpAck2_target_ip_10000_125 + 0x0002)
      00042E 74 01            [12] 1352 	mov	a,#0x01
      000430 F0               [24] 1353 	movx	@dptr,a
      000431 90r06r1F         [24] 1354 	mov	dptr,#(_makeTcpAck2_target_ip_10000_125 + 0x0003)
      000434 F0               [24] 1355 	movx	@dptr,a
                                   1356 ;	trial_webserver.c:146: uint16_t totalLength1 = (buffer[16] << 8) | buffer[17]; // Total IP length
      000435 90r00r18         [24] 1357 	mov	dptr,#(_buffer + 0x0010)
      000438 E0               [24] 1358 	movx	a,@dptr
      000439 FE               [12] 1359 	mov	r6,a
      00043A 7F 00            [12] 1360 	mov	r7,#0x00
      00043C 90r00r19         [24] 1361 	mov	dptr,#(_buffer + 0x0011)
      00043F E0               [24] 1362 	movx	a,@dptr
      000440 7C 00            [12] 1363 	mov	r4,#0x00
      000442 42 07            [12] 1364 	orl	ar7,a
      000444 EC               [12] 1365 	mov	a,r4
      000445 42 06            [12] 1366 	orl	ar6,a
                                   1367 ;	trial_webserver.c:147: uint16_t receivedPayloadLength = totalLength1 - 40;
      000447 EF               [12] 1368 	mov	a,r7
      000448 24 D8            [12] 1369 	add	a,#0xd8
      00044A FF               [12] 1370 	mov	r7,a
      00044B EE               [12] 1371 	mov	a,r6
      00044C 34 FF            [12] 1372 	addc	a,#0xff
      00044E FE               [12] 1373 	mov	r6,a
      00044F 8F*04            [24] 1374 	mov	_makeTcpAck2_sloc0_1_0,r7
      000451 8E*05            [24] 1375 	mov	(_makeTcpAck2_sloc0_1_0 + 1),r6
                                   1376 ;	trial_webserver.c:148: printf("makeTcpAck\n\r");
      000453 74r10            [12] 1377 	mov	a,#___str_1
      000455 C0 E0            [24] 1378 	push	acc
      000457 74s00            [12] 1379 	mov	a,#(___str_1 >> 8)
      000459 C0 E0            [24] 1380 	push	acc
      00045B 74 80            [12] 1381 	mov	a,#0x80
      00045D C0 E0            [24] 1382 	push	acc
      00045F 12r00r00         [24] 1383 	lcall	_printf
      000462 15 81            [12] 1384 	dec	sp
      000464 15 81            [12] 1385 	dec	sp
      000466 15 81            [12] 1386 	dec	sp
                                   1387 ;	trial_webserver.c:151: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000468 90r00r00         [24] 1388 	mov	dptr,#_memmove_PARM_2
      00046B 74r08            [12] 1389 	mov	a,#_buffer
      00046D F0               [24] 1390 	movx	@dptr,a
      00046E 74s00            [12] 1391 	mov	a,#(_buffer >> 8)
      000470 A3               [24] 1392 	inc	dptr
      000471 F0               [24] 1393 	movx	@dptr,a
      000472 E4               [12] 1394 	clr	a
      000473 A3               [24] 1395 	inc	dptr
      000474 F0               [24] 1396 	movx	@dptr,a
      000475 90r00r00         [24] 1397 	mov	dptr,#_memmove_PARM_3
      000478 74 36            [12] 1398 	mov	a,#0x36
      00047A F0               [24] 1399 	movx	@dptr,a
      00047B E4               [12] 1400 	clr	a
      00047C A3               [24] 1401 	inc	dptr
      00047D F0               [24] 1402 	movx	@dptr,a
      00047E 90r00r09         [24] 1403 	mov	dptr,#(_buffer + 0x0001)
      000481 F5 F0            [12] 1404 	mov	b,a
      000483 12r00r00         [24] 1405 	lcall	_memmove
                                   1406 ;	trial_webserver.c:152: buffer[0] = 0x0E;
      000486 90r00r08         [24] 1407 	mov	dptr,#_buffer
      000489 74 0E            [12] 1408 	mov	a,#0x0e
      00048B F0               [24] 1409 	movx	@dptr,a
                                   1410 ;	trial_webserver.c:155: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      00048C 90r00r00         [24] 1411 	mov	dptr,#___memcpy_PARM_2
      00048F 74r0F            [12] 1412 	mov	a,#(_buffer + 0x0007)
      000491 F0               [24] 1413 	movx	@dptr,a
      000492 74s00            [12] 1414 	mov	a,#((_buffer + 0x0007) >> 8)
      000494 A3               [24] 1415 	inc	dptr
      000495 F0               [24] 1416 	movx	@dptr,a
      000496 E4               [12] 1417 	clr	a
      000497 A3               [24] 1418 	inc	dptr
      000498 F0               [24] 1419 	movx	@dptr,a
      000499 90r00r00         [24] 1420 	mov	dptr,#___memcpy_PARM_3
      00049C 74 06            [12] 1421 	mov	a,#0x06
      00049E F0               [24] 1422 	movx	@dptr,a
      00049F E4               [12] 1423 	clr	a
      0004A0 A3               [24] 1424 	inc	dptr
      0004A1 F0               [24] 1425 	movx	@dptr,a
      0004A2 90r00r09         [24] 1426 	mov	dptr,#(_buffer + 0x0001)
      0004A5 F5 F0            [12] 1427 	mov	b,a
      0004A7 12r00r00         [24] 1428 	lcall	___memcpy
                                   1429 ;	trial_webserver.c:156: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      0004AA 90r00r00         [24] 1430 	mov	dptr,#___memcpy_PARM_2
      0004AD 74r0C            [12] 1431 	mov	a,#_makeTcpAck2_device_mac_10000_125
      0004AF F0               [24] 1432 	movx	@dptr,a
      0004B0 74s06            [12] 1433 	mov	a,#(_makeTcpAck2_device_mac_10000_125 >> 8)
      0004B2 A3               [24] 1434 	inc	dptr
      0004B3 F0               [24] 1435 	movx	@dptr,a
      0004B4 E4               [12] 1436 	clr	a
      0004B5 A3               [24] 1437 	inc	dptr
      0004B6 F0               [24] 1438 	movx	@dptr,a
      0004B7 90r00r00         [24] 1439 	mov	dptr,#___memcpy_PARM_3
      0004BA 74 06            [12] 1440 	mov	a,#0x06
      0004BC F0               [24] 1441 	movx	@dptr,a
      0004BD E4               [12] 1442 	clr	a
      0004BE A3               [24] 1443 	inc	dptr
      0004BF F0               [24] 1444 	movx	@dptr,a
      0004C0 90r00r0F         [24] 1445 	mov	dptr,#(_buffer + 0x0007)
      0004C3 F5 F0            [12] 1446 	mov	b,a
      0004C5 12r00r00         [24] 1447 	lcall	___memcpy
                                   1448 ;	trial_webserver.c:159: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      0004C8 90r00r00         [24] 1449 	mov	dptr,#___memcpy_PARM_2
      0004CB 74r23            [12] 1450 	mov	a,#(_buffer + 0x001b)
      0004CD F0               [24] 1451 	movx	@dptr,a
      0004CE 74s00            [12] 1452 	mov	a,#((_buffer + 0x001b) >> 8)
      0004D0 A3               [24] 1453 	inc	dptr
      0004D1 F0               [24] 1454 	movx	@dptr,a
      0004D2 E4               [12] 1455 	clr	a
      0004D3 A3               [24] 1456 	inc	dptr
      0004D4 F0               [24] 1457 	movx	@dptr,a
      0004D5 90r00r00         [24] 1458 	mov	dptr,#___memcpy_PARM_3
      0004D8 74 04            [12] 1459 	mov	a,#0x04
      0004DA F0               [24] 1460 	movx	@dptr,a
      0004DB E4               [12] 1461 	clr	a
      0004DC A3               [24] 1462 	inc	dptr
      0004DD F0               [24] 1463 	movx	@dptr,a
      0004DE 90r00r27         [24] 1464 	mov	dptr,#(_buffer + 0x001f)
      0004E1 F5 F0            [12] 1465 	mov	b,a
      0004E3 12r00r00         [24] 1466 	lcall	___memcpy
                                   1467 ;	trial_webserver.c:160: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      0004E6 90r00r00         [24] 1468 	mov	dptr,#___memcpy_PARM_2
      0004E9 74r18            [12] 1469 	mov	a,#_makeTcpAck2_device_ip_10000_125
      0004EB F0               [24] 1470 	movx	@dptr,a
      0004EC 74s06            [12] 1471 	mov	a,#(_makeTcpAck2_device_ip_10000_125 >> 8)
      0004EE A3               [24] 1472 	inc	dptr
      0004EF F0               [24] 1473 	movx	@dptr,a
      0004F0 E4               [12] 1474 	clr	a
      0004F1 A3               [24] 1475 	inc	dptr
      0004F2 F0               [24] 1476 	movx	@dptr,a
      0004F3 90r00r00         [24] 1477 	mov	dptr,#___memcpy_PARM_3
      0004F6 74 04            [12] 1478 	mov	a,#0x04
      0004F8 F0               [24] 1479 	movx	@dptr,a
      0004F9 E4               [12] 1480 	clr	a
      0004FA A3               [24] 1481 	inc	dptr
      0004FB F0               [24] 1482 	movx	@dptr,a
      0004FC 90r00r23         [24] 1483 	mov	dptr,#(_buffer + 0x001b)
      0004FF F5 F0            [12] 1484 	mov	b,a
      000501 12r00r00         [24] 1485 	lcall	___memcpy
                                   1486 ;	trial_webserver.c:163: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000504 90r00r2B         [24] 1487 	mov	dptr,#(_buffer + 0x0023)
      000507 E0               [24] 1488 	movx	a,@dptr
      000508 FC               [12] 1489 	mov	r4,a
      000509 7D 00            [12] 1490 	mov	r5,#0x00
      00050B 90r00r2C         [24] 1491 	mov	dptr,#(_buffer + 0x0024)
      00050E E0               [24] 1492 	movx	a,@dptr
      00050F 7A 00            [12] 1493 	mov	r2,#0x00
      000511 42 05            [12] 1494 	orl	ar5,a
      000513 EA               [12] 1495 	mov	a,r2
      000514 42 04            [12] 1496 	orl	ar4,a
                                   1497 ;	trial_webserver.c:165: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000516 90r00r2D         [24] 1498 	mov	dptr,#(_buffer + 0x0025)
      000519 E0               [24] 1499 	movx	a,@dptr
      00051A FA               [12] 1500 	mov	r2,a
      00051B 7B 00            [12] 1501 	mov	r3,#0x00
      00051D 90r00r2E         [24] 1502 	mov	dptr,#(_buffer + 0x0026)
      000520 E0               [24] 1503 	movx	a,@dptr
      000521 79 00            [12] 1504 	mov	r1,#0x00
      000523 42 03            [12] 1505 	orl	ar3,a
      000525 E9               [12] 1506 	mov	a,r1
      000526 42 02            [12] 1507 	orl	ar2,a
                                   1508 ;	trial_webserver.c:167: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000528 8A 01            [24] 1509 	mov	ar1,r2
      00052A 90r00r2B         [24] 1510 	mov	dptr,#(_buffer + 0x0023)
      00052D E9               [12] 1511 	mov	a,r1
      00052E F0               [24] 1512 	movx	@dptr,a
                                   1513 ;	trial_webserver.c:168: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      00052F 90r00r2C         [24] 1514 	mov	dptr,#(_buffer + 0x0024)
      000532 EB               [12] 1515 	mov	a,r3
      000533 F0               [24] 1516 	movx	@dptr,a
                                   1517 ;	trial_webserver.c:169: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      000534 8C 03            [24] 1518 	mov	ar3,r4
      000536 90r00r2D         [24] 1519 	mov	dptr,#(_buffer + 0x0025)
      000539 EB               [12] 1520 	mov	a,r3
      00053A F0               [24] 1521 	movx	@dptr,a
                                   1522 ;	trial_webserver.c:170: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      00053B 90r00r2E         [24] 1523 	mov	dptr,#(_buffer + 0x0026)
      00053E ED               [12] 1524 	mov	a,r5
      00053F F0               [24] 1525 	movx	@dptr,a
                                   1526 ;	trial_webserver.c:181: uint32_t clientSeqNum = ((uint32_t)buffer[1 + TCP_SEQ_H_P] << 24)
      000540 90r00r2F         [24] 1527 	mov	dptr,#(_buffer + 0x0027)
      000543 E0               [24] 1528 	movx	a,@dptr
      000544 FD               [12] 1529 	mov	r5,a
      000545 7C 00            [12] 1530 	mov	r4,#0x00
      000547 7B 00            [12] 1531 	mov	r3,#0x00
      000549 8D 02            [24] 1532 	mov	ar2,r5
      00054B 7D 00            [12] 1533 	mov	r5,#0x00
      00054D 90r00r30         [24] 1534 	mov	dptr,#(_buffer + 0x0028)
      000550 E0               [24] 1535 	movx	a,@dptr
      000551 F8               [12] 1536 	mov	r0,a
      000552 79 00            [12] 1537 	mov	r1,#0x00
      000554 89 07            [24] 1538 	mov	ar7,r1
      000556 88 06            [24] 1539 	mov	ar6,r0
      000558 E4               [12] 1540 	clr	a
      000559 42 05            [12] 1541 	orl	ar5,a
      00055B E9               [12] 1542 	mov	a,r1
      00055C 42 04            [12] 1543 	orl	ar4,a
      00055E EE               [12] 1544 	mov	a,r6
      00055F 42 03            [12] 1545 	orl	ar3,a
      000561 EF               [12] 1546 	mov	a,r7
      000562 42 02            [12] 1547 	orl	ar2,a
      000564 90r00r31         [24] 1548 	mov	dptr,#(_buffer + 0x0029)
      000567 E0               [24] 1549 	movx	a,@dptr
      000568 F8               [12] 1550 	mov	r0,a
      000569 79 00            [12] 1551 	mov	r1,#0x00
      00056B 7E 00            [12] 1552 	mov	r6,#0x00
      00056D 8E 07            [24] 1553 	mov	ar7,r6
      00056F 89 06            [24] 1554 	mov	ar6,r1
      000571 88 01            [24] 1555 	mov	ar1,r0
      000573 E4               [12] 1556 	clr	a
      000574 42 05            [12] 1557 	orl	ar5,a
      000576 E9               [12] 1558 	mov	a,r1
      000577 42 04            [12] 1559 	orl	ar4,a
      000579 EE               [12] 1560 	mov	a,r6
      00057A 42 03            [12] 1561 	orl	ar3,a
      00057C EF               [12] 1562 	mov	a,r7
      00057D 42 02            [12] 1563 	orl	ar2,a
      00057F 90r00r32         [24] 1564 	mov	dptr,#(_buffer + 0x002a)
      000582 E0               [24] 1565 	movx	a,@dptr
      000583 F8               [12] 1566 	mov	r0,a
      000584 E4               [12] 1567 	clr	a
      000585 F9               [12] 1568 	mov	r1,a
      000586 FE               [12] 1569 	mov	r6,a
      000587 FF               [12] 1570 	mov	r7,a
      000588 E8               [12] 1571 	mov	a,r0
      000589 4D               [12] 1572 	orl	a,r5
      00058A F5*0A            [12] 1573 	mov	_makeTcpAck2_sloc2_1_0,a
      00058C E9               [12] 1574 	mov	a,r1
      00058D 4C               [12] 1575 	orl	a,r4
      00058E F5*0B            [12] 1576 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      000590 EE               [12] 1577 	mov	a,r6
      000591 4B               [12] 1578 	orl	a,r3
      000592 F5*0C            [12] 1579 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      000594 EF               [12] 1580 	mov	a,r7
      000595 4A               [12] 1581 	orl	a,r2
      000596 F5*0D            [12] 1582 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   1583 ;	trial_webserver.c:186: uint32_t clientAckNum = ((uint32_t)buffer[1 + TCP_ACK_H_P] << 24)
      000598 90r00r33         [24] 1584 	mov	dptr,#(_buffer + 0x002b)
      00059B E0               [24] 1585 	movx	a,@dptr
      00059C F8               [12] 1586 	mov	r0,a
      00059D 7F 00            [12] 1587 	mov	r7,#0x00
      00059F 88*09            [24] 1588 	mov	(_makeTcpAck2_sloc1_1_0 + 3),r0
      0005A1 8F*06            [24] 1589 	mov	_makeTcpAck2_sloc1_1_0,r7
      0005A3 8F*07            [24] 1590 	mov	(_makeTcpAck2_sloc1_1_0 + 1),r7
      0005A5 8F*08            [24] 1591 	mov	(_makeTcpAck2_sloc1_1_0 + 2),r7
      0005A7 90r00r34         [24] 1592 	mov	dptr,#(_buffer + 0x002c)
      0005AA E0               [24] 1593 	movx	a,@dptr
      0005AB F8               [12] 1594 	mov	r0,a
      0005AC 89 07            [24] 1595 	mov	ar7,r1
      0005AE 88 06            [24] 1596 	mov	ar6,r0
      0005B0 E4               [12] 1597 	clr	a
      0005B1 42*06            [12] 1598 	orl	_makeTcpAck2_sloc1_1_0,a
      0005B3 E9               [12] 1599 	mov	a,r1
      0005B4 42*07            [12] 1600 	orl	(_makeTcpAck2_sloc1_1_0 + 1),a
      0005B6 EE               [12] 1601 	mov	a,r6
      0005B7 42*08            [12] 1602 	orl	(_makeTcpAck2_sloc1_1_0 + 2),a
      0005B9 EF               [12] 1603 	mov	a,r7
      0005BA 42*09            [12] 1604 	orl	(_makeTcpAck2_sloc1_1_0 + 3),a
      0005BC 90r00r35         [24] 1605 	mov	dptr,#(_buffer + 0x002d)
      0005BF E0               [24] 1606 	movx	a,@dptr
      0005C0 F8               [12] 1607 	mov	r0,a
      0005C1 79 00            [12] 1608 	mov	r1,#0x00
      0005C3 7E 00            [12] 1609 	mov	r6,#0x00
      0005C5 8E 07            [24] 1610 	mov	ar7,r6
      0005C7 89 06            [24] 1611 	mov	ar6,r1
      0005C9 88 01            [24] 1612 	mov	ar1,r0
      0005CB E4               [12] 1613 	clr	a
      0005CC 42*06            [12] 1614 	orl	_makeTcpAck2_sloc1_1_0,a
      0005CE E9               [12] 1615 	mov	a,r1
      0005CF 42*07            [12] 1616 	orl	(_makeTcpAck2_sloc1_1_0 + 1),a
      0005D1 EE               [12] 1617 	mov	a,r6
      0005D2 42*08            [12] 1618 	orl	(_makeTcpAck2_sloc1_1_0 + 2),a
      0005D4 EF               [12] 1619 	mov	a,r7
      0005D5 42*09            [12] 1620 	orl	(_makeTcpAck2_sloc1_1_0 + 3),a
      0005D7 90r00r36         [24] 1621 	mov	dptr,#(_buffer + 0x002e)
      0005DA E0               [24] 1622 	movx	a,@dptr
      0005DB F8               [12] 1623 	mov	r0,a
      0005DC E4               [12] 1624 	clr	a
      0005DD F9               [12] 1625 	mov	r1,a
      0005DE FE               [12] 1626 	mov	r6,a
      0005DF FF               [12] 1627 	mov	r7,a
      0005E0 E5*07            [12] 1628 	mov	a,(_makeTcpAck2_sloc1_1_0 + 1)
      0005E2 42 01            [12] 1629 	orl	ar1,a
      0005E4 E5*08            [12] 1630 	mov	a,(_makeTcpAck2_sloc1_1_0 + 2)
      0005E6 42 06            [12] 1631 	orl	ar6,a
      0005E8 E5*09            [12] 1632 	mov	a,(_makeTcpAck2_sloc1_1_0 + 3)
      0005EA 42 07            [12] 1633 	orl	ar7,a
                                   1634 ;	trial_webserver.c:192: uint32_t ackNum = clientSeqNum + receivedPayloadLength - 1;
      0005EC AA*04            [24] 1635 	mov	r2,_makeTcpAck2_sloc0_1_0
      0005EE AB*05            [24] 1636 	mov	r3,(_makeTcpAck2_sloc0_1_0 + 1)
      0005F0 E4               [12] 1637 	clr	a
      0005F1 FC               [12] 1638 	mov	r4,a
      0005F2 FD               [12] 1639 	mov	r5,a
      0005F3 EA               [12] 1640 	mov	a,r2
      0005F4 25*0A            [12] 1641 	add	a, _makeTcpAck2_sloc2_1_0
      0005F6 FA               [12] 1642 	mov	r2,a
      0005F7 EB               [12] 1643 	mov	a,r3
      0005F8 35*0B            [12] 1644 	addc	a, (_makeTcpAck2_sloc2_1_0 + 1)
      0005FA FB               [12] 1645 	mov	r3,a
      0005FB EC               [12] 1646 	mov	a,r4
      0005FC 35*0C            [12] 1647 	addc	a, (_makeTcpAck2_sloc2_1_0 + 2)
      0005FE FC               [12] 1648 	mov	r4,a
      0005FF ED               [12] 1649 	mov	a,r5
      000600 35*0D            [12] 1650 	addc	a, (_makeTcpAck2_sloc2_1_0 + 3)
      000602 FD               [12] 1651 	mov	r5,a
      000603 EA               [12] 1652 	mov	a,r2
      000604 24 FF            [12] 1653 	add	a,#0xff
      000606 F5*0A            [12] 1654 	mov	_makeTcpAck2_sloc2_1_0,a
      000608 EB               [12] 1655 	mov	a,r3
      000609 34 FF            [12] 1656 	addc	a,#0xff
      00060B F5*0B            [12] 1657 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      00060D EC               [12] 1658 	mov	a,r4
      00060E 34 FF            [12] 1659 	addc	a,#0xff
      000610 F5*0C            [12] 1660 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      000612 ED               [12] 1661 	mov	a,r5
      000613 34 FF            [12] 1662 	addc	a,#0xff
      000615 F5*0D            [12] 1663 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   1664 ;	trial_webserver.c:193: prevSeq = serverSeqNum;
      000617 90r00r00         [24] 1665 	mov	dptr,#_prevSeq
      00061A E8               [12] 1666 	mov	a,r0
      00061B F0               [24] 1667 	movx	@dptr,a
      00061C E9               [12] 1668 	mov	a,r1
      00061D A3               [24] 1669 	inc	dptr
      00061E F0               [24] 1670 	movx	@dptr,a
      00061F EE               [12] 1671 	mov	a,r6
      000620 A3               [24] 1672 	inc	dptr
      000621 F0               [24] 1673 	movx	@dptr,a
      000622 EF               [12] 1674 	mov	a,r7
      000623 A3               [24] 1675 	inc	dptr
      000624 F0               [24] 1676 	movx	@dptr,a
                                   1677 ;	trial_webserver.c:194: prevAck = ackNum;
      000625 90r00r04         [24] 1678 	mov	dptr,#_prevAck
      000628 E5*0A            [12] 1679 	mov	a,_makeTcpAck2_sloc2_1_0
      00062A F0               [24] 1680 	movx	@dptr,a
      00062B E5*0B            [12] 1681 	mov	a,(_makeTcpAck2_sloc2_1_0 + 1)
      00062D A3               [24] 1682 	inc	dptr
      00062E F0               [24] 1683 	movx	@dptr,a
      00062F E5*0C            [12] 1684 	mov	a,(_makeTcpAck2_sloc2_1_0 + 2)
      000631 A3               [24] 1685 	inc	dptr
      000632 F0               [24] 1686 	movx	@dptr,a
      000633 E5*0D            [12] 1687 	mov	a,(_makeTcpAck2_sloc2_1_0 + 3)
      000635 A3               [24] 1688 	inc	dptr
      000636 F0               [24] 1689 	movx	@dptr,a
                                   1690 ;	trial_webserver.c:197: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      000637 8F 05            [24] 1691 	mov	ar5,r7
      000639 90r00r2F         [24] 1692 	mov	dptr,#(_buffer + 0x0027)
      00063C ED               [12] 1693 	mov	a,r5
      00063D F0               [24] 1694 	movx	@dptr,a
                                   1695 ;	trial_webserver.c:198: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      00063E 8E 05            [24] 1696 	mov	ar5,r6
      000640 90r00r30         [24] 1697 	mov	dptr,#(_buffer + 0x0028)
      000643 ED               [12] 1698 	mov	a,r5
      000644 F0               [24] 1699 	movx	@dptr,a
                                   1700 ;	trial_webserver.c:199: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000645 89 05            [24] 1701 	mov	ar5,r1
      000647 90r00r31         [24] 1702 	mov	dptr,#(_buffer + 0x0029)
      00064A ED               [12] 1703 	mov	a,r5
      00064B F0               [24] 1704 	movx	@dptr,a
                                   1705 ;	trial_webserver.c:200: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      00064C 90r00r32         [24] 1706 	mov	dptr,#(_buffer + 0x002a)
      00064F E8               [12] 1707 	mov	a,r0
      000650 F0               [24] 1708 	movx	@dptr,a
                                   1709 ;	trial_webserver.c:201: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      000651 AF*0D            [24] 1710 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 3)
      000653 90r00r33         [24] 1711 	mov	dptr,#(_buffer + 0x002b)
      000656 EF               [12] 1712 	mov	a,r7
      000657 F0               [24] 1713 	movx	@dptr,a
                                   1714 ;	trial_webserver.c:202: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      000658 AF*0C            [24] 1715 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 2)
      00065A 90r00r34         [24] 1716 	mov	dptr,#(_buffer + 0x002c)
      00065D EF               [12] 1717 	mov	a,r7
      00065E F0               [24] 1718 	movx	@dptr,a
                                   1719 ;	trial_webserver.c:203: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      00065F AF*0B            [24] 1720 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 1)
      000661 90r00r35         [24] 1721 	mov	dptr,#(_buffer + 0x002d)
      000664 EF               [12] 1722 	mov	a,r7
      000665 F0               [24] 1723 	movx	@dptr,a
                                   1724 ;	trial_webserver.c:204: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      000666 AA*0A            [24] 1725 	mov	r2,_makeTcpAck2_sloc2_1_0
      000668 90r00r36         [24] 1726 	mov	dptr,#(_buffer + 0x002e)
      00066B EA               [12] 1727 	mov	a,r2
      00066C F0               [24] 1728 	movx	@dptr,a
                                   1729 ;	trial_webserver.c:208: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      00066D 90r00r19         [24] 1730 	mov	dptr,#(_buffer + 0x0011)
      000670 E4               [12] 1731 	clr	a
      000671 F0               [24] 1732 	movx	@dptr,a
                                   1733 ;	trial_webserver.c:209: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000672 90r00r1A         [24] 1734 	mov	dptr,#(_buffer + 0x0012)
      000675 74 28            [12] 1735 	mov	a,#0x28
      000677 F0               [24] 1736 	movx	@dptr,a
                                   1737 ;	trial_webserver.c:212: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      000678 90r00r38         [24] 1738 	mov	dptr,#(_buffer + 0x0030)
      00067B 74 10            [12] 1739 	mov	a,#0x10
      00067D F0               [24] 1740 	movx	@dptr,a
                                   1741 ;	trial_webserver.c:213: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      00067E 90r00r39         [24] 1742 	mov	dptr,#(_buffer + 0x0031)
      000681 74 FF            [12] 1743 	mov	a,#0xff
      000683 F0               [24] 1744 	movx	@dptr,a
                                   1745 ;	trial_webserver.c:214: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      000684 90r00r3A         [24] 1746 	mov	dptr,#(_buffer + 0x0032)
      000687 F0               [24] 1747 	movx	@dptr,a
                                   1748 ;	trial_webserver.c:215: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000688 90r00r37         [24] 1749 	mov	dptr,#(_buffer + 0x002f)
      00068B 74 50            [12] 1750 	mov	a,#0x50
      00068D F0               [24] 1751 	movx	@dptr,a
                                   1752 ;	trial_webserver.c:218: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      00068E 90r00r09         [24] 1753 	mov	dptr,#(_buffer + 0x0001)
      000691 75 F0 00         [24] 1754 	mov	b, #0x00
      000694 12r00r00         [24] 1755 	lcall	_calculateIPChecksum
                                   1756 ;	trial_webserver.c:219: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000697 90r00r09         [24] 1757 	mov	dptr,#(_buffer + 0x0001)
      00069A 75 F0 00         [24] 1758 	mov	b, #0x00
      00069D 12r00r00         [24] 1759 	lcall	_calculateTcpChecksum
                                   1760 ;	trial_webserver.c:223: transmit_tcp_packet(buffer, 1 + 54);
      0006A0 90r00r00         [24] 1761 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0006A3 74 37            [12] 1762 	mov	a,#0x37
      0006A5 F0               [24] 1763 	movx	@dptr,a
      0006A6 E4               [12] 1764 	clr	a
      0006A7 A3               [24] 1765 	inc	dptr
      0006A8 F0               [24] 1766 	movx	@dptr,a
      0006A9 90r00r08         [24] 1767 	mov	dptr,#_buffer
      0006AC F5 F0            [12] 1768 	mov	b,a
      0006AE 12r00r00         [24] 1769 	lcall	_transmit_tcp_packet
                                   1770 ;	trial_webserver.c:226: connectionState = ACK_SENT;
      0006B1 90r00r00         [24] 1771 	mov	dptr,#_connectionState
      0006B4 74 05            [12] 1772 	mov	a,#0x05
      0006B6 F0               [24] 1773 	movx	@dptr,a
                                   1774 ;	trial_webserver.c:227: }
      0006B7 22               [24] 1775 	ret
                                   1776 ;------------------------------------------------------------
                                   1777 ;Allocation info for local variables in function 'makeTcpSynAck'
                                   1778 ;------------------------------------------------------------
                                   1779 ;device_mac                Allocated with name '_makeTcpSynAck_device_mac_10000_129'
                                   1780 ;target_mac                Allocated with name '_makeTcpSynAck_target_mac_10000_129'
                                   1781 ;device_ip                 Allocated with name '_makeTcpSynAck_device_ip_10000_129'
                                   1782 ;target_ip                 Allocated with name '_makeTcpSynAck_target_ip_10000_129'
                                   1783 ;srcPort                   Allocated with name '_makeTcpSynAck_srcPort_10001_130'
                                   1784 ;dstPort                   Allocated with name '_makeTcpSynAck_dstPort_10001_130'
                                   1785 ;clientSeqNum              Allocated with name '_makeTcpSynAck_clientSeqNum_10002_131'
                                   1786 ;serverSeqNum              Allocated with name '_makeTcpSynAck_serverSeqNum_10003_132'
                                   1787 ;ackNum                    Allocated with name '_makeTcpSynAck_ackNum_10003_132'
                                   1788 ;totalLength               Allocated with name '_makeTcpSynAck_totalLength_10004_133'
                                   1789 ;------------------------------------------------------------
                                   1790 ;	trial_webserver.c:229: void makeTcpSynAck() {
                                   1791 ;	-----------------------------------------
                                   1792 ;	 function makeTcpSynAck
                                   1793 ;	-----------------------------------------
      0006B8                       1794 _makeTcpSynAck:
                                   1795 ;	trial_webserver.c:230: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      0006B8 90r06r20         [24] 1796 	mov	dptr,#_makeTcpSynAck_device_mac_10000_129
      0006BB 74 02            [12] 1797 	mov	a,#0x02
      0006BD F0               [24] 1798 	movx	@dptr,a
      0006BE 90r06r21         [24] 1799 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0001)
      0006C1 74 11            [12] 1800 	mov	a,#0x11
      0006C3 F0               [24] 1801 	movx	@dptr,a
      0006C4 90r06r22         [24] 1802 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0002)
      0006C7 23               [12] 1803 	rl	a
      0006C8 F0               [24] 1804 	movx	@dptr,a
      0006C9 90r06r23         [24] 1805 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0003)
      0006CC 74 33            [12] 1806 	mov	a,#0x33
      0006CE F0               [24] 1807 	movx	@dptr,a
      0006CF 90r06r24         [24] 1808 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0004)
      0006D2 74 44            [12] 1809 	mov	a,#0x44
      0006D4 F0               [24] 1810 	movx	@dptr,a
      0006D5 90r06r25         [24] 1811 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0005)
      0006D8 74 55            [12] 1812 	mov	a,#0x55
      0006DA F0               [24] 1813 	movx	@dptr,a
                                   1814 ;	trial_webserver.c:231: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      0006DB 90r06r26         [24] 1815 	mov	dptr,#_makeTcpSynAck_target_mac_10000_129
      0006DE 74 F8            [12] 1816 	mov	a,#0xf8
      0006E0 F0               [24] 1817 	movx	@dptr,a
      0006E1 90r06r27         [24] 1818 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0001)
      0006E4 74 75            [12] 1819 	mov	a,#0x75
      0006E6 F0               [24] 1820 	movx	@dptr,a
      0006E7 90r06r28         [24] 1821 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0002)
      0006EA 74 A4            [12] 1822 	mov	a,#0xa4
      0006EC F0               [24] 1823 	movx	@dptr,a
      0006ED 90r06r29         [24] 1824 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0003)
      0006F0 74 8C            [12] 1825 	mov	a,#0x8c
      0006F2 F0               [24] 1826 	movx	@dptr,a
      0006F3 90r06r2A         [24] 1827 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0004)
      0006F6 74 41            [12] 1828 	mov	a,#0x41
      0006F8 F0               [24] 1829 	movx	@dptr,a
      0006F9 90r06r2B         [24] 1830 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0005)
      0006FC 74 31            [12] 1831 	mov	a,#0x31
      0006FE F0               [24] 1832 	movx	@dptr,a
                                   1833 ;	trial_webserver.c:232: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      0006FF 90r06r2C         [24] 1834 	mov	dptr,#_makeTcpSynAck_device_ip_10000_129
      000702 74 C0            [12] 1835 	mov	a,#0xc0
      000704 F0               [24] 1836 	movx	@dptr,a
      000705 90r06r2D         [24] 1837 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_129 + 0x0001)
      000708 74 A8            [12] 1838 	mov	a,#0xa8
      00070A F0               [24] 1839 	movx	@dptr,a
      00070B 90r06r2E         [24] 1840 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_129 + 0x0002)
      00070E 74 01            [12] 1841 	mov	a,#0x01
      000710 F0               [24] 1842 	movx	@dptr,a
      000711 90r06r2F         [24] 1843 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_129 + 0x0003)
      000714 74 64            [12] 1844 	mov	a,#0x64
      000716 F0               [24] 1845 	movx	@dptr,a
                                   1846 ;	trial_webserver.c:233: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      000717 90r06r30         [24] 1847 	mov	dptr,#_makeTcpSynAck_target_ip_10000_129
      00071A 74 C0            [12] 1848 	mov	a,#0xc0
      00071C F0               [24] 1849 	movx	@dptr,a
      00071D 90r06r31         [24] 1850 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_129 + 0x0001)
      000720 74 A8            [12] 1851 	mov	a,#0xa8
      000722 F0               [24] 1852 	movx	@dptr,a
      000723 90r06r32         [24] 1853 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_129 + 0x0002)
      000726 74 01            [12] 1854 	mov	a,#0x01
      000728 F0               [24] 1855 	movx	@dptr,a
      000729 90r06r33         [24] 1856 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_129 + 0x0003)
      00072C F0               [24] 1857 	movx	@dptr,a
                                   1858 ;	trial_webserver.c:234: printf("makeTcpSynAck\n\r");
      00072D 74r1D            [12] 1859 	mov	a,#___str_2
      00072F C0 E0            [24] 1860 	push	acc
      000731 74s00            [12] 1861 	mov	a,#(___str_2 >> 8)
      000733 C0 E0            [24] 1862 	push	acc
      000735 74 80            [12] 1863 	mov	a,#0x80
      000737 C0 E0            [24] 1864 	push	acc
      000739 12r00r00         [24] 1865 	lcall	_printf
      00073C 15 81            [12] 1866 	dec	sp
      00073E 15 81            [12] 1867 	dec	sp
      000740 15 81            [12] 1868 	dec	sp
                                   1869 ;	trial_webserver.c:237: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000742 90r00r00         [24] 1870 	mov	dptr,#_memmove_PARM_2
      000745 74r08            [12] 1871 	mov	a,#_buffer
      000747 F0               [24] 1872 	movx	@dptr,a
      000748 74s00            [12] 1873 	mov	a,#(_buffer >> 8)
      00074A A3               [24] 1874 	inc	dptr
      00074B F0               [24] 1875 	movx	@dptr,a
      00074C E4               [12] 1876 	clr	a
      00074D A3               [24] 1877 	inc	dptr
      00074E F0               [24] 1878 	movx	@dptr,a
      00074F 90r00r00         [24] 1879 	mov	dptr,#_memmove_PARM_3
      000752 74 36            [12] 1880 	mov	a,#0x36
      000754 F0               [24] 1881 	movx	@dptr,a
      000755 E4               [12] 1882 	clr	a
      000756 A3               [24] 1883 	inc	dptr
      000757 F0               [24] 1884 	movx	@dptr,a
      000758 90r00r09         [24] 1885 	mov	dptr,#(_buffer + 0x0001)
      00075B F5 F0            [12] 1886 	mov	b,a
      00075D 12r00r00         [24] 1887 	lcall	_memmove
                                   1888 ;	trial_webserver.c:238: buffer[0] = 0x0E;
      000760 90r00r08         [24] 1889 	mov	dptr,#_buffer
      000763 74 0E            [12] 1890 	mov	a,#0x0e
      000765 F0               [24] 1891 	movx	@dptr,a
                                   1892 ;	trial_webserver.c:240: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      000766 90r00r00         [24] 1893 	mov	dptr,#___memcpy_PARM_2
      000769 74r0F            [12] 1894 	mov	a,#(_buffer + 0x0007)
      00076B F0               [24] 1895 	movx	@dptr,a
      00076C 74s00            [12] 1896 	mov	a,#((_buffer + 0x0007) >> 8)
      00076E A3               [24] 1897 	inc	dptr
      00076F F0               [24] 1898 	movx	@dptr,a
      000770 E4               [12] 1899 	clr	a
      000771 A3               [24] 1900 	inc	dptr
      000772 F0               [24] 1901 	movx	@dptr,a
      000773 90r00r00         [24] 1902 	mov	dptr,#___memcpy_PARM_3
      000776 74 06            [12] 1903 	mov	a,#0x06
      000778 F0               [24] 1904 	movx	@dptr,a
      000779 E4               [12] 1905 	clr	a
      00077A A3               [24] 1906 	inc	dptr
      00077B F0               [24] 1907 	movx	@dptr,a
      00077C 90r00r09         [24] 1908 	mov	dptr,#(_buffer + 0x0001)
      00077F F5 F0            [12] 1909 	mov	b,a
      000781 12r00r00         [24] 1910 	lcall	___memcpy
                                   1911 ;	trial_webserver.c:241: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      000784 90r00r00         [24] 1912 	mov	dptr,#___memcpy_PARM_2
      000787 74r20            [12] 1913 	mov	a,#_makeTcpSynAck_device_mac_10000_129
      000789 F0               [24] 1914 	movx	@dptr,a
      00078A 74s06            [12] 1915 	mov	a,#(_makeTcpSynAck_device_mac_10000_129 >> 8)
      00078C A3               [24] 1916 	inc	dptr
      00078D F0               [24] 1917 	movx	@dptr,a
      00078E E4               [12] 1918 	clr	a
      00078F A3               [24] 1919 	inc	dptr
      000790 F0               [24] 1920 	movx	@dptr,a
      000791 90r00r00         [24] 1921 	mov	dptr,#___memcpy_PARM_3
      000794 74 06            [12] 1922 	mov	a,#0x06
      000796 F0               [24] 1923 	movx	@dptr,a
      000797 E4               [12] 1924 	clr	a
      000798 A3               [24] 1925 	inc	dptr
      000799 F0               [24] 1926 	movx	@dptr,a
      00079A 90r00r0F         [24] 1927 	mov	dptr,#(_buffer + 0x0007)
      00079D F5 F0            [12] 1928 	mov	b,a
      00079F 12r00r00         [24] 1929 	lcall	___memcpy
                                   1930 ;	trial_webserver.c:244: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      0007A2 90r00r00         [24] 1931 	mov	dptr,#___memcpy_PARM_2
      0007A5 74r23            [12] 1932 	mov	a,#(_buffer + 0x001b)
      0007A7 F0               [24] 1933 	movx	@dptr,a
      0007A8 74s00            [12] 1934 	mov	a,#((_buffer + 0x001b) >> 8)
      0007AA A3               [24] 1935 	inc	dptr
      0007AB F0               [24] 1936 	movx	@dptr,a
      0007AC E4               [12] 1937 	clr	a
      0007AD A3               [24] 1938 	inc	dptr
      0007AE F0               [24] 1939 	movx	@dptr,a
      0007AF 90r00r00         [24] 1940 	mov	dptr,#___memcpy_PARM_3
      0007B2 74 04            [12] 1941 	mov	a,#0x04
      0007B4 F0               [24] 1942 	movx	@dptr,a
      0007B5 E4               [12] 1943 	clr	a
      0007B6 A3               [24] 1944 	inc	dptr
      0007B7 F0               [24] 1945 	movx	@dptr,a
      0007B8 90r00r27         [24] 1946 	mov	dptr,#(_buffer + 0x001f)
      0007BB F5 F0            [12] 1947 	mov	b,a
      0007BD 12r00r00         [24] 1948 	lcall	___memcpy
                                   1949 ;	trial_webserver.c:245: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      0007C0 90r00r00         [24] 1950 	mov	dptr,#___memcpy_PARM_2
      0007C3 74r2C            [12] 1951 	mov	a,#_makeTcpSynAck_device_ip_10000_129
      0007C5 F0               [24] 1952 	movx	@dptr,a
      0007C6 74s06            [12] 1953 	mov	a,#(_makeTcpSynAck_device_ip_10000_129 >> 8)
      0007C8 A3               [24] 1954 	inc	dptr
      0007C9 F0               [24] 1955 	movx	@dptr,a
      0007CA E4               [12] 1956 	clr	a
      0007CB A3               [24] 1957 	inc	dptr
      0007CC F0               [24] 1958 	movx	@dptr,a
      0007CD 90r00r00         [24] 1959 	mov	dptr,#___memcpy_PARM_3
      0007D0 74 04            [12] 1960 	mov	a,#0x04
      0007D2 F0               [24] 1961 	movx	@dptr,a
      0007D3 E4               [12] 1962 	clr	a
      0007D4 A3               [24] 1963 	inc	dptr
      0007D5 F0               [24] 1964 	movx	@dptr,a
      0007D6 90r00r23         [24] 1965 	mov	dptr,#(_buffer + 0x001b)
      0007D9 F5 F0            [12] 1966 	mov	b,a
      0007DB 12r00r00         [24] 1967 	lcall	___memcpy
                                   1968 ;	trial_webserver.c:248: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      0007DE 90r00r2B         [24] 1969 	mov	dptr,#(_buffer + 0x0023)
      0007E1 E0               [24] 1970 	movx	a,@dptr
      0007E2 FE               [12] 1971 	mov	r6,a
      0007E3 7F 00            [12] 1972 	mov	r7,#0x00
      0007E5 90r00r2C         [24] 1973 	mov	dptr,#(_buffer + 0x0024)
      0007E8 E0               [24] 1974 	movx	a,@dptr
      0007E9 7C 00            [12] 1975 	mov	r4,#0x00
      0007EB 42 07            [12] 1976 	orl	ar7,a
      0007ED EC               [12] 1977 	mov	a,r4
      0007EE 42 06            [12] 1978 	orl	ar6,a
                                   1979 ;	trial_webserver.c:250: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      0007F0 90r00r2D         [24] 1980 	mov	dptr,#(_buffer + 0x0025)
      0007F3 E0               [24] 1981 	movx	a,@dptr
      0007F4 FC               [12] 1982 	mov	r4,a
      0007F5 7D 00            [12] 1983 	mov	r5,#0x00
      0007F7 90r00r2E         [24] 1984 	mov	dptr,#(_buffer + 0x0026)
      0007FA E0               [24] 1985 	movx	a,@dptr
      0007FB 7A 00            [12] 1986 	mov	r2,#0x00
      0007FD 42 05            [12] 1987 	orl	ar5,a
      0007FF EA               [12] 1988 	mov	a,r2
      000800 42 04            [12] 1989 	orl	ar4,a
                                   1990 ;	trial_webserver.c:252: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000802 8C 03            [24] 1991 	mov	ar3,r4
      000804 90r00r2B         [24] 1992 	mov	dptr,#(_buffer + 0x0023)
      000807 EB               [12] 1993 	mov	a,r3
      000808 F0               [24] 1994 	movx	@dptr,a
                                   1995 ;	trial_webserver.c:253: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      000809 90r00r2C         [24] 1996 	mov	dptr,#(_buffer + 0x0024)
      00080C ED               [12] 1997 	mov	a,r5
      00080D F0               [24] 1998 	movx	@dptr,a
                                   1999 ;	trial_webserver.c:254: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      00080E 8E 05            [24] 2000 	mov	ar5,r6
      000810 90r00r2D         [24] 2001 	mov	dptr,#(_buffer + 0x0025)
      000813 ED               [12] 2002 	mov	a,r5
      000814 F0               [24] 2003 	movx	@dptr,a
                                   2004 ;	trial_webserver.c:255: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      000815 90r00r2E         [24] 2005 	mov	dptr,#(_buffer + 0x0026)
      000818 EF               [12] 2006 	mov	a,r7
      000819 F0               [24] 2007 	movx	@dptr,a
                                   2008 ;	trial_webserver.c:264: uint32_t clientSeqNum = ((uint32_t)buffer[1 + TCP_SEQ_H_P] << 24)
      00081A 90r00r2F         [24] 2009 	mov	dptr,#(_buffer + 0x0027)
      00081D E0               [24] 2010 	movx	a,@dptr
      00081E FF               [12] 2011 	mov	r7,a
      00081F 7E 00            [12] 2012 	mov	r6,#0x00
      000821 7D 00            [12] 2013 	mov	r5,#0x00
      000823 8F 04            [24] 2014 	mov	ar4,r7
      000825 7F 00            [12] 2015 	mov	r7,#0x00
      000827 90r00r30         [24] 2016 	mov	dptr,#(_buffer + 0x0028)
      00082A E0               [24] 2017 	movx	a,@dptr
      00082B F8               [12] 2018 	mov	r0,a
      00082C 79 00            [12] 2019 	mov	r1,#0x00
      00082E 89 03            [24] 2020 	mov	ar3,r1
      000830 88 02            [24] 2021 	mov	ar2,r0
      000832 E4               [12] 2022 	clr	a
      000833 42 07            [12] 2023 	orl	ar7,a
      000835 E9               [12] 2024 	mov	a,r1
      000836 42 06            [12] 2025 	orl	ar6,a
      000838 EA               [12] 2026 	mov	a,r2
      000839 42 05            [12] 2027 	orl	ar5,a
      00083B EB               [12] 2028 	mov	a,r3
      00083C 42 04            [12] 2029 	orl	ar4,a
      00083E 90r00r31         [24] 2030 	mov	dptr,#(_buffer + 0x0029)
      000841 E0               [24] 2031 	movx	a,@dptr
      000842 F8               [12] 2032 	mov	r0,a
      000843 79 00            [12] 2033 	mov	r1,#0x00
      000845 7A 00            [12] 2034 	mov	r2,#0x00
      000847 8A 03            [24] 2035 	mov	ar3,r2
      000849 89 02            [24] 2036 	mov	ar2,r1
      00084B 88 01            [24] 2037 	mov	ar1,r0
      00084D E4               [12] 2038 	clr	a
      00084E 42 07            [12] 2039 	orl	ar7,a
      000850 E9               [12] 2040 	mov	a,r1
      000851 42 06            [12] 2041 	orl	ar6,a
      000853 EA               [12] 2042 	mov	a,r2
      000854 42 05            [12] 2043 	orl	ar5,a
      000856 EB               [12] 2044 	mov	a,r3
      000857 42 04            [12] 2045 	orl	ar4,a
      000859 90r00r32         [24] 2046 	mov	dptr,#(_buffer + 0x002a)
      00085C E0               [24] 2047 	movx	a,@dptr
      00085D F8               [12] 2048 	mov	r0,a
      00085E E4               [12] 2049 	clr	a
      00085F F9               [12] 2050 	mov	r1,a
      000860 FA               [12] 2051 	mov	r2,a
      000861 FB               [12] 2052 	mov	r3,a
      000862 E8               [12] 2053 	mov	a,r0
      000863 42 07            [12] 2054 	orl	ar7,a
      000865 E9               [12] 2055 	mov	a,r1
      000866 42 06            [12] 2056 	orl	ar6,a
      000868 EA               [12] 2057 	mov	a,r2
      000869 42 05            [12] 2058 	orl	ar5,a
      00086B EB               [12] 2059 	mov	a,r3
      00086C 42 04            [12] 2060 	orl	ar4,a
                                   2061 ;	trial_webserver.c:268: printf("clientSeqNum = %ld\n\r", clientSeqNum);
      00086E C0 07            [24] 2062 	push	ar7
      000870 C0 06            [24] 2063 	push	ar6
      000872 C0 05            [24] 2064 	push	ar5
      000874 C0 04            [24] 2065 	push	ar4
      000876 C0 07            [24] 2066 	push	ar7
      000878 C0 06            [24] 2067 	push	ar6
      00087A C0 05            [24] 2068 	push	ar5
      00087C C0 04            [24] 2069 	push	ar4
      00087E 74r2D            [12] 2070 	mov	a,#___str_3
      000880 C0 E0            [24] 2071 	push	acc
      000882 74s00            [12] 2072 	mov	a,#(___str_3 >> 8)
      000884 C0 E0            [24] 2073 	push	acc
      000886 74 80            [12] 2074 	mov	a,#0x80
      000888 C0 E0            [24] 2075 	push	acc
      00088A 12r00r00         [24] 2076 	lcall	_printf
      00088D E5 81            [12] 2077 	mov	a,sp
      00088F 24 F9            [12] 2078 	add	a,#0xf9
      000891 F5 81            [12] 2079 	mov	sp,a
      000893 D0 04            [24] 2080 	pop	ar4
      000895 D0 05            [24] 2081 	pop	ar5
      000897 D0 06            [24] 2082 	pop	ar6
      000899 D0 07            [24] 2083 	pop	ar7
                                   2084 ;	trial_webserver.c:270: uint32_t ackNum = clientSeqNum + 1;
      00089B 0F               [12] 2085 	inc	r7
      00089C BF 00 09         [24] 2086 	cjne	r7,#0x00,00103$
      00089F 0E               [12] 2087 	inc	r6
      0008A0 BE 00 05         [24] 2088 	cjne	r6,#0x00,00103$
      0008A3 0D               [12] 2089 	inc	r5
      0008A4 BD 00 01         [24] 2090 	cjne	r5,#0x00,00103$
      0008A7 0C               [12] 2091 	inc	r4
      0008A8                       2092 00103$:
                                   2093 ;	trial_webserver.c:272: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      0008A8 90r00r2F         [24] 2094 	mov	dptr,#(_buffer + 0x0027)
      0008AB E4               [12] 2095 	clr	a
      0008AC F0               [24] 2096 	movx	@dptr,a
                                   2097 ;	trial_webserver.c:273: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      0008AD 90r00r30         [24] 2098 	mov	dptr,#(_buffer + 0x0028)
      0008B0 F0               [24] 2099 	movx	@dptr,a
                                   2100 ;	trial_webserver.c:274: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      0008B1 90r00r31         [24] 2101 	mov	dptr,#(_buffer + 0x0029)
      0008B4 74 03            [12] 2102 	mov	a,#0x03
      0008B6 F0               [24] 2103 	movx	@dptr,a
                                   2104 ;	trial_webserver.c:275: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      0008B7 90r00r32         [24] 2105 	mov	dptr,#(_buffer + 0x002a)
      0008BA 74 E8            [12] 2106 	mov	a,#0xe8
      0008BC F0               [24] 2107 	movx	@dptr,a
                                   2108 ;	trial_webserver.c:276: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      0008BD 8C 03            [24] 2109 	mov	ar3,r4
      0008BF 90r00r33         [24] 2110 	mov	dptr,#(_buffer + 0x002b)
      0008C2 EB               [12] 2111 	mov	a,r3
      0008C3 F0               [24] 2112 	movx	@dptr,a
                                   2113 ;	trial_webserver.c:277: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      0008C4 8D 03            [24] 2114 	mov	ar3,r5
      0008C6 90r00r34         [24] 2115 	mov	dptr,#(_buffer + 0x002c)
      0008C9 EB               [12] 2116 	mov	a,r3
      0008CA F0               [24] 2117 	movx	@dptr,a
                                   2118 ;	trial_webserver.c:278: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      0008CB 8E 03            [24] 2119 	mov	ar3,r6
      0008CD 90r00r35         [24] 2120 	mov	dptr,#(_buffer + 0x002d)
      0008D0 EB               [12] 2121 	mov	a,r3
      0008D1 F0               [24] 2122 	movx	@dptr,a
                                   2123 ;	trial_webserver.c:279: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      0008D2 90r00r36         [24] 2124 	mov	dptr,#(_buffer + 0x002e)
      0008D5 EF               [12] 2125 	mov	a,r7
      0008D6 F0               [24] 2126 	movx	@dptr,a
                                   2127 ;	trial_webserver.c:283: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      0008D7 90r00r19         [24] 2128 	mov	dptr,#(_buffer + 0x0011)
      0008DA E4               [12] 2129 	clr	a
      0008DB F0               [24] 2130 	movx	@dptr,a
                                   2131 ;	trial_webserver.c:284: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      0008DC 90r00r1A         [24] 2132 	mov	dptr,#(_buffer + 0x0012)
      0008DF 74 28            [12] 2133 	mov	a,#0x28
      0008E1 F0               [24] 2134 	movx	@dptr,a
                                   2135 ;	trial_webserver.c:287: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_SYN | TCP_FLAG_ACK;
      0008E2 90r00r38         [24] 2136 	mov	dptr,#(_buffer + 0x0030)
      0008E5 74 12            [12] 2137 	mov	a,#0x12
      0008E7 F0               [24] 2138 	movx	@dptr,a
                                   2139 ;	trial_webserver.c:288: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      0008E8 90r00r39         [24] 2140 	mov	dptr,#(_buffer + 0x0031)
      0008EB 74 FF            [12] 2141 	mov	a,#0xff
      0008ED F0               [24] 2142 	movx	@dptr,a
                                   2143 ;	trial_webserver.c:289: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      0008EE 90r00r3A         [24] 2144 	mov	dptr,#(_buffer + 0x0032)
      0008F1 F0               [24] 2145 	movx	@dptr,a
                                   2146 ;	trial_webserver.c:290: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      0008F2 90r00r37         [24] 2147 	mov	dptr,#(_buffer + 0x002f)
      0008F5 74 50            [12] 2148 	mov	a,#0x50
      0008F7 F0               [24] 2149 	movx	@dptr,a
                                   2150 ;	trial_webserver.c:293: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      0008F8 90r00r09         [24] 2151 	mov	dptr,#(_buffer + 0x0001)
      0008FB 75 F0 00         [24] 2152 	mov	b, #0x00
      0008FE 12r00r00         [24] 2153 	lcall	_calculateIPChecksum
                                   2154 ;	trial_webserver.c:294: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000901 90r00r09         [24] 2155 	mov	dptr,#(_buffer + 0x0001)
      000904 75 F0 00         [24] 2156 	mov	b, #0x00
      000907 12r00r00         [24] 2157 	lcall	_calculateTcpChecksum
                                   2158 ;	trial_webserver.c:298: transmit_tcp_packet(buffer, 1 + 54);
      00090A 90r00r00         [24] 2159 	mov	dptr,#_transmit_tcp_packet_PARM_2
      00090D 74 37            [12] 2160 	mov	a,#0x37
      00090F F0               [24] 2161 	movx	@dptr,a
      000910 E4               [12] 2162 	clr	a
      000911 A3               [24] 2163 	inc	dptr
      000912 F0               [24] 2164 	movx	@dptr,a
      000913 90r00r08         [24] 2165 	mov	dptr,#_buffer
      000916 F5 F0            [12] 2166 	mov	b,a
      000918 12r00r00         [24] 2167 	lcall	_transmit_tcp_packet
                                   2168 ;	trial_webserver.c:301: connectionState = SYN_RECEIVED;
      00091B 90r00r00         [24] 2169 	mov	dptr,#_connectionState
      00091E 74 01            [12] 2170 	mov	a,#0x01
      000920 F0               [24] 2171 	movx	@dptr,a
                                   2172 ;	trial_webserver.c:302: }
      000921 22               [24] 2173 	ret
                                   2174 ;------------------------------------------------------------
                                   2175 ;Allocation info for local variables in function 'makeTcpAck'
                                   2176 ;------------------------------------------------------------
                                   2177 ;device_mac                Allocated with name '_makeTcpAck_device_mac_10000_134'
                                   2178 ;target_mac                Allocated with name '_makeTcpAck_target_mac_10000_134'
                                   2179 ;device_ip                 Allocated with name '_makeTcpAck_device_ip_10000_134'
                                   2180 ;target_ip                 Allocated with name '_makeTcpAck_target_ip_10000_134'
                                   2181 ;------------------------------------------------------------
                                   2182 ;	trial_webserver.c:305: void makeTcpAck() {
                                   2183 ;	-----------------------------------------
                                   2184 ;	 function makeTcpAck
                                   2185 ;	-----------------------------------------
      000922                       2186 _makeTcpAck:
                                   2187 ;	trial_webserver.c:306: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      000922 90r06r34         [24] 2188 	mov	dptr,#_makeTcpAck_device_mac_10000_134
      000925 74 02            [12] 2189 	mov	a,#0x02
      000927 F0               [24] 2190 	movx	@dptr,a
      000928 90r06r35         [24] 2191 	mov	dptr,#(_makeTcpAck_device_mac_10000_134 + 0x0001)
      00092B 74 11            [12] 2192 	mov	a,#0x11
      00092D F0               [24] 2193 	movx	@dptr,a
      00092E 90r06r36         [24] 2194 	mov	dptr,#(_makeTcpAck_device_mac_10000_134 + 0x0002)
      000931 23               [12] 2195 	rl	a
      000932 F0               [24] 2196 	movx	@dptr,a
      000933 90r06r37         [24] 2197 	mov	dptr,#(_makeTcpAck_device_mac_10000_134 + 0x0003)
      000936 74 33            [12] 2198 	mov	a,#0x33
      000938 F0               [24] 2199 	movx	@dptr,a
      000939 90r06r38         [24] 2200 	mov	dptr,#(_makeTcpAck_device_mac_10000_134 + 0x0004)
      00093C 74 44            [12] 2201 	mov	a,#0x44
      00093E F0               [24] 2202 	movx	@dptr,a
      00093F 90r06r39         [24] 2203 	mov	dptr,#(_makeTcpAck_device_mac_10000_134 + 0x0005)
      000942 74 55            [12] 2204 	mov	a,#0x55
      000944 F0               [24] 2205 	movx	@dptr,a
                                   2206 ;	trial_webserver.c:307: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      000945 90r06r3A         [24] 2207 	mov	dptr,#_makeTcpAck_target_mac_10000_134
      000948 74 F8            [12] 2208 	mov	a,#0xf8
      00094A F0               [24] 2209 	movx	@dptr,a
      00094B 90r06r3B         [24] 2210 	mov	dptr,#(_makeTcpAck_target_mac_10000_134 + 0x0001)
      00094E 74 75            [12] 2211 	mov	a,#0x75
      000950 F0               [24] 2212 	movx	@dptr,a
      000951 90r06r3C         [24] 2213 	mov	dptr,#(_makeTcpAck_target_mac_10000_134 + 0x0002)
      000954 74 A4            [12] 2214 	mov	a,#0xa4
      000956 F0               [24] 2215 	movx	@dptr,a
      000957 90r06r3D         [24] 2216 	mov	dptr,#(_makeTcpAck_target_mac_10000_134 + 0x0003)
      00095A 74 8C            [12] 2217 	mov	a,#0x8c
      00095C F0               [24] 2218 	movx	@dptr,a
      00095D 90r06r3E         [24] 2219 	mov	dptr,#(_makeTcpAck_target_mac_10000_134 + 0x0004)
      000960 74 41            [12] 2220 	mov	a,#0x41
      000962 F0               [24] 2221 	movx	@dptr,a
      000963 90r06r3F         [24] 2222 	mov	dptr,#(_makeTcpAck_target_mac_10000_134 + 0x0005)
      000966 74 31            [12] 2223 	mov	a,#0x31
      000968 F0               [24] 2224 	movx	@dptr,a
                                   2225 ;	trial_webserver.c:308: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000969 90r06r40         [24] 2226 	mov	dptr,#_makeTcpAck_device_ip_10000_134
      00096C 74 C0            [12] 2227 	mov	a,#0xc0
      00096E F0               [24] 2228 	movx	@dptr,a
      00096F 90r06r41         [24] 2229 	mov	dptr,#(_makeTcpAck_device_ip_10000_134 + 0x0001)
      000972 74 A8            [12] 2230 	mov	a,#0xa8
      000974 F0               [24] 2231 	movx	@dptr,a
      000975 90r06r42         [24] 2232 	mov	dptr,#(_makeTcpAck_device_ip_10000_134 + 0x0002)
      000978 74 01            [12] 2233 	mov	a,#0x01
      00097A F0               [24] 2234 	movx	@dptr,a
      00097B 90r06r43         [24] 2235 	mov	dptr,#(_makeTcpAck_device_ip_10000_134 + 0x0003)
      00097E 74 64            [12] 2236 	mov	a,#0x64
      000980 F0               [24] 2237 	movx	@dptr,a
                                   2238 ;	trial_webserver.c:309: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      000981 90r06r44         [24] 2239 	mov	dptr,#_makeTcpAck_target_ip_10000_134
      000984 74 C0            [12] 2240 	mov	a,#0xc0
      000986 F0               [24] 2241 	movx	@dptr,a
      000987 90r06r45         [24] 2242 	mov	dptr,#(_makeTcpAck_target_ip_10000_134 + 0x0001)
      00098A 74 A8            [12] 2243 	mov	a,#0xa8
      00098C F0               [24] 2244 	movx	@dptr,a
      00098D 90r06r46         [24] 2245 	mov	dptr,#(_makeTcpAck_target_ip_10000_134 + 0x0002)
      000990 74 01            [12] 2246 	mov	a,#0x01
      000992 F0               [24] 2247 	movx	@dptr,a
      000993 90r06r47         [24] 2248 	mov	dptr,#(_makeTcpAck_target_ip_10000_134 + 0x0003)
      000996 F0               [24] 2249 	movx	@dptr,a
                                   2250 ;	trial_webserver.c:310: printf("tcpack\n\r");
      000997 74r42            [12] 2251 	mov	a,#___str_4
      000999 C0 E0            [24] 2252 	push	acc
      00099B 74s00            [12] 2253 	mov	a,#(___str_4 >> 8)
      00099D C0 E0            [24] 2254 	push	acc
      00099F 74 80            [12] 2255 	mov	a,#0x80
      0009A1 C0 E0            [24] 2256 	push	acc
      0009A3 12r00r00         [24] 2257 	lcall	_printf
      0009A6 15 81            [12] 2258 	dec	sp
      0009A8 15 81            [12] 2259 	dec	sp
      0009AA 15 81            [12] 2260 	dec	sp
                                   2261 ;	trial_webserver.c:311: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      0009AC 90r00r00         [24] 2262 	mov	dptr,#_memmove_PARM_2
      0009AF 74r08            [12] 2263 	mov	a,#_buffer
      0009B1 F0               [24] 2264 	movx	@dptr,a
      0009B2 74s00            [12] 2265 	mov	a,#(_buffer >> 8)
      0009B4 A3               [24] 2266 	inc	dptr
      0009B5 F0               [24] 2267 	movx	@dptr,a
      0009B6 E4               [12] 2268 	clr	a
      0009B7 A3               [24] 2269 	inc	dptr
      0009B8 F0               [24] 2270 	movx	@dptr,a
      0009B9 90r00r00         [24] 2271 	mov	dptr,#_memmove_PARM_3
      0009BC 74 36            [12] 2272 	mov	a,#0x36
      0009BE F0               [24] 2273 	movx	@dptr,a
      0009BF E4               [12] 2274 	clr	a
      0009C0 A3               [24] 2275 	inc	dptr
      0009C1 F0               [24] 2276 	movx	@dptr,a
      0009C2 90r00r09         [24] 2277 	mov	dptr,#(_buffer + 0x0001)
      0009C5 F5 F0            [12] 2278 	mov	b,a
      0009C7 12r00r00         [24] 2279 	lcall	_memmove
                                   2280 ;	trial_webserver.c:314: buffer[0] = 0x0E;
      0009CA 90r00r08         [24] 2281 	mov	dptr,#_buffer
      0009CD 74 0E            [12] 2282 	mov	a,#0x0e
      0009CF F0               [24] 2283 	movx	@dptr,a
                                   2284 ;	trial_webserver.c:315: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;
      0009D0 90r00r38         [24] 2285 	mov	dptr,#(_buffer + 0x0030)
      0009D3 74 10            [12] 2286 	mov	a,#0x10
      0009D5 F0               [24] 2287 	movx	@dptr,a
                                   2288 ;	trial_webserver.c:316: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P);
      0009D6 90r00r00         [24] 2289 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0009D9 74 37            [12] 2290 	mov	a,#0x37
      0009DB F0               [24] 2291 	movx	@dptr,a
      0009DC E4               [12] 2292 	clr	a
      0009DD A3               [24] 2293 	inc	dptr
      0009DE F0               [24] 2294 	movx	@dptr,a
      0009DF 90r00r08         [24] 2295 	mov	dptr,#_buffer
      0009E2 F5 F0            [12] 2296 	mov	b,a
                                   2297 ;	trial_webserver.c:317: }
      0009E4 02r00r00         [24] 2298 	ljmp	_transmit_tcp_packet
                                   2299 ;------------------------------------------------------------
                                   2300 ;Allocation info for local variables in function 'makeTcpFinPshAck'
                                   2301 ;------------------------------------------------------------
                                   2302 ;device_mac                Allocated with name '_makeTcpFinPshAck_device_mac_10000_135'
                                   2303 ;target_mac                Allocated with name '_makeTcpFinPshAck_target_mac_10000_135'
                                   2304 ;device_ip                 Allocated with name '_makeTcpFinPshAck_device_ip_10000_135'
                                   2305 ;target_ip                 Allocated with name '_makeTcpFinPshAck_target_ip_10000_135'
                                   2306 ;srcPort                   Allocated with name '_makeTcpFinPshAck_srcPort_10001_136'
                                   2307 ;dstPort                   Allocated with name '_makeTcpFinPshAck_dstPort_10001_136'
                                   2308 ;serverSeqNum              Allocated with name '_makeTcpFinPshAck_serverSeqNum_10002_137'
                                   2309 ;ackNum                    Allocated with name '_makeTcpFinPshAck_ackNum_10002_137'
                                   2310 ;html_payload              Allocated with name '_makeTcpFinPshAck_html_payload_10003_138'
                                   2311 ;dataLength                Allocated with name '_makeTcpFinPshAck_dataLength_10003_138'
                                   2312 ;totalLength               Allocated with name '_makeTcpFinPshAck_totalLength_10003_138'
                                   2313 ;------------------------------------------------------------
                                   2314 ;	trial_webserver.c:319: void makeTcpFinPshAck() {
                                   2315 ;	-----------------------------------------
                                   2316 ;	 function makeTcpFinPshAck
                                   2317 ;	-----------------------------------------
      0009E7                       2318 _makeTcpFinPshAck:
                                   2319 ;	trial_webserver.c:320: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      0009E7 90r06r48         [24] 2320 	mov	dptr,#_makeTcpFinPshAck_device_mac_10000_135
      0009EA 74 02            [12] 2321 	mov	a,#0x02
      0009EC F0               [24] 2322 	movx	@dptr,a
      0009ED 90r06r49         [24] 2323 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_135 + 0x0001)
      0009F0 74 11            [12] 2324 	mov	a,#0x11
      0009F2 F0               [24] 2325 	movx	@dptr,a
      0009F3 90r06r4A         [24] 2326 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_135 + 0x0002)
      0009F6 23               [12] 2327 	rl	a
      0009F7 F0               [24] 2328 	movx	@dptr,a
      0009F8 90r06r4B         [24] 2329 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_135 + 0x0003)
      0009FB 74 33            [12] 2330 	mov	a,#0x33
      0009FD F0               [24] 2331 	movx	@dptr,a
      0009FE 90r06r4C         [24] 2332 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_135 + 0x0004)
      000A01 74 44            [12] 2333 	mov	a,#0x44
      000A03 F0               [24] 2334 	movx	@dptr,a
      000A04 90r06r4D         [24] 2335 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_135 + 0x0005)
      000A07 74 55            [12] 2336 	mov	a,#0x55
      000A09 F0               [24] 2337 	movx	@dptr,a
                                   2338 ;	trial_webserver.c:321: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      000A0A 90r06r4E         [24] 2339 	mov	dptr,#_makeTcpFinPshAck_target_mac_10000_135
      000A0D 74 F8            [12] 2340 	mov	a,#0xf8
      000A0F F0               [24] 2341 	movx	@dptr,a
      000A10 90r06r4F         [24] 2342 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_135 + 0x0001)
      000A13 74 75            [12] 2343 	mov	a,#0x75
      000A15 F0               [24] 2344 	movx	@dptr,a
      000A16 90r06r50         [24] 2345 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_135 + 0x0002)
      000A19 74 A4            [12] 2346 	mov	a,#0xa4
      000A1B F0               [24] 2347 	movx	@dptr,a
      000A1C 90r06r51         [24] 2348 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_135 + 0x0003)
      000A1F 74 8C            [12] 2349 	mov	a,#0x8c
      000A21 F0               [24] 2350 	movx	@dptr,a
      000A22 90r06r52         [24] 2351 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_135 + 0x0004)
      000A25 74 41            [12] 2352 	mov	a,#0x41
      000A27 F0               [24] 2353 	movx	@dptr,a
      000A28 90r06r53         [24] 2354 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_135 + 0x0005)
      000A2B 74 31            [12] 2355 	mov	a,#0x31
      000A2D F0               [24] 2356 	movx	@dptr,a
                                   2357 ;	trial_webserver.c:322: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000A2E 90r06r54         [24] 2358 	mov	dptr,#_makeTcpFinPshAck_device_ip_10000_135
      000A31 74 C0            [12] 2359 	mov	a,#0xc0
      000A33 F0               [24] 2360 	movx	@dptr,a
      000A34 90r06r55         [24] 2361 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_135 + 0x0001)
      000A37 74 A8            [12] 2362 	mov	a,#0xa8
      000A39 F0               [24] 2363 	movx	@dptr,a
      000A3A 90r06r56         [24] 2364 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_135 + 0x0002)
      000A3D 74 01            [12] 2365 	mov	a,#0x01
      000A3F F0               [24] 2366 	movx	@dptr,a
      000A40 90r06r57         [24] 2367 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_135 + 0x0003)
      000A43 74 64            [12] 2368 	mov	a,#0x64
      000A45 F0               [24] 2369 	movx	@dptr,a
                                   2370 ;	trial_webserver.c:323: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      000A46 90r06r58         [24] 2371 	mov	dptr,#_makeTcpFinPshAck_target_ip_10000_135
      000A49 74 C0            [12] 2372 	mov	a,#0xc0
      000A4B F0               [24] 2373 	movx	@dptr,a
      000A4C 90r06r59         [24] 2374 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_135 + 0x0001)
      000A4F 74 A8            [12] 2375 	mov	a,#0xa8
      000A51 F0               [24] 2376 	movx	@dptr,a
      000A52 90r06r5A         [24] 2377 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_135 + 0x0002)
      000A55 74 01            [12] 2378 	mov	a,#0x01
      000A57 F0               [24] 2379 	movx	@dptr,a
      000A58 90r06r5B         [24] 2380 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_135 + 0x0003)
      000A5B F0               [24] 2381 	movx	@dptr,a
                                   2382 ;	trial_webserver.c:324: printf("makeTcpFinPshAck\n\r");
      000A5C 74rC6            [12] 2383 	mov	a,#___str_6
      000A5E C0 E0            [24] 2384 	push	acc
      000A60 74s03            [12] 2385 	mov	a,#(___str_6 >> 8)
      000A62 C0 E0            [24] 2386 	push	acc
      000A64 74 80            [12] 2387 	mov	a,#0x80
      000A66 C0 E0            [24] 2388 	push	acc
      000A68 12r00r00         [24] 2389 	lcall	_printf
      000A6B 15 81            [12] 2390 	dec	sp
      000A6D 15 81            [12] 2391 	dec	sp
      000A6F 15 81            [12] 2392 	dec	sp
                                   2393 ;	trial_webserver.c:327: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000A71 90r00r00         [24] 2394 	mov	dptr,#_memmove_PARM_2
      000A74 74r08            [12] 2395 	mov	a,#_buffer
      000A76 F0               [24] 2396 	movx	@dptr,a
      000A77 74s00            [12] 2397 	mov	a,#(_buffer >> 8)
      000A79 A3               [24] 2398 	inc	dptr
      000A7A F0               [24] 2399 	movx	@dptr,a
      000A7B E4               [12] 2400 	clr	a
      000A7C A3               [24] 2401 	inc	dptr
      000A7D F0               [24] 2402 	movx	@dptr,a
      000A7E 90r00r00         [24] 2403 	mov	dptr,#_memmove_PARM_3
      000A81 74 36            [12] 2404 	mov	a,#0x36
      000A83 F0               [24] 2405 	movx	@dptr,a
      000A84 E4               [12] 2406 	clr	a
      000A85 A3               [24] 2407 	inc	dptr
      000A86 F0               [24] 2408 	movx	@dptr,a
      000A87 90r00r09         [24] 2409 	mov	dptr,#(_buffer + 0x0001)
      000A8A F5 F0            [12] 2410 	mov	b,a
      000A8C 12r00r00         [24] 2411 	lcall	_memmove
                                   2412 ;	trial_webserver.c:328: buffer[0] = 0x0E;
      000A8F 90r00r08         [24] 2413 	mov	dptr,#_buffer
      000A92 74 0E            [12] 2414 	mov	a,#0x0e
      000A94 F0               [24] 2415 	movx	@dptr,a
                                   2416 ;	trial_webserver.c:331: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      000A95 90r00r00         [24] 2417 	mov	dptr,#___memcpy_PARM_2
      000A98 74r0F            [12] 2418 	mov	a,#(_buffer + 0x0007)
      000A9A F0               [24] 2419 	movx	@dptr,a
      000A9B 74s00            [12] 2420 	mov	a,#((_buffer + 0x0007) >> 8)
      000A9D A3               [24] 2421 	inc	dptr
      000A9E F0               [24] 2422 	movx	@dptr,a
      000A9F E4               [12] 2423 	clr	a
      000AA0 A3               [24] 2424 	inc	dptr
      000AA1 F0               [24] 2425 	movx	@dptr,a
      000AA2 90r00r00         [24] 2426 	mov	dptr,#___memcpy_PARM_3
      000AA5 74 06            [12] 2427 	mov	a,#0x06
      000AA7 F0               [24] 2428 	movx	@dptr,a
      000AA8 E4               [12] 2429 	clr	a
      000AA9 A3               [24] 2430 	inc	dptr
      000AAA F0               [24] 2431 	movx	@dptr,a
      000AAB 90r00r09         [24] 2432 	mov	dptr,#(_buffer + 0x0001)
      000AAE F5 F0            [12] 2433 	mov	b,a
      000AB0 12r00r00         [24] 2434 	lcall	___memcpy
                                   2435 ;	trial_webserver.c:332: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      000AB3 90r00r00         [24] 2436 	mov	dptr,#___memcpy_PARM_2
      000AB6 74r48            [12] 2437 	mov	a,#_makeTcpFinPshAck_device_mac_10000_135
      000AB8 F0               [24] 2438 	movx	@dptr,a
      000AB9 74s06            [12] 2439 	mov	a,#(_makeTcpFinPshAck_device_mac_10000_135 >> 8)
      000ABB A3               [24] 2440 	inc	dptr
      000ABC F0               [24] 2441 	movx	@dptr,a
      000ABD E4               [12] 2442 	clr	a
      000ABE A3               [24] 2443 	inc	dptr
      000ABF F0               [24] 2444 	movx	@dptr,a
      000AC0 90r00r00         [24] 2445 	mov	dptr,#___memcpy_PARM_3
      000AC3 74 06            [12] 2446 	mov	a,#0x06
      000AC5 F0               [24] 2447 	movx	@dptr,a
      000AC6 E4               [12] 2448 	clr	a
      000AC7 A3               [24] 2449 	inc	dptr
      000AC8 F0               [24] 2450 	movx	@dptr,a
      000AC9 90r00r0F         [24] 2451 	mov	dptr,#(_buffer + 0x0007)
      000ACC F5 F0            [12] 2452 	mov	b,a
      000ACE 12r00r00         [24] 2453 	lcall	___memcpy
                                   2454 ;	trial_webserver.c:335: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000AD1 90r00r00         [24] 2455 	mov	dptr,#___memcpy_PARM_2
      000AD4 74r23            [12] 2456 	mov	a,#(_buffer + 0x001b)
      000AD6 F0               [24] 2457 	movx	@dptr,a
      000AD7 74s00            [12] 2458 	mov	a,#((_buffer + 0x001b) >> 8)
      000AD9 A3               [24] 2459 	inc	dptr
      000ADA F0               [24] 2460 	movx	@dptr,a
      000ADB E4               [12] 2461 	clr	a
      000ADC A3               [24] 2462 	inc	dptr
      000ADD F0               [24] 2463 	movx	@dptr,a
      000ADE 90r00r00         [24] 2464 	mov	dptr,#___memcpy_PARM_3
      000AE1 74 04            [12] 2465 	mov	a,#0x04
      000AE3 F0               [24] 2466 	movx	@dptr,a
      000AE4 E4               [12] 2467 	clr	a
      000AE5 A3               [24] 2468 	inc	dptr
      000AE6 F0               [24] 2469 	movx	@dptr,a
      000AE7 90r00r27         [24] 2470 	mov	dptr,#(_buffer + 0x001f)
      000AEA F5 F0            [12] 2471 	mov	b,a
      000AEC 12r00r00         [24] 2472 	lcall	___memcpy
                                   2473 ;	trial_webserver.c:336: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000AEF 90r00r00         [24] 2474 	mov	dptr,#___memcpy_PARM_2
      000AF2 74r54            [12] 2475 	mov	a,#_makeTcpFinPshAck_device_ip_10000_135
      000AF4 F0               [24] 2476 	movx	@dptr,a
      000AF5 74s06            [12] 2477 	mov	a,#(_makeTcpFinPshAck_device_ip_10000_135 >> 8)
      000AF7 A3               [24] 2478 	inc	dptr
      000AF8 F0               [24] 2479 	movx	@dptr,a
      000AF9 E4               [12] 2480 	clr	a
      000AFA A3               [24] 2481 	inc	dptr
      000AFB F0               [24] 2482 	movx	@dptr,a
      000AFC 90r00r00         [24] 2483 	mov	dptr,#___memcpy_PARM_3
      000AFF 74 04            [12] 2484 	mov	a,#0x04
      000B01 F0               [24] 2485 	movx	@dptr,a
      000B02 E4               [12] 2486 	clr	a
      000B03 A3               [24] 2487 	inc	dptr
      000B04 F0               [24] 2488 	movx	@dptr,a
      000B05 90r00r23         [24] 2489 	mov	dptr,#(_buffer + 0x001b)
      000B08 F5 F0            [12] 2490 	mov	b,a
      000B0A 12r00r00         [24] 2491 	lcall	___memcpy
                                   2492 ;	trial_webserver.c:339: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000B0D 90r00r2B         [24] 2493 	mov	dptr,#(_buffer + 0x0023)
      000B10 E0               [24] 2494 	movx	a,@dptr
      000B11 FE               [12] 2495 	mov	r6,a
      000B12 7F 00            [12] 2496 	mov	r7,#0x00
      000B14 90r00r2C         [24] 2497 	mov	dptr,#(_buffer + 0x0024)
      000B17 E0               [24] 2498 	movx	a,@dptr
      000B18 7C 00            [12] 2499 	mov	r4,#0x00
      000B1A 42 07            [12] 2500 	orl	ar7,a
      000B1C EC               [12] 2501 	mov	a,r4
      000B1D 42 06            [12] 2502 	orl	ar6,a
                                   2503 ;	trial_webserver.c:341: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000B1F 90r00r2D         [24] 2504 	mov	dptr,#(_buffer + 0x0025)
      000B22 E0               [24] 2505 	movx	a,@dptr
      000B23 FC               [12] 2506 	mov	r4,a
      000B24 7D 00            [12] 2507 	mov	r5,#0x00
      000B26 90r00r2E         [24] 2508 	mov	dptr,#(_buffer + 0x0026)
      000B29 E0               [24] 2509 	movx	a,@dptr
      000B2A 7A 00            [12] 2510 	mov	r2,#0x00
      000B2C 42 05            [12] 2511 	orl	ar5,a
      000B2E EA               [12] 2512 	mov	a,r2
      000B2F 42 04            [12] 2513 	orl	ar4,a
                                   2514 ;	trial_webserver.c:343: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000B31 8C 03            [24] 2515 	mov	ar3,r4
      000B33 90r00r2B         [24] 2516 	mov	dptr,#(_buffer + 0x0023)
      000B36 EB               [12] 2517 	mov	a,r3
      000B37 F0               [24] 2518 	movx	@dptr,a
                                   2519 ;	trial_webserver.c:344: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      000B38 90r00r2C         [24] 2520 	mov	dptr,#(_buffer + 0x0024)
      000B3B ED               [12] 2521 	mov	a,r5
      000B3C F0               [24] 2522 	movx	@dptr,a
                                   2523 ;	trial_webserver.c:345: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      000B3D 8E 05            [24] 2524 	mov	ar5,r6
      000B3F 90r00r2D         [24] 2525 	mov	dptr,#(_buffer + 0x0025)
      000B42 ED               [12] 2526 	mov	a,r5
      000B43 F0               [24] 2527 	movx	@dptr,a
                                   2528 ;	trial_webserver.c:346: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      000B44 90r00r2E         [24] 2529 	mov	dptr,#(_buffer + 0x0026)
      000B47 EF               [12] 2530 	mov	a,r7
      000B48 F0               [24] 2531 	movx	@dptr,a
                                   2532 ;	trial_webserver.c:349: uint32_t serverSeqNum = prevSeq;
      000B49 90r00r00         [24] 2533 	mov	dptr,#_prevSeq
      000B4C E0               [24] 2534 	movx	a,@dptr
      000B4D FC               [12] 2535 	mov	r4,a
      000B4E A3               [24] 2536 	inc	dptr
      000B4F E0               [24] 2537 	movx	a,@dptr
      000B50 FD               [12] 2538 	mov	r5,a
      000B51 A3               [24] 2539 	inc	dptr
      000B52 E0               [24] 2540 	movx	a,@dptr
      000B53 FE               [12] 2541 	mov	r6,a
      000B54 A3               [24] 2542 	inc	dptr
      000B55 E0               [24] 2543 	movx	a,@dptr
      000B56 FF               [12] 2544 	mov	r7,a
      000B57 90r06r5C         [24] 2545 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_137
      000B5A EC               [12] 2546 	mov	a,r4
      000B5B F0               [24] 2547 	movx	@dptr,a
      000B5C ED               [12] 2548 	mov	a,r5
      000B5D A3               [24] 2549 	inc	dptr
      000B5E F0               [24] 2550 	movx	@dptr,a
      000B5F EE               [12] 2551 	mov	a,r6
      000B60 A3               [24] 2552 	inc	dptr
      000B61 F0               [24] 2553 	movx	@dptr,a
      000B62 EF               [12] 2554 	mov	a,r7
      000B63 A3               [24] 2555 	inc	dptr
      000B64 F0               [24] 2556 	movx	@dptr,a
                                   2557 ;	trial_webserver.c:350: uint32_t ackNum = prevAck;
      000B65 90r00r04         [24] 2558 	mov	dptr,#_prevAck
      000B68 E0               [24] 2559 	movx	a,@dptr
      000B69 F8               [12] 2560 	mov	r0,a
      000B6A A3               [24] 2561 	inc	dptr
      000B6B E0               [24] 2562 	movx	a,@dptr
      000B6C F9               [12] 2563 	mov	r1,a
      000B6D A3               [24] 2564 	inc	dptr
      000B6E E0               [24] 2565 	movx	a,@dptr
      000B6F FA               [12] 2566 	mov	r2,a
      000B70 A3               [24] 2567 	inc	dptr
      000B71 E0               [24] 2568 	movx	a,@dptr
      000B72 FB               [12] 2569 	mov	r3,a
      000B73 90r06r60         [24] 2570 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_137
      000B76 E8               [12] 2571 	mov	a,r0
      000B77 F0               [24] 2572 	movx	@dptr,a
      000B78 E9               [12] 2573 	mov	a,r1
      000B79 A3               [24] 2574 	inc	dptr
      000B7A F0               [24] 2575 	movx	@dptr,a
      000B7B EA               [12] 2576 	mov	a,r2
      000B7C A3               [24] 2577 	inc	dptr
      000B7D F0               [24] 2578 	movx	@dptr,a
      000B7E EB               [12] 2579 	mov	a,r3
      000B7F A3               [24] 2580 	inc	dptr
      000B80 F0               [24] 2581 	movx	@dptr,a
                                   2582 ;	trial_webserver.c:352: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      000B81 8F 04            [24] 2583 	mov	ar4,r7
      000B83 90r00r2F         [24] 2584 	mov	dptr,#(_buffer + 0x0027)
      000B86 EC               [12] 2585 	mov	a,r4
      000B87 F0               [24] 2586 	movx	@dptr,a
                                   2587 ;	trial_webserver.c:353: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      000B88 90r06r5C         [24] 2588 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_137
      000B8B E0               [24] 2589 	movx	a,@dptr
      000B8C FC               [12] 2590 	mov	r4,a
      000B8D A3               [24] 2591 	inc	dptr
      000B8E E0               [24] 2592 	movx	a,@dptr
      000B8F FD               [12] 2593 	mov	r5,a
      000B90 A3               [24] 2594 	inc	dptr
      000B91 E0               [24] 2595 	movx	a,@dptr
      000B92 FE               [12] 2596 	mov	r6,a
      000B93 A3               [24] 2597 	inc	dptr
      000B94 E0               [24] 2598 	movx	a,@dptr
      000B95 8E 03            [24] 2599 	mov	ar3,r6
      000B97 90r00r30         [24] 2600 	mov	dptr,#(_buffer + 0x0028)
      000B9A EB               [12] 2601 	mov	a,r3
      000B9B F0               [24] 2602 	movx	@dptr,a
                                   2603 ;	trial_webserver.c:354: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000B9C 8D 03            [24] 2604 	mov	ar3,r5
      000B9E 90r00r31         [24] 2605 	mov	dptr,#(_buffer + 0x0029)
      000BA1 EB               [12] 2606 	mov	a,r3
      000BA2 F0               [24] 2607 	movx	@dptr,a
                                   2608 ;	trial_webserver.c:355: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      000BA3 90r00r32         [24] 2609 	mov	dptr,#(_buffer + 0x002a)
      000BA6 EC               [12] 2610 	mov	a,r4
      000BA7 F0               [24] 2611 	movx	@dptr,a
                                   2612 ;	trial_webserver.c:356: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      000BA8 90r06r60         [24] 2613 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_137
      000BAB E0               [24] 2614 	movx	a,@dptr
      000BAC FC               [12] 2615 	mov	r4,a
      000BAD A3               [24] 2616 	inc	dptr
      000BAE E0               [24] 2617 	movx	a,@dptr
      000BAF FD               [12] 2618 	mov	r5,a
      000BB0 A3               [24] 2619 	inc	dptr
      000BB1 E0               [24] 2620 	movx	a,@dptr
      000BB2 FE               [12] 2621 	mov	r6,a
      000BB3 A3               [24] 2622 	inc	dptr
      000BB4 E0               [24] 2623 	movx	a,@dptr
      000BB5 90r00r33         [24] 2624 	mov	dptr,#(_buffer + 0x002b)
      000BB8 F0               [24] 2625 	movx	@dptr,a
                                   2626 ;	trial_webserver.c:357: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      000BB9 8E 03            [24] 2627 	mov	ar3,r6
      000BBB 90r00r34         [24] 2628 	mov	dptr,#(_buffer + 0x002c)
      000BBE EB               [12] 2629 	mov	a,r3
      000BBF F0               [24] 2630 	movx	@dptr,a
                                   2631 ;	trial_webserver.c:358: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      000BC0 8D 03            [24] 2632 	mov	ar3,r5
      000BC2 90r00r35         [24] 2633 	mov	dptr,#(_buffer + 0x002d)
      000BC5 EB               [12] 2634 	mov	a,r3
      000BC6 F0               [24] 2635 	movx	@dptr,a
                                   2636 ;	trial_webserver.c:359: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      000BC7 90r00r36         [24] 2637 	mov	dptr,#(_buffer + 0x002e)
      000BCA EC               [12] 2638 	mov	a,r4
      000BCB F0               [24] 2639 	movx	@dptr,a
                                   2640 ;	trial_webserver.c:362: const char *html_payload =
                                   2641 ;	trial_webserver.c:385: uint16_t dataLength = strlen(html_payload);
      000BCC 90r00r4B         [24] 2642 	mov	dptr,#___str_5
      000BCF 75 F0 80         [24] 2643 	mov	b, #0x80
      000BD2 12r00r00         [24] 2644 	lcall	_strlen
      000BD5 AE 82            [24] 2645 	mov	r6, dpl
      000BD7 AF 83            [24] 2646 	mov	r7, dph
                                   2647 ;	trial_webserver.c:388: uint16_t totalLength = IP_HEADER_LEN + TCP_HEADER_LEN + dataLength;
      000BD9 74 28            [12] 2648 	mov	a,#0x28
      000BDB 2E               [12] 2649 	add	a, r6
      000BDC FC               [12] 2650 	mov	r4,a
      000BDD E4               [12] 2651 	clr	a
      000BDE 3F               [12] 2652 	addc	a, r7
                                   2653 ;	trial_webserver.c:389: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000BDF 90r00r19         [24] 2654 	mov	dptr,#(_buffer + 0x0011)
      000BE2 F0               [24] 2655 	movx	@dptr,a
                                   2656 ;	trial_webserver.c:390: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000BE3 90r00r1A         [24] 2657 	mov	dptr,#(_buffer + 0x0012)
      000BE6 EC               [12] 2658 	mov	a,r4
      000BE7 F0               [24] 2659 	movx	@dptr,a
                                   2660 ;	trial_webserver.c:393: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_FIN | TCP_FLAG_PUSH | TCP_FLAG_ACK;
      000BE8 90r00r38         [24] 2661 	mov	dptr,#(_buffer + 0x0030)
      000BEB 74 19            [12] 2662 	mov	a,#0x19
      000BED F0               [24] 2663 	movx	@dptr,a
                                   2664 ;	trial_webserver.c:394: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF;
      000BEE 90r00r39         [24] 2665 	mov	dptr,#(_buffer + 0x0031)
      000BF1 74 FF            [12] 2666 	mov	a,#0xff
      000BF3 F0               [24] 2667 	movx	@dptr,a
                                   2668 ;	trial_webserver.c:395: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      000BF4 90r00r3A         [24] 2669 	mov	dptr,#(_buffer + 0x0032)
      000BF7 F0               [24] 2670 	movx	@dptr,a
                                   2671 ;	trial_webserver.c:396: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000BF8 90r00r37         [24] 2672 	mov	dptr,#(_buffer + 0x002f)
      000BFB 74 50            [12] 2673 	mov	a,#0x50
      000BFD F0               [24] 2674 	movx	@dptr,a
                                   2675 ;	trial_webserver.c:399: memcpy(&buffer[1 + TCP_DATA_START_P], html_payload, dataLength);
      000BFE 90r00r00         [24] 2676 	mov	dptr,#___memcpy_PARM_2
      000C01 74r4B            [12] 2677 	mov	a,#___str_5
      000C03 F0               [24] 2678 	movx	@dptr,a
      000C04 74s00            [12] 2679 	mov	a,#(___str_5 >> 8)
      000C06 A3               [24] 2680 	inc	dptr
      000C07 F0               [24] 2681 	movx	@dptr,a
      000C08 74 80            [12] 2682 	mov	a,#0x80
      000C0A A3               [24] 2683 	inc	dptr
      000C0B F0               [24] 2684 	movx	@dptr,a
      000C0C 90r00r00         [24] 2685 	mov	dptr,#___memcpy_PARM_3
      000C0F EE               [12] 2686 	mov	a,r6
      000C10 F0               [24] 2687 	movx	@dptr,a
      000C11 EF               [12] 2688 	mov	a,r7
      000C12 A3               [24] 2689 	inc	dptr
      000C13 F0               [24] 2690 	movx	@dptr,a
      000C14 90r00r3F         [24] 2691 	mov	dptr,#(_buffer + 0x0037)
      000C17 75 F0 00         [24] 2692 	mov	b, #0x00
      000C1A C0 07            [24] 2693 	push	ar7
      000C1C C0 06            [24] 2694 	push	ar6
      000C1E 12r00r00         [24] 2695 	lcall	___memcpy
                                   2696 ;	trial_webserver.c:402: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000C21 90r00r09         [24] 2697 	mov	dptr,#(_buffer + 0x0001)
      000C24 75 F0 00         [24] 2698 	mov	b, #0x00
      000C27 12r00r00         [24] 2699 	lcall	_calculateIPChecksum
                                   2700 ;	trial_webserver.c:403: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000C2A 90r00r09         [24] 2701 	mov	dptr,#(_buffer + 0x0001)
      000C2D 75 F0 00         [24] 2702 	mov	b, #0x00
      000C30 12r00r00         [24] 2703 	lcall	_calculateTcpChecksum
      000C33 D0 06            [24] 2704 	pop	ar6
      000C35 D0 07            [24] 2705 	pop	ar7
                                   2706 ;	trial_webserver.c:406: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P + dataLength);
      000C37 74 37            [12] 2707 	mov	a,#0x37
      000C39 2E               [12] 2708 	add	a, r6
      000C3A FE               [12] 2709 	mov	r6,a
      000C3B E4               [12] 2710 	clr	a
      000C3C 3F               [12] 2711 	addc	a, r7
      000C3D FF               [12] 2712 	mov	r7,a
      000C3E 90r00r00         [24] 2713 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000C41 EE               [12] 2714 	mov	a,r6
      000C42 F0               [24] 2715 	movx	@dptr,a
      000C43 EF               [12] 2716 	mov	a,r7
      000C44 A3               [24] 2717 	inc	dptr
      000C45 F0               [24] 2718 	movx	@dptr,a
      000C46 90r00r08         [24] 2719 	mov	dptr,#_buffer
      000C49 75 F0 00         [24] 2720 	mov	b, #0x00
      000C4C 12r00r00         [24] 2721 	lcall	_transmit_tcp_packet
                                   2722 ;	trial_webserver.c:409: connectionState = FIN_WAIT;
      000C4F 90r00r00         [24] 2723 	mov	dptr,#_connectionState
      000C52 74 03            [12] 2724 	mov	a,#0x03
      000C54 F0               [24] 2725 	movx	@dptr,a
                                   2726 ;	trial_webserver.c:410: }
      000C55 22               [24] 2727 	ret
                                   2728 ;------------------------------------------------------------
                                   2729 ;Allocation info for local variables in function 'packetReceive'
                                   2730 ;------------------------------------------------------------
                                   2731 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_139'
                                   2732 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_139'
                                   2733 ;len                       Allocated with name '_packetReceive_len_10000_139'
                                   2734 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_141'
                                   2735 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_143'
                                   2736 ;header                    Allocated with name '_packetReceive_header_20002_145'
                                   2737 ;start                     Allocated with name '_packetReceive_start_20003_146'
                                   2738 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_147'
                                   2739 ;------------------------------------------------------------
                                   2740 ;	trial_webserver.c:415: uint16_t packetReceive()
                                   2741 ;	-----------------------------------------
                                   2742 ;	 function packetReceive
                                   2743 ;	-----------------------------------------
      000C56                       2744 _packetReceive:
                                   2745 ;	trial_webserver.c:419: uint16_t len = 0;
      000C56 90r06r67         [24] 2746 	mov	dptr,#_packetReceive_len_10000_139
      000C59 E4               [12] 2747 	clr	a
      000C5A F0               [24] 2748 	movx	@dptr,a
      000C5B A3               [24] 2749 	inc	dptr
      000C5C F0               [24] 2750 	movx	@dptr,a
                                   2751 ;	trial_webserver.c:422: if (unreleasedPacket) {
      000C5D 90r06r66         [24] 2752 	mov	dptr,#_packetReceive_unreleasedPacket_10000_139
      000C60 E0               [24] 2753 	movx	a,@dptr
      000C61 60 70            [24] 2754 	jz	00105$
                                   2755 ;	trial_webserver.c:423: if (gNextPacketPtr == 0) {
      000C63 90r06r64         [24] 2756 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000C66 E0               [24] 2757 	movx	a,@dptr
      000C67 FE               [12] 2758 	mov	r6,a
      000C68 A3               [24] 2759 	inc	dptr
      000C69 E0               [24] 2760 	movx	a,@dptr
      000C6A 90r06r64         [24] 2761 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000C6D E0               [24] 2762 	movx	a,@dptr
      000C6E F5 F0            [12] 2763 	mov	b,a
      000C70 A3               [24] 2764 	inc	dptr
      000C71 E0               [24] 2765 	movx	a,@dptr
      000C72 45 F0            [12] 2766 	orl	a,b
      000C74 70 26            [24] 2767 	jnz	00102$
                                   2768 ;	trial_webserver.c:425: spi_control_write(0, 0x0C, (uint8_t) (RX_END & 0xFF)); // Low byte
      000C76 90r00r00         [24] 2769 	mov	dptr,#_spi_control_write_PARM_2
      000C79 74 0C            [12] 2770 	mov	a,#0x0c
      000C7B F0               [24] 2771 	movx	@dptr,a
      000C7C 90r00r00         [24] 2772 	mov	dptr,#_spi_control_write_PARM_3
      000C7F 74 FF            [12] 2773 	mov	a,#0xff
      000C81 F0               [24] 2774 	movx	@dptr,a
      000C82 75 82 00         [24] 2775 	mov	dpl, #0x00
      000C85 12r00r00         [24] 2776 	lcall	_spi_control_write
                                   2777 ;	trial_webserver.c:426: spi_control_write(0, 0x0D, (uint8_t) ((RX_END >> 8) & 0xFF)); // High byte
      000C88 90r00r00         [24] 2778 	mov	dptr,#_spi_control_write_PARM_2
      000C8B 74 0D            [12] 2779 	mov	a,#0x0d
      000C8D F0               [24] 2780 	movx	@dptr,a
      000C8E 90r00r00         [24] 2781 	mov	dptr,#_spi_control_write_PARM_3
      000C91 74 1B            [12] 2782 	mov	a,#0x1b
      000C93 F0               [24] 2783 	movx	@dptr,a
      000C94 75 82 00         [24] 2784 	mov	dpl, #0x00
      000C97 12r00r00         [24] 2785 	lcall	_spi_control_write
      000C9A 80 32            [24] 2786 	sjmp	00103$
      000C9C                       2787 00102$:
                                   2788 ;	trial_webserver.c:428: spi_control_write(0, 0x0C, (uint8_t) ((gNextPacketPtr - 1) & 0xFF)); // Low byte
      000C9C 1E               [12] 2789 	dec	r6
      000C9D 90r00r00         [24] 2790 	mov	dptr,#_spi_control_write_PARM_2
      000CA0 74 0C            [12] 2791 	mov	a,#0x0c
      000CA2 F0               [24] 2792 	movx	@dptr,a
      000CA3 90r00r00         [24] 2793 	mov	dptr,#_spi_control_write_PARM_3
      000CA6 EE               [12] 2794 	mov	a,r6
      000CA7 F0               [24] 2795 	movx	@dptr,a
      000CA8 75 82 00         [24] 2796 	mov	dpl, #0x00
      000CAB 12r00r00         [24] 2797 	lcall	_spi_control_write
                                   2798 ;	trial_webserver.c:430: (uint8_t) (((gNextPacketPtr - 1) >> 8) & 0xFF)); // High byte
      000CAE 90r06r64         [24] 2799 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000CB1 E0               [24] 2800 	movx	a,@dptr
      000CB2 FE               [12] 2801 	mov	r6,a
      000CB3 A3               [24] 2802 	inc	dptr
      000CB4 E0               [24] 2803 	movx	a,@dptr
      000CB5 FF               [12] 2804 	mov	r7,a
      000CB6 1E               [12] 2805 	dec	r6
      000CB7 BE FF 01         [24] 2806 	cjne	r6,#0xff,00147$
      000CBA 1F               [12] 2807 	dec	r7
      000CBB                       2808 00147$:
      000CBB 8F 06            [24] 2809 	mov	ar6,r7
      000CBD 90r00r00         [24] 2810 	mov	dptr,#_spi_control_write_PARM_2
      000CC0 74 0D            [12] 2811 	mov	a,#0x0d
      000CC2 F0               [24] 2812 	movx	@dptr,a
      000CC3 90r00r00         [24] 2813 	mov	dptr,#_spi_control_write_PARM_3
      000CC6 EE               [12] 2814 	mov	a,r6
      000CC7 F0               [24] 2815 	movx	@dptr,a
      000CC8 75 82 00         [24] 2816 	mov	dpl, #0x00
      000CCB 12r00r00         [24] 2817 	lcall	_spi_control_write
      000CCE                       2818 00103$:
                                   2819 ;	trial_webserver.c:432: unreleasedPacket = false;
      000CCE 90r06r66         [24] 2820 	mov	dptr,#_packetReceive_unreleasedPacket_10000_139
      000CD1 E4               [12] 2821 	clr	a
      000CD2 F0               [24] 2822 	movx	@dptr,a
      000CD3                       2823 00105$:
                                   2824 ;	trial_webserver.c:435: uint8_t EPKTCNT = eth_spi_read(0x19, 1);
      000CD3 90r00r00         [24] 2825 	mov	dptr,#_eth_spi_read_PARM_2
      000CD6 74 01            [12] 2826 	mov	a,#0x01
      000CD8 F0               [24] 2827 	movx	@dptr,a
      000CD9 75 82 19         [24] 2828 	mov	dpl, #0x19
      000CDC 12r00r00         [24] 2829 	lcall	_eth_spi_read
      000CDF E5 82            [12] 2830 	mov	a, dpl
                                   2831 ;	trial_webserver.c:436: if (EPKTCNT > 0) {
      000CE1 70 03            [24] 2832 	jnz	00148$
      000CE3 02r0Er04         [24] 2833 	ljmp	00112$
      000CE6                       2834 00148$:
                                   2835 ;	trial_webserver.c:437: spi_control_write(0, 0x00, (uint8_t) (gNextPacketPtr & 0xFF)); // Low byte
      000CE6 90r06r64         [24] 2836 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000CE9 E0               [24] 2837 	movx	a,@dptr
      000CEA FE               [12] 2838 	mov	r6,a
      000CEB A3               [24] 2839 	inc	dptr
      000CEC E0               [24] 2840 	movx	a,@dptr
      000CED 90r00r00         [24] 2841 	mov	dptr,#_spi_control_write_PARM_2
      000CF0 E4               [12] 2842 	clr	a
      000CF1 F0               [24] 2843 	movx	@dptr,a
      000CF2 90r00r00         [24] 2844 	mov	dptr,#_spi_control_write_PARM_3
      000CF5 EE               [12] 2845 	mov	a,r6
      000CF6 F0               [24] 2846 	movx	@dptr,a
      000CF7 75 82 00         [24] 2847 	mov	dpl, #0x00
      000CFA 12r00r00         [24] 2848 	lcall	_spi_control_write
                                   2849 ;	trial_webserver.c:438: spi_control_write(0, 0x01, (uint8_t) ((gNextPacketPtr >> 8) & 0xFF)); // High byte
      000CFD 90r06r64         [24] 2850 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000D00 E0               [24] 2851 	movx	a,@dptr
      000D01 A3               [24] 2852 	inc	dptr
      000D02 E0               [24] 2853 	movx	a,@dptr
      000D03 FE               [12] 2854 	mov	r6,a
      000D04 90r00r00         [24] 2855 	mov	dptr,#_spi_control_write_PARM_2
      000D07 74 01            [12] 2856 	mov	a,#0x01
      000D09 F0               [24] 2857 	movx	@dptr,a
      000D0A 90r00r00         [24] 2858 	mov	dptr,#_spi_control_write_PARM_3
      000D0D EE               [12] 2859 	mov	a,r6
      000D0E F0               [24] 2860 	movx	@dptr,a
      000D0F 75 82 00         [24] 2861 	mov	dpl, #0x00
      000D12 12r00r00         [24] 2862 	lcall	_spi_control_write
                                   2863 ;	trial_webserver.c:447: spi_buffer_read(sizeof(PacketHeader), gNextPacketPtr,
      000D15 90r06r64         [24] 2864 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000D18 E0               [24] 2865 	movx	a,@dptr
      000D19 FE               [12] 2866 	mov	r6,a
      000D1A A3               [24] 2867 	inc	dptr
      000D1B E0               [24] 2868 	movx	a,@dptr
      000D1C FF               [12] 2869 	mov	r7,a
                                   2870 ;	trial_webserver.c:448: (uint8_t*) &header);
      000D1D 90r00r00         [24] 2871 	mov	dptr,#_spi_buffer_read_PARM_2
      000D20 EE               [12] 2872 	mov	a,r6
      000D21 F0               [24] 2873 	movx	@dptr,a
      000D22 EF               [12] 2874 	mov	a,r7
      000D23 A3               [24] 2875 	inc	dptr
      000D24 F0               [24] 2876 	movx	@dptr,a
      000D25 90r00r00         [24] 2877 	mov	dptr,#_spi_buffer_read_PARM_3
      000D28 74r69            [12] 2878 	mov	a,#_packetReceive_header_20002_145
      000D2A F0               [24] 2879 	movx	@dptr,a
      000D2B 74s06            [12] 2880 	mov	a,#(_packetReceive_header_20002_145 >> 8)
      000D2D A3               [24] 2881 	inc	dptr
      000D2E F0               [24] 2882 	movx	@dptr,a
      000D2F E4               [12] 2883 	clr	a
      000D30 A3               [24] 2884 	inc	dptr
      000D31 F0               [24] 2885 	movx	@dptr,a
      000D32 90 00 06         [24] 2886 	mov	dptr,#0x0006
      000D35 12r00r00         [24] 2887 	lcall	_spi_buffer_read
                                   2888 ;	trial_webserver.c:450: uint16_t start = gNextPacketPtr + sizeof(PacketHeader);
      000D38 90r06r64         [24] 2889 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000D3B E0               [24] 2890 	movx	a,@dptr
      000D3C FE               [12] 2891 	mov	r6,a
      000D3D A3               [24] 2892 	inc	dptr
      000D3E E0               [24] 2893 	movx	a,@dptr
      000D3F FF               [12] 2894 	mov	r7,a
      000D40 74 06            [12] 2895 	mov	a,#0x06
      000D42 2E               [12] 2896 	add	a, r6
      000D43 FE               [12] 2897 	mov	r6,a
      000D44 E4               [12] 2898 	clr	a
      000D45 3F               [12] 2899 	addc	a, r7
      000D46 FF               [12] 2900 	mov	r7,a
      000D47 90r06r6F         [24] 2901 	mov	dptr,#_packetReceive_start_20003_146
      000D4A EE               [12] 2902 	mov	a,r6
      000D4B F0               [24] 2903 	movx	@dptr,a
      000D4C EF               [12] 2904 	mov	a,r7
      000D4D A3               [24] 2905 	inc	dptr
      000D4E F0               [24] 2906 	movx	@dptr,a
                                   2907 ;	trial_webserver.c:451: gNextPacketPtr = header.nextPacket;
      000D4F 90r06r69         [24] 2908 	mov	dptr,#_packetReceive_header_20002_145
      000D52 E0               [24] 2909 	movx	a,@dptr
      000D53 FE               [12] 2910 	mov	r6,a
      000D54 A3               [24] 2911 	inc	dptr
      000D55 E0               [24] 2912 	movx	a,@dptr
      000D56 FF               [12] 2913 	mov	r7,a
      000D57 90r06r64         [24] 2914 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_139
      000D5A EE               [12] 2915 	mov	a,r6
      000D5B F0               [24] 2916 	movx	@dptr,a
      000D5C EF               [12] 2917 	mov	a,r7
      000D5D A3               [24] 2918 	inc	dptr
      000D5E F0               [24] 2919 	movx	@dptr,a
                                   2920 ;	trial_webserver.c:453: len = header.byteCount - 4; // Exclude CRC
      000D5F 90r06r6B         [24] 2921 	mov	dptr,#(_packetReceive_header_20002_145 + 0x0002)
      000D62 E0               [24] 2922 	movx	a,@dptr
      000D63 FE               [12] 2923 	mov	r6,a
      000D64 A3               [24] 2924 	inc	dptr
      000D65 E0               [24] 2925 	movx	a,@dptr
      000D66 FF               [12] 2926 	mov	r7,a
      000D67 EE               [12] 2927 	mov	a,r6
      000D68 24 FC            [12] 2928 	add	a,#0xfc
      000D6A FE               [12] 2929 	mov	r6,a
      000D6B EF               [12] 2930 	mov	a,r7
      000D6C 34 FF            [12] 2931 	addc	a,#0xff
      000D6E FF               [12] 2932 	mov	r7,a
      000D6F 90r06r67         [24] 2933 	mov	dptr,#_packetReceive_len_10000_139
      000D72 EE               [12] 2934 	mov	a,r6
      000D73 F0               [24] 2935 	movx	@dptr,a
      000D74 EF               [12] 2936 	mov	a,r7
      000D75 A3               [24] 2937 	inc	dptr
      000D76 F0               [24] 2938 	movx	@dptr,a
                                   2939 ;	trial_webserver.c:454: if (len > BUFFER_SIZE - 1)
      000D77 C3               [12] 2940 	clr	c
      000D78 74 DB            [12] 2941 	mov	a,#0xdb
      000D7A 9E               [12] 2942 	subb	a,r6
      000D7B 74 05            [12] 2943 	mov	a,#0x05
      000D7D 9F               [12] 2944 	subb	a,r7
      000D7E 50 0A            [24] 2945 	jnc	00107$
                                   2946 ;	trial_webserver.c:455: len = BUFFER_SIZE - 1;
      000D80 90r06r67         [24] 2947 	mov	dptr,#_packetReceive_len_10000_139
      000D83 74 DB            [12] 2948 	mov	a,#0xdb
      000D85 F0               [24] 2949 	movx	@dptr,a
      000D86 74 05            [12] 2950 	mov	a,#0x05
      000D88 A3               [24] 2951 	inc	dptr
      000D89 F0               [24] 2952 	movx	@dptr,a
      000D8A                       2953 00107$:
                                   2954 ;	trial_webserver.c:457: if ((header.status & 0x80) == 0)
      000D8A 90r06r6D         [24] 2955 	mov	dptr,#(_packetReceive_header_20002_145 + 0x0004)
      000D8D E0               [24] 2956 	movx	a,@dptr
      000D8E FE               [12] 2957 	mov	r6,a
      000D8F A3               [24] 2958 	inc	dptr
      000D90 E0               [24] 2959 	movx	a,@dptr
      000D91 EE               [12] 2960 	mov	a,r6
      000D92 20 E7 09         [24] 2961 	jb	acc.7,00109$
                                   2962 ;	trial_webserver.c:458: len = 0; // Invalid packet
      000D95 90r06r67         [24] 2963 	mov	dptr,#_packetReceive_len_10000_139
      000D98 E4               [12] 2964 	clr	a
      000D99 F0               [24] 2965 	movx	@dptr,a
      000D9A A3               [24] 2966 	inc	dptr
      000D9B F0               [24] 2967 	movx	@dptr,a
      000D9C 80 2C            [24] 2968 	sjmp	00110$
      000D9E                       2969 00109$:
                                   2970 ;	trial_webserver.c:460: spi_buffer_read(len, start, buffer);
      000D9E 90r06r67         [24] 2971 	mov	dptr,#_packetReceive_len_10000_139
      000DA1 E0               [24] 2972 	movx	a,@dptr
      000DA2 FE               [12] 2973 	mov	r6,a
      000DA3 A3               [24] 2974 	inc	dptr
      000DA4 E0               [24] 2975 	movx	a,@dptr
      000DA5 FF               [12] 2976 	mov	r7,a
      000DA6 90r06r6F         [24] 2977 	mov	dptr,#_packetReceive_start_20003_146
      000DA9 E0               [24] 2978 	movx	a,@dptr
      000DAA FC               [12] 2979 	mov	r4,a
      000DAB A3               [24] 2980 	inc	dptr
      000DAC E0               [24] 2981 	movx	a,@dptr
      000DAD FD               [12] 2982 	mov	r5,a
      000DAE 90r00r00         [24] 2983 	mov	dptr,#_spi_buffer_read_PARM_2
      000DB1 EC               [12] 2984 	mov	a,r4
      000DB2 F0               [24] 2985 	movx	@dptr,a
      000DB3 ED               [12] 2986 	mov	a,r5
      000DB4 A3               [24] 2987 	inc	dptr
      000DB5 F0               [24] 2988 	movx	@dptr,a
      000DB6 90r00r00         [24] 2989 	mov	dptr,#_spi_buffer_read_PARM_3
      000DB9 74r08            [12] 2990 	mov	a,#_buffer
      000DBB F0               [24] 2991 	movx	@dptr,a
      000DBC 74s00            [12] 2992 	mov	a,#(_buffer >> 8)
      000DBE A3               [24] 2993 	inc	dptr
      000DBF F0               [24] 2994 	movx	@dptr,a
      000DC0 E4               [12] 2995 	clr	a
      000DC1 A3               [24] 2996 	inc	dptr
      000DC2 F0               [24] 2997 	movx	@dptr,a
      000DC3 8E 82            [24] 2998 	mov	dpl, r6
      000DC5 8F 83            [24] 2999 	mov	dph, r7
      000DC7 12r00r00         [24] 3000 	lcall	_spi_buffer_read
      000DCA                       3001 00110$:
                                   3002 ;	trial_webserver.c:462: buffer[len] = 0; // Null-terminate
      000DCA 90r06r67         [24] 3003 	mov	dptr,#_packetReceive_len_10000_139
      000DCD E0               [24] 3004 	movx	a,@dptr
      000DCE FE               [12] 3005 	mov	r6,a
      000DCF A3               [24] 3006 	inc	dptr
      000DD0 E0               [24] 3007 	movx	a,@dptr
      000DD1 FF               [12] 3008 	mov	r7,a
      000DD2 EE               [12] 3009 	mov	a,r6
      000DD3 24r08            [12] 3010 	add	a, #_buffer
      000DD5 F5 82            [12] 3011 	mov	dpl,a
      000DD7 EF               [12] 3012 	mov	a,r7
      000DD8 34s00            [12] 3013 	addc	a, #(_buffer >> 8)
      000DDA F5 83            [12] 3014 	mov	dph,a
      000DDC E4               [12] 3015 	clr	a
      000DDD F0               [24] 3016 	movx	@dptr,a
                                   3017 ;	trial_webserver.c:463: unreleasedPacket = true;
      000DDE 90r06r66         [24] 3018 	mov	dptr,#_packetReceive_unreleasedPacket_10000_139
      000DE1 04               [12] 3019 	inc	a
      000DE2 F0               [24] 3020 	movx	@dptr,a
                                   3021 ;	trial_webserver.c:465: uint8_t ECON2 = mac_spi_read(0x1E, 0);
      000DE3 90r00r00         [24] 3022 	mov	dptr,#_mac_spi_read_PARM_2
      000DE6 E4               [12] 3023 	clr	a
      000DE7 F0               [24] 3024 	movx	@dptr,a
      000DE8 75 82 1E         [24] 3025 	mov	dpl, #0x1e
      000DEB 12r00r00         [24] 3026 	lcall	_mac_spi_read
      000DEE E5 82            [12] 3027 	mov	a, dpl
                                   3028 ;	trial_webserver.c:466: spi_control_write(0, 0x1E, (ECON2 | (1 << 6))); // Enable MAC reception
      000DF0 44 40            [12] 3029 	orl	a,#0x40
      000DF2 FF               [12] 3030 	mov	r7,a
      000DF3 90r00r00         [24] 3031 	mov	dptr,#_spi_control_write_PARM_2
      000DF6 74 1E            [12] 3032 	mov	a,#0x1e
      000DF8 F0               [24] 3033 	movx	@dptr,a
      000DF9 90r00r00         [24] 3034 	mov	dptr,#_spi_control_write_PARM_3
      000DFC EF               [12] 3035 	mov	a,r7
      000DFD F0               [24] 3036 	movx	@dptr,a
      000DFE 75 82 00         [24] 3037 	mov	dpl, #0x00
      000E01 12r00r00         [24] 3038 	lcall	_spi_control_write
      000E04                       3039 00112$:
                                   3040 ;	trial_webserver.c:469: return len;
      000E04 90r06r67         [24] 3041 	mov	dptr,#_packetReceive_len_10000_139
      000E07 E0               [24] 3042 	movx	a,@dptr
      000E08 FE               [12] 3043 	mov	r6,a
      000E09 A3               [24] 3044 	inc	dptr
      000E0A E0               [24] 3045 	movx	a,@dptr
                                   3046 ;	trial_webserver.c:470: }
      000E0B 8E 82            [24] 3047 	mov	dpl,r6
      000E0D F5 83            [12] 3048 	mov	dph,a
      000E0F 22               [24] 3049 	ret
                                   3050 ;------------------------------------------------------------
                                   3051 ;Allocation info for local variables in function 'packetLoop'
                                   3052 ;------------------------------------------------------------
                                   3053 ;plen                      Allocated with name '_packetLoop_plen_10000_149'
                                   3054 ;ethType                   Allocated with name '_packetLoop_ethType_20000_150'
                                   3055 ;tcpFlags                  Allocated with name '_packetLoop_tcpFlags_30000_153'
                                   3056 ;------------------------------------------------------------
                                   3057 ;	trial_webserver.c:472: void packetLoop(void)
                                   3058 ;	-----------------------------------------
                                   3059 ;	 function packetLoop
                                   3060 ;	-----------------------------------------
      000E10                       3061 _packetLoop:
                                   3062 ;	trial_webserver.c:474: uint16_t plen = packetReceive();
      000E10 12r0Cr56         [24] 3063 	lcall	_packetReceive
      000E13 AE 82            [24] 3064 	mov	r6, dpl
      000E15 AF 83            [24] 3065 	mov	r7, dph
                                   3066 ;	trial_webserver.c:477: if (plen > 0) {
      000E17 EE               [12] 3067 	mov	a,r6
      000E18 4F               [12] 3068 	orl	a,r7
      000E19 70 01            [24] 3069 	jnz	00219$
      000E1B 22               [24] 3070 	ret
      000E1C                       3071 00219$:
                                   3072 ;	trial_webserver.c:478: uint16_t ethType = (buffer[ETH_TYPE_H_P] << 8) | buffer[ETH_TYPE_L_P];
      000E1C 90r00r14         [24] 3073 	mov	dptr,#(_buffer + 0x000c)
      000E1F E0               [24] 3074 	movx	a,@dptr
      000E20 FC               [12] 3075 	mov	r4,a
      000E21 7D 00            [12] 3076 	mov	r5,#0x00
      000E23 90r00r15         [24] 3077 	mov	dptr,#(_buffer + 0x000d)
      000E26 E0               [24] 3078 	movx	a,@dptr
      000E27 FB               [12] 3079 	mov	r3,a
      000E28 7A 00            [12] 3080 	mov	r2,#0x00
      000E2A 42 05            [12] 3081 	orl	ar5,a
      000E2C EA               [12] 3082 	mov	a,r2
      000E2D 42 04            [12] 3083 	orl	ar4,a
                                   3084 ;	trial_webserver.c:479: if (ethType == ETH_TYPE_ARP) {
      000E2F BD 06 0F         [24] 3085 	cjne	r5,#0x06,00104$
      000E32 BC 08 0C         [24] 3086 	cjne	r4,#0x08,00104$
                                   3087 ;	trial_webserver.c:480: if (buffer[21] == 0x01) {
      000E35 90r00r1D         [24] 3088 	mov	dptr,#(_buffer + 0x0015)
      000E38 E0               [24] 3089 	movx	a,@dptr
      000E39 FB               [12] 3090 	mov	r3,a
      000E3A BB 01 03         [24] 3091 	cjne	r3,#0x01,00102$
                                   3092 ;	trial_webserver.c:481: makeArpReply();
                                   3093 ;	trial_webserver.c:483: return;
      000E3D 02r00r00         [24] 3094 	ljmp	_makeArpReply
      000E40                       3095 00102$:
      000E40 22               [24] 3096 	ret
      000E41                       3097 00104$:
                                   3098 ;	trial_webserver.c:486: if (ethType == ETH_TYPE_IP && buffer[IP_PROTO_P] == IP_PROTO_TCP)
      000E41 BD 00 05         [24] 3099 	cjne	r5,#0x00,00224$
      000E44 BC 08 02         [24] 3100 	cjne	r4,#0x08,00224$
      000E47 80 01            [24] 3101 	sjmp	00225$
      000E49                       3102 00224$:
      000E49 22               [24] 3103 	ret
      000E4A                       3104 00225$:
      000E4A 90r00r1F         [24] 3105 	mov	dptr,#(_buffer + 0x0017)
      000E4D E0               [24] 3106 	movx	a,@dptr
      000E4E FD               [12] 3107 	mov	r5,a
      000E4F BD 06 02         [24] 3108 	cjne	r5,#0x06,00226$
      000E52 80 01            [24] 3109 	sjmp	00227$
      000E54                       3110 00226$:
      000E54 22               [24] 3111 	ret
      000E55                       3112 00227$:
                                   3113 ;	trial_webserver.c:488: uint8_t tcpFlags = buffer[TCP_FLAGS_P];
      000E55 90r00r37         [24] 3114 	mov	dptr,#(_buffer + 0x002f)
      000E58 E0               [24] 3115 	movx	a,@dptr
                                   3116 ;	trial_webserver.c:491: if ((tcpFlags & TCP_FLAG_ACK) && (tcpFlags & TCP_FLAG_FIN)) {
      000E59 FD               [12] 3117 	mov	r5,a
      000E5A 30 E4 23         [24] 3118 	jnb	acc.4,00106$
      000E5D ED               [12] 3119 	mov	a,r5
      000E5E 30 E0 1F         [24] 3120 	jnb	acc.0,00106$
                                   3121 ;	trial_webserver.c:492: printf("TCP(ACK_FIN) packet detected\n\r");
      000E61 74rD9            [12] 3122 	mov	a,#___str_7
      000E63 C0 E0            [24] 3123 	push	acc
      000E65 74s03            [12] 3124 	mov	a,#(___str_7 >> 8)
      000E67 C0 E0            [24] 3125 	push	acc
      000E69 74 80            [12] 3126 	mov	a,#0x80
      000E6B C0 E0            [24] 3127 	push	acc
      000E6D 12r00r00         [24] 3128 	lcall	_printf
      000E70 15 81            [12] 3129 	dec	sp
      000E72 15 81            [12] 3130 	dec	sp
      000E74 15 81            [12] 3131 	dec	sp
                                   3132 ;	trial_webserver.c:493: makeTcpAck3(); // Send an acknowledgment
      000E76 12r01r79         [24] 3133 	lcall	_makeTcpAck3
                                   3134 ;	trial_webserver.c:494: connectionState = CLOSED;
      000E79 90r00r00         [24] 3135 	mov	dptr,#_connectionState
      000E7C 74 04            [12] 3136 	mov	a,#0x04
      000E7E F0               [24] 3137 	movx	@dptr,a
                                   3138 ;	trial_webserver.c:496: return;
      000E7F 22               [24] 3139 	ret
      000E80                       3140 00106$:
                                   3141 ;	trial_webserver.c:498: if ((tcpFlags & TCP_FLAG_SYN)) {
      000E80 ED               [12] 3142 	mov	a,r5
      000E81 30 E1 26         [24] 3143 	jnb	acc.1,00109$
                                   3144 ;	trial_webserver.c:499: printf("TCP(SYN) packet detected\n\r");
      000E84 C0 07            [24] 3145 	push	ar7
      000E86 C0 06            [24] 3146 	push	ar6
      000E88 C0 05            [24] 3147 	push	ar5
      000E8A 74rF8            [12] 3148 	mov	a,#___str_8
      000E8C C0 E0            [24] 3149 	push	acc
      000E8E 74s03            [12] 3150 	mov	a,#(___str_8 >> 8)
      000E90 C0 E0            [24] 3151 	push	acc
      000E92 74 80            [12] 3152 	mov	a,#0x80
      000E94 C0 E0            [24] 3153 	push	acc
      000E96 12r00r00         [24] 3154 	lcall	_printf
      000E99 15 81            [12] 3155 	dec	sp
      000E9B 15 81            [12] 3156 	dec	sp
      000E9D 15 81            [12] 3157 	dec	sp
      000E9F D0 05            [24] 3158 	pop	ar5
      000EA1 D0 06            [24] 3159 	pop	ar6
      000EA3 D0 07            [24] 3160 	pop	ar7
                                   3161 ;	trial_webserver.c:501: connectionState = LISTEN;
      000EA5 90r00r00         [24] 3162 	mov	dptr,#_connectionState
      000EA8 E4               [12] 3163 	clr	a
      000EA9 F0               [24] 3164 	movx	@dptr,a
      000EAA                       3165 00109$:
                                   3166 ;	trial_webserver.c:504: switch (connectionState) {
      000EAA 90r00r00         [24] 3167 	mov	dptr,#_connectionState
      000EAD E0               [24] 3168 	movx	a,@dptr
      000EAE FC               [12] 3169 	mov  r4,a
      000EAF 24 FA            [12] 3170 	add	a,#0xff - 0x05
      000EB1 50 01            [24] 3171 	jnc	00231$
      000EB3 22               [24] 3172 	ret
      000EB4                       3173 00231$:
      000EB4 EC               [12] 3174 	mov	a,r4
      000EB5 2C               [12] 3175 	add	a,r4
      000EB6 2C               [12] 3176 	add	a,r4
      000EB7 90r0ErBB         [24] 3177 	mov	dptr,#00232$
      000EBA 73               [24] 3178 	jmp	@a+dptr
      000EBB                       3179 00232$:
      000EBB 02r0ErCD         [24] 3180 	ljmp	00110$
      000EBE 02r0ErEE         [24] 3181 	ljmp	00113$
      000EC1 02r0Fr12         [24] 3182 	ljmp	00116$
      000EC4 02r0Fr4C         [24] 3183 	ljmp	00122$
      000EC7 02r0Fr79         [24] 3184 	ljmp	00133$
      000ECA 02r0Fr70         [24] 3185 	ljmp	00125$
                                   3186 ;	trial_webserver.c:505: case LISTEN:
      000ECD                       3187 00110$:
                                   3188 ;	trial_webserver.c:506: printf("listen\n\r");
      000ECD C0 05            [24] 3189 	push	ar5
      000ECF 74r13            [12] 3190 	mov	a,#___str_9
      000ED1 C0 E0            [24] 3191 	push	acc
      000ED3 74s04            [12] 3192 	mov	a,#(___str_9 >> 8)
      000ED5 C0 E0            [24] 3193 	push	acc
      000ED7 74 80            [12] 3194 	mov	a,#0x80
      000ED9 C0 E0            [24] 3195 	push	acc
      000EDB 12r00r00         [24] 3196 	lcall	_printf
      000EDE 15 81            [12] 3197 	dec	sp
      000EE0 15 81            [12] 3198 	dec	sp
      000EE2 15 81            [12] 3199 	dec	sp
      000EE4 D0 05            [24] 3200 	pop	ar5
                                   3201 ;	trial_webserver.c:507: if (tcpFlags & TCP_FLAG_SYN)
      000EE6 ED               [12] 3202 	mov	a,r5
      000EE7 20 E1 01         [24] 3203 	jb	acc.1,00233$
      000EEA 22               [24] 3204 	ret
      000EEB                       3205 00233$:
                                   3206 ;	trial_webserver.c:508: makeTcpSynAck();
                                   3207 ;	trial_webserver.c:509: break;
      000EEB 02r06rB8         [24] 3208 	ljmp	_makeTcpSynAck
                                   3209 ;	trial_webserver.c:510: case SYN_RECEIVED:
      000EEE                       3210 00113$:
                                   3211 ;	trial_webserver.c:511: printf("syn received\n\r");
      000EEE C0 05            [24] 3212 	push	ar5
      000EF0 74r1C            [12] 3213 	mov	a,#___str_10
      000EF2 C0 E0            [24] 3214 	push	acc
      000EF4 74s04            [12] 3215 	mov	a,#(___str_10 >> 8)
      000EF6 C0 E0            [24] 3216 	push	acc
      000EF8 74 80            [12] 3217 	mov	a,#0x80
      000EFA C0 E0            [24] 3218 	push	acc
      000EFC 12r00r00         [24] 3219 	lcall	_printf
      000EFF 15 81            [12] 3220 	dec	sp
      000F01 15 81            [12] 3221 	dec	sp
      000F03 15 81            [12] 3222 	dec	sp
      000F05 D0 05            [24] 3223 	pop	ar5
                                   3224 ;	trial_webserver.c:512: if (tcpFlags & TCP_FLAG_ACK)
      000F07 ED               [12] 3225 	mov	a,r5
      000F08 30 E4 6E         [24] 3226 	jnb	acc.4,00133$
                                   3227 ;	trial_webserver.c:513: connectionState = ESTABLISHED;
      000F0B 90r00r00         [24] 3228 	mov	dptr,#_connectionState
      000F0E 74 02            [12] 3229 	mov	a,#0x02
      000F10 F0               [24] 3230 	movx	@dptr,a
                                   3231 ;	trial_webserver.c:514: break;
                                   3232 ;	trial_webserver.c:515: case ESTABLISHED:
      000F11 22               [24] 3233 	ret
      000F12                       3234 00116$:
                                   3235 ;	trial_webserver.c:516: printf("established\n\r");
      000F12 C0 07            [24] 3236 	push	ar7
      000F14 C0 06            [24] 3237 	push	ar6
      000F16 C0 05            [24] 3238 	push	ar5
      000F18 74r2B            [12] 3239 	mov	a,#___str_11
      000F1A C0 E0            [24] 3240 	push	acc
      000F1C 74s04            [12] 3241 	mov	a,#(___str_11 >> 8)
      000F1E C0 E0            [24] 3242 	push	acc
      000F20 74 80            [12] 3243 	mov	a,#0x80
      000F22 C0 E0            [24] 3244 	push	acc
      000F24 12r00r00         [24] 3245 	lcall	_printf
      000F27 15 81            [12] 3246 	dec	sp
      000F29 15 81            [12] 3247 	dec	sp
      000F2B 15 81            [12] 3248 	dec	sp
      000F2D D0 05            [24] 3249 	pop	ar5
      000F2F D0 06            [24] 3250 	pop	ar6
      000F31 D0 07            [24] 3251 	pop	ar7
                                   3252 ;	trial_webserver.c:517: if (tcpFlags & TCP_FLAG_FIN) {
      000F33 ED               [12] 3253 	mov	a,r5
      000F34 30 E0 0A         [24] 3254 	jnb	acc.0,00120$
                                   3255 ;	trial_webserver.c:518: makeTcpAck();
      000F37 12r09r22         [24] 3256 	lcall	_makeTcpAck
                                   3257 ;	trial_webserver.c:519: connectionState = FIN_WAIT;
      000F3A 90r00r00         [24] 3258 	mov	dptr,#_connectionState
      000F3D 74 03            [12] 3259 	mov	a,#0x03
      000F3F F0               [24] 3260 	movx	@dptr,a
      000F40 22               [24] 3261 	ret
      000F41                       3262 00120$:
                                   3263 ;	trial_webserver.c:520: } else if (plen > TCP_DATA_START_P) {
      000F41 C3               [12] 3264 	clr	c
      000F42 74 36            [12] 3265 	mov	a,#0x36
      000F44 9E               [12] 3266 	subb	a,r6
      000F45 E4               [12] 3267 	clr	a
      000F46 9F               [12] 3268 	subb	a,r7
      000F47 50 30            [24] 3269 	jnc	00133$
                                   3270 ;	trial_webserver.c:521: makeTcpAck2();
                                   3271 ;	trial_webserver.c:524: break;
                                   3272 ;	trial_webserver.c:525: case FIN_WAIT:
      000F49 02r03rC0         [24] 3273 	ljmp	_makeTcpAck2
      000F4C                       3274 00122$:
                                   3275 ;	trial_webserver.c:526: printf("fin wait\n\r");
      000F4C C0 05            [24] 3276 	push	ar5
      000F4E 74r39            [12] 3277 	mov	a,#___str_12
      000F50 C0 E0            [24] 3278 	push	acc
      000F52 74s04            [12] 3279 	mov	a,#(___str_12 >> 8)
      000F54 C0 E0            [24] 3280 	push	acc
      000F56 74 80            [12] 3281 	mov	a,#0x80
      000F58 C0 E0            [24] 3282 	push	acc
      000F5A 12r00r00         [24] 3283 	lcall	_printf
      000F5D 15 81            [12] 3284 	dec	sp
      000F5F 15 81            [12] 3285 	dec	sp
      000F61 15 81            [12] 3286 	dec	sp
      000F63 D0 05            [24] 3287 	pop	ar5
                                   3288 ;	trial_webserver.c:527: if (tcpFlags & TCP_FLAG_ACK)
      000F65 ED               [12] 3289 	mov	a,r5
      000F66 30 E4 10         [24] 3290 	jnb	acc.4,00133$
                                   3291 ;	trial_webserver.c:528: connectionState = CLOSED;
      000F69 90r00r00         [24] 3292 	mov	dptr,#_connectionState
      000F6C 74 04            [12] 3293 	mov	a,#0x04
      000F6E F0               [24] 3294 	movx	@dptr,a
                                   3295 ;	trial_webserver.c:529: break;
                                   3296 ;	trial_webserver.c:530: case ACK_SENT:
      000F6F 22               [24] 3297 	ret
      000F70                       3298 00125$:
                                   3299 ;	trial_webserver.c:531: makeTcpFinPshAck();
      000F70 12r09rE7         [24] 3300 	lcall	_makeTcpFinPshAck
                                   3301 ;	trial_webserver.c:532: connectionState = CLOSED;
      000F73 90r00r00         [24] 3302 	mov	dptr,#_connectionState
      000F76 74 04            [12] 3303 	mov	a,#0x04
      000F78 F0               [24] 3304 	movx	@dptr,a
                                   3305 ;	trial_webserver.c:536: }
      000F79                       3306 00133$:
                                   3307 ;	trial_webserver.c:542: }
      000F79 22               [24] 3308 	ret
                                   3309 	.area CSEG    (CODE)
                                   3310 	.area CONST   (CODE)
                                   3311 	.area CONST   (CODE)
      000000                       3312 ___str_0:
      000000 74 72 69 61 6C 61 72  3313 	.ascii "trialarpreply"
             70 72 65 70 6C 79
      00000D 0A                    3314 	.db 0x0a
      00000E 0D                    3315 	.db 0x0d
      00000F 00                    3316 	.db 0x00
                                   3317 	.area CSEG    (CODE)
                                   3318 	.area CONST   (CODE)
      000010                       3319 ___str_1:
      000010 6D 61 6B 65 54 63 70  3320 	.ascii "makeTcpAck"
             41 63 6B
      00001A 0A                    3321 	.db 0x0a
      00001B 0D                    3322 	.db 0x0d
      00001C 00                    3323 	.db 0x00
                                   3324 	.area CSEG    (CODE)
                                   3325 	.area CONST   (CODE)
      00001D                       3326 ___str_2:
      00001D 6D 61 6B 65 54 63 70  3327 	.ascii "makeTcpSynAck"
             53 79 6E 41 63 6B
      00002A 0A                    3328 	.db 0x0a
      00002B 0D                    3329 	.db 0x0d
      00002C 00                    3330 	.db 0x00
                                   3331 	.area CSEG    (CODE)
                                   3332 	.area CONST   (CODE)
      00002D                       3333 ___str_3:
      00002D 63 6C 69 65 6E 74 53  3334 	.ascii "clientSeqNum = %ld"
             65 71 4E 75 6D 20 3D
             20 25 6C 64
      00003F 0A                    3335 	.db 0x0a
      000040 0D                    3336 	.db 0x0d
      000041 00                    3337 	.db 0x00
                                   3338 	.area CSEG    (CODE)
                                   3339 	.area CONST   (CODE)
      000042                       3340 ___str_4:
      000042 74 63 70 61 63 6B     3341 	.ascii "tcpack"
      000048 0A                    3342 	.db 0x0a
      000049 0D                    3343 	.db 0x0d
      00004A 00                    3344 	.db 0x00
                                   3345 	.area CSEG    (CODE)
                                   3346 	.area CONST   (CODE)
      00004B                       3347 ___str_5:
      00004B 48 54 54 50 2F 31 2E  3348 	.ascii "HTTP/1.1 200 OK"
             31 20 32 30 30 20 4F
             4B
      00005A 0D                    3349 	.db 0x0d
      00005B 0A                    3350 	.db 0x0a
      00005C 43 6F 6E 74 65 6E 74  3351 	.ascii "Content-Type: text/html"
             2D 54 79 70 65 3A 20
             74 65 78 74 2F 68 74
             6D 6C
      000073 0D                    3352 	.db 0x0d
      000074 0A                    3353 	.db 0x0a
      000075 43 6F 6E 74 65 6E 74  3354 	.ascii "Content-Length: 530"
             2D 4C 65 6E 67 74 68
             3A 20 35 33 30
      000088 0D                    3355 	.db 0x0d
      000089 0A                    3356 	.db 0x0a
      00008A 0D                    3357 	.db 0x0d
      00008B 0A                    3358 	.db 0x0a
      00008C 3C 21 44 4F 43 54 59  3359 	.ascii "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><"
             50 45 20 68 74 6D 6C
             3E 3C 68 74 6D 6C 20
             6C 61 6E 67 3D 27 65
             6E 27 3E 3C 68 65 61
             64 3E 3C 6D 65 74 61
             20 63 68 61 72 73 65
             74 3D 27 55 54 46 2D
             38 27 3E 3C
      0000C8 6D 65 74 61 20 6E 61  3360 	.ascii "meta name='viewport' content='width=device-width, initial-sc"
             6D 65 3D 27 76 69 65
             77 70 6F 72 74 27 20
             63 6F 6E 74 65 6E 74
             3D 27 77 69 64 74 68
             3D 64 65 76 69 63 65
             2D 77 69 64 74 68 2C
             20 69 6E 69 74 69 61
             6C 2D 73 63
      000104 61 6C 65 3D 31 2E 30  3361 	.ascii "ale=1.0'><title>Ethernet Web Server</title><style>body {font"
             27 3E 3C 74 69 74 6C
             65 3E 45 74 68 65 72
             6E 65 74 20 57 65 62
             20 53 65 72 76 65 72
             3C 2F 74 69 74 6C 65
             3E 3C 73 74 79 6C 65
             3E 62 6F 64 79 20 7B
             66 6F 6E 74
      000140 2D 66 61 6D 69 6C 79  3362 	.ascii "-family: Arial, sans-serif; background-color: #f0f0f0; text-"
             3A 20 41 72 69 61 6C
             2C 20 73 61 6E 73 2D
             73 65 72 69 66 3B 20
             62 61 63 6B 67 72 6F
             75 6E 64 2D 63 6F 6C
             6F 72 3A 20 23 66 30
             66 30 66 30 3B 20 74
             65 78 74 2D
      00017C 61 6C 69 67 6E 3A 20  3363 	.ascii "align: center; padding: 20px;}h1 {color: #333333;}p {color: "
             63 65 6E 74 65 72 3B
             20 70 61 64 64 69 6E
             67 3A 20 32 30 70 78
             3B 7D 68 31 20 7B 63
             6F 6C 6F 72 3A 20 23
             33 33 33 33 33 33 3B
             7D 70 20 7B 63 6F 6C
             6F 72 3A 20
      0001B8 23 36 36 36 36 36 36  3364 	.ascii "#666666;}</style></head><body><h1>ESD FALL 2024</h1><p>Ether"
             3B 7D 3C 2F 73 74 79
             6C 65 3E 3C 2F 68 65
             61 64 3E 3C 62 6F 64
             79 3E 3C 68 31 3E 45
             53 44 20 46 41 4C 4C
             20 32 30 32 34 3C 2F
             68 31 3E 3C 70 3E 45
             74 68 65 72
      0001F4 6E 65 74 20 62 61 73  3365 	.ascii "net based Web Server for Embedded Systems - NADGIR and KOPPA"
             65 64 20 57 65 62 20
             53 65 72 76 65 72 20
             66 6F 72 20 45 6D 62
             65 64 64 65 64 20 53
             79 73 74 65 6D 73 20
             2D 20 4E 41 44 47 49
             52 20 61 6E 64 20 4B
             4F 50 50 41
      000230 20 6D 61 64 65 20 69  3366 	.ascii " made itttt, lessgoooo!!! This web server showcases the powe"
             74 74 74 74 2C 20 6C
             65 73 73 67 6F 6F 6F
             6F 21 21 21 20 54 68
             69 73 20 77 65 62 20
             73 65 72 76 65 72 20
             73 68 6F 77 63 61 73
             65 73 20 74 68 65 20
             70 6F 77 65
      00026C 72 20 6F 66 20 6D 69  3367 	.ascii "r of microcontrollers and Ethernet communication. By leverag"
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 73
             20 61 6E 64 20 45 74
             68 65 72 6E 65 74 20
             63 6F 6D 6D 75 6E 69
             63 61 74 69 6F 6E 2E
             20 42 79 20 6C 65 76
             65 72 61 67
      0002A8 69 6E 67 20 74 68 65  3368 	.ascii "ing the AT89C51RC2 microcontroller and the ENC28J60 Ethernet"
             20 41 54 38 39 43 35
             31 52 43 32 20 6D 69
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 20
             61 6E 64 20 74 68 65
             20 45 4E 43 32 38 4A
             36 30 20 45 74 68 65
             72 6E 65 74
      0002E4 20 63 6F 6E 74 72 6F  3369 	.ascii " controller, we can serve dynamic web pages and control embe"
             6C 6C 65 72 2C 20 77
             65 20 63 61 6E 20 73
             65 72 76 65 20 64 79
             6E 61 6D 69 63 20 77
             65 62 20 70 61 67 65
             73 20 61 6E 64 20 63
             6F 6E 74 72 6F 6C 20
             65 6D 62 65
      000320 64 64 65 64 20 64 65  3370 	.ascii "dded devices remotely. The server allows seamless communicat"
             76 69 63 65 73 20 72
             65 6D 6F 74 65 6C 79
             2E 20 54 68 65 20 73
             65 72 76 65 72 20 61
             6C 6C 6F 77 73 20 73
             65 61 6D 6C 65 73 73
             20 63 6F 6D 6D 75 6E
             69 63 61 74
      00035C 69 6F 6E 20 62 65 74  3371 	.ascii "ion between hardware and software, enabling real-time data e"
             77 65 65 6E 20 68 61
             72 64 77 61 72 65 20
             61 6E 64 20 73 6F 66
             74 77 61 72 65 2C 20
             65 6E 61 62 6C 69 6E
             67 20 72 65 61 6C 2D
             74 69 6D 65 20 64 61
             74 61 20 65
      000398 78 63 68 61 6E 67 65  3372 	.ascii "xchange across the network.</p></body></html>"
             20 61 63 72 6F 73 73
             20 74 68 65 20 6E 65
             74 77 6F 72 6B 2E 3C
             2F 70 3E 3C 2F 62 6F
             64 79 3E 3C 2F 68 74
             6D 6C 3E
      0003C5 00                    3373 	.db 0x00
                                   3374 	.area CSEG    (CODE)
                                   3375 	.area CONST   (CODE)
      0003C6                       3376 ___str_6:
      0003C6 6D 61 6B 65 54 63 70  3377 	.ascii "makeTcpFinPshAck"
             46 69 6E 50 73 68 41
             63 6B
      0003D6 0A                    3378 	.db 0x0a
      0003D7 0D                    3379 	.db 0x0d
      0003D8 00                    3380 	.db 0x00
                                   3381 	.area CSEG    (CODE)
                                   3382 	.area CONST   (CODE)
      0003D9                       3383 ___str_7:
      0003D9 54 43 50 28 41 43 4B  3384 	.ascii "TCP(ACK_FIN) packet detected"
             5F 46 49 4E 29 20 70
             61 63 6B 65 74 20 64
             65 74 65 63 74 65 64
      0003F5 0A                    3385 	.db 0x0a
      0003F6 0D                    3386 	.db 0x0d
      0003F7 00                    3387 	.db 0x00
                                   3388 	.area CSEG    (CODE)
                                   3389 	.area CONST   (CODE)
      0003F8                       3390 ___str_8:
      0003F8 54 43 50 28 53 59 4E  3391 	.ascii "TCP(SYN) packet detected"
             29 20 70 61 63 6B 65
             74 20 64 65 74 65 63
             74 65 64
      000410 0A                    3392 	.db 0x0a
      000411 0D                    3393 	.db 0x0d
      000412 00                    3394 	.db 0x00
                                   3395 	.area CSEG    (CODE)
                                   3396 	.area CONST   (CODE)
      000413                       3397 ___str_9:
      000413 6C 69 73 74 65 6E     3398 	.ascii "listen"
      000419 0A                    3399 	.db 0x0a
      00041A 0D                    3400 	.db 0x0d
      00041B 00                    3401 	.db 0x00
                                   3402 	.area CSEG    (CODE)
                                   3403 	.area CONST   (CODE)
      00041C                       3404 ___str_10:
      00041C 73 79 6E 20 72 65 63  3405 	.ascii "syn received"
             65 69 76 65 64
      000428 0A                    3406 	.db 0x0a
      000429 0D                    3407 	.db 0x0d
      00042A 00                    3408 	.db 0x00
                                   3409 	.area CSEG    (CODE)
                                   3410 	.area CONST   (CODE)
      00042B                       3411 ___str_11:
      00042B 65 73 74 61 62 6C 69  3412 	.ascii "established"
             73 68 65 64
      000436 0A                    3413 	.db 0x0a
      000437 0D                    3414 	.db 0x0d
      000438 00                    3415 	.db 0x00
                                   3416 	.area CSEG    (CODE)
                                   3417 	.area CONST   (CODE)
      000439                       3418 ___str_12:
      000439 66 69 6E 20 77 61 69  3419 	.ascii "fin wait"
             74
      000441 0A                    3420 	.db 0x0a
      000442 0D                    3421 	.db 0x0d
      000443 00                    3422 	.db 0x00
                                   3423 	.area CSEG    (CODE)
                                   3424 	.area XINIT   (CODE)
      000000                       3425 __xinit__connectionState:
      000000 00                    3426 	.db #0x00	; 0
                                   3427 	.area CABS    (ABS,CODE)
